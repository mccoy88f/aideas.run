{"version":3,"mappings":"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","names":["StorageService","Dexie","primKey","obj","trans","appData","app","appId","error","options","query","tag","updates","metadata","updatedMetadata","key","apps","migrated","files","htmlFile","f","filePromises","file","defaultValue","setting","value","settings","result","transactions","action","data","eventIds","cat","deviceId","filename","ext","syncEvents","exportData","err","validApps","validCategories","favoriteApps","totalApps","totalFiles","settingsCount","lastInstall","latest","StorageService$1","toastCounter","showToast","message","type","duration","toastContainer","toastId","toast","icons","escapeHtml","closeBtn","actionBtn","removeToast","text","div","generateId","prefix","showConfirmPopup","resolve","title","icon","confirmText","cancelText","popup","iconHtml","confirmBtnClass","handleAction","e","btn","handleKeydown","UILoader","targetUI","initializeAIdeasWithMaterialUI","__vitePreload","loadingScreen","uiLoader"],"ignoreList":[],"sources":["../../src/services/StorageService.js","../../src/utils/helpers.js","../../src/ui-loader.js"],"sourcesContent":["import Dexie from 'dexie';\n\n/**\n * AIdeas Storage Service - Gestione IndexedDB con Dexie.js\n * Classe singleton per gestire tutto lo storage locale dell'applicazione\n */\nclass StorageService {\n  constructor() {\n    if (StorageService.instance) {\n      return StorageService.instance;\n    }\n\n    this.db = new Dexie('AIdeas_DB');\n    this.initDatabase();\n    StorageService.instance = this;\n  }\n\n  /**\n   * Inizializza lo schema del database\n   */\n  initDatabase() {\n    this.db.version(1).stores({\n      // Apps installate dall'utente\n      apps: '++id, name, description, category, version, url, type, githubUrl, installDate, lastUsed, favorite, *tags',\n      \n      // Files delle app (per ZIP imports) \n      appFiles: '++id, appId, filename, content, size, mimeType',\n      \n      // Impostazioni utente\n      settings: 'key, value, lastModified',\n      \n      // Eventi per sincronizzazione\n      syncEvents: '++id, timestamp, action, data, synced, deviceId',\n      \n      // Catalogo app store\n      catalog: '++id, name, description, author, githubUrl, rating, downloads, featured, *categories'\n    });\n\n    // Hook per validazione dati\n    this.db.apps.hook('creating', (primKey, obj, trans) => {\n      obj.installDate = obj.installDate || new Date();\n      obj.lastUsed = obj.lastUsed || new Date();\n      obj.favorite = obj.favorite || false;\n      obj.tags = obj.tags || [];\n    });\n\n    this.db.syncEvents.hook('creating', (primKey, obj, trans) => {\n      obj.timestamp = obj.timestamp || new Date();\n      obj.synced = obj.synced || false;\n      obj.deviceId = obj.deviceId || this.getDeviceId();\n    });\n  }\n\n  /**\n   * APPS MANAGEMENT\n   */\n\n  // Installa una nuova app\n  async installApp(appData) {\n    try {\n      const app = {\n        name: appData.name,\n        description: appData.description || '',\n        category: appData.category || 'uncategorized',\n        version: appData.version || '1.0.0',\n        url: appData.url || null,\n        type: appData.type, // 'zip', 'url', 'github', 'pwa', 'html'\n        githubUrl: appData.githubUrl || null,\n        icon: appData.icon || null,\n        manifest: appData.manifest || {},\n        permissions: appData.permissions || [],\n        tags: appData.tags || [],\n        metadata: appData.metadata || {},\n        content: appData.content || null, // Aggiungi campo per contenuto HTML\n        openMode: appData.openMode || (window?.appSettings?.defaultOpenMode || 'modal') // Nuovo campo\n      };\n\n      const appId = await this.db.apps.add(app);\n      \n      // Salva i file se è un'app ZIP\n      if (appData.files && appData.files.length > 0) {\n        await this.saveAppFiles(appId, appData.files);\n      }\n\n      // Registra evento sync\n      await this.addSyncEvent('app_installed', { appId, app });\n\n      return appId;\n    } catch (error) {\n      console.error('Errore installazione app:', error);\n      throw new Error(`Impossibile installare l'app: ${error.message}`);\n    }\n  }\n\n  // Ottieni tutte le app\n  async getAllApps(options = {}) {\n    try {\n      let query = this.db.apps.orderBy('lastUsed').reverse();\n\n      if (options.category) {\n        query = query.filter(app => app.category === options.category);\n      }\n\n      if (options.search) {\n        query = query.filter(app => \n          app.name.toLowerCase().includes(options.search.toLowerCase()) ||\n          app.description.toLowerCase().includes(options.search.toLowerCase()) ||\n          app.tags.some(tag => tag.toLowerCase().includes(options.search.toLowerCase()))\n        );\n      }\n\n      if (options.favorite) {\n        query = query.filter(app => app.favorite === true);\n      }\n\n      return await query.toArray();\n    } catch (error) {\n      console.error('Errore recupero app:', error);\n      return [];\n    }\n  }\n\n  // Ottieni app per ID\n  async getApp(appId) {\n    try {\n      return await this.db.apps.get(appId);\n    } catch (error) {\n      console.error('Errore recupero app:', error);\n      return null;\n    }\n  }\n\n  // Aggiorna app\n  async updateApp(appId, updates) {\n    try {\n      await this.db.apps.update(appId, updates);\n      await this.addSyncEvent('app_updated', { appId, updates });\n      return true;\n    } catch (error) {\n      console.error('Errore aggiornamento app:', error);\n      return false;\n    }\n  }\n\n  // Aggiorna metadati specifici di un'app (CSP, domini esterni, ecc.)\n  async setAppMetadata(appId, metadata) {\n    try {\n      const app = await this.getApp(appId);\n      if (!app) {\n        throw new Error('App non trovata');\n      }\n\n      // Unisci i metadati esistenti con quelli nuovi\n      const updatedMetadata = {\n        ...app.metadata,\n        ...metadata\n      };\n\n      await this.db.apps.update(appId, { metadata: updatedMetadata });\n      console.log(`✅ Metadati aggiornati per app ${appId}:`, metadata);\n      return true;\n    } catch (error) {\n      console.error('Errore aggiornamento metadati app:', error);\n      return false;\n    }\n  }\n\n  // Ottieni metadati specifici di un'app\n  async getAppMetadata(appId, key = null) {\n    try {\n      const app = await this.getApp(appId);\n      if (!app || !app.metadata) {\n        return null;\n      }\n\n      if (key) {\n        return app.metadata[key] || null;\n      }\n\n      return app.metadata;\n    } catch (error) {\n      console.error('Errore recupero metadati app:', error);\n      return null;\n    }\n  }\n\n  // Migra app esistenti per aggiungere campo content se mancante\n  async migrateAppsForContent() {\n    try {\n      console.log('🔄 Inizio migrazione app HTML...');\n      const apps = await this.db.apps.toArray();\n      console.log(`📊 Trovate ${apps.length} app totali`);\n      \n      let migrated = 0;\n      \n      for (const app of apps) {\n        console.log(`🔍 Controllo app: ${app.name} (tipo: ${app.type})`);\n        \n        if (app.type === 'html' && !app.content) {\n          console.log(`📝 App HTML senza contenuto trovata: ${app.name}`);\n          \n          // Per le app HTML senza contenuto, prova a recuperarlo dai file\n          const files = await this.getAppFiles(app.id);\n          console.log(`📁 Trovati ${files.length} file per app ${app.name}`);\n          \n          const htmlFile = files.find(f => f.filename.endsWith('.html'));\n          \n          if (htmlFile) {\n            console.log(`✅ File HTML trovato: ${htmlFile.filename}`);\n            await this.db.apps.update(app.id, { content: htmlFile.content });\n            migrated++;\n            console.log(`✅ App ${app.name} migrata con successo`);\n          } else {\n            console.log(`⚠️ Nessun file HTML trovato per app ${app.name}`);\n          }\n        }\n      }\n      \n      if (migrated > 0) {\n        console.log(`✅ Migrate ${migrated} app HTML per aggiungere campo content`);\n      } else {\n        console.log('ℹ️ Nessuna app HTML da migrare');\n      }\n      \n      return migrated;\n    } catch (error) {\n      console.error('❌ Errore migrazione app:', error);\n      console.error('Stack trace:', error.stack);\n      return 0;\n    }\n  }\n\n  // Elimina app\n  async deleteApp(appId) {\n    try {\n      await this.db.transaction('rw', [this.db.apps, this.db.appFiles], async () => {\n        await this.db.apps.delete(appId);\n        await this.db.appFiles.where('appId').equals(appId).delete();\n      });\n\n      await this.addSyncEvent('app_deleted', { appId });\n      return true;\n    } catch (error) {\n      console.error('Errore eliminazione app:', error);\n      return false;\n    }\n  }\n\n  // Aggiorna ultimo utilizzo\n  async updateLastUsed(appId) {\n    try {\n      await this.db.apps.update(appId, { lastUsed: new Date() });\n    } catch (error) {\n      console.error('Errore aggiornamento ultimo utilizzo:', error);\n    }\n  }\n\n  // Toggle preferito\n  async toggleFavorite(appId) {\n    try {\n      const app = await this.db.apps.get(appId);\n      if (app) {\n        await this.db.apps.update(appId, { favorite: !app.favorite });\n        return !app.favorite;\n      }\n      return false;\n    } catch (error) {\n      console.error('Errore toggle preferito:', error);\n      return false;\n    }\n  }\n\n  /**\n   * APP FILES MANAGEMENT\n   */\n\n  // Salva file di un'app\n  async saveAppFiles(appId, files) {\n    try {\n      const filePromises = files.map(file => \n        this.db.appFiles.add({\n          appId,\n          filename: file.filename,\n          content: file.content,\n          size: file.size || file.content.length,\n          mimeType: file.mimeType || this.getMimeType(file.filename)\n        })\n      );\n\n      await Promise.all(filePromises);\n      return true;\n    } catch (error) {\n      console.error('Errore salvataggio file app:', error);\n      return false;\n    }\n  }\n\n  // Ottieni file di un'app\n  async getAppFiles(appId) {\n    try {\n      return await this.db.appFiles.where('appId').equals(appId).toArray();\n    } catch (error) {\n      console.error('Errore recupero file app:', error);\n      return [];\n    }\n  }\n\n  /**\n   * SETTINGS MANAGEMENT  \n   */\n\n  // Ottieni impostazione\n  async getSetting(key, defaultValue = null) {\n    try {\n      const setting = await this.db.settings.get(key);\n      return setting ? setting.value : defaultValue;\n    } catch (error) {\n      console.error('Errore recupero impostazione:', error);\n      return defaultValue;\n    }\n  }\n\n  // Salva impostazione\n  async setSetting(key, value) {\n    try {\n      await this.db.settings.put({\n        key,\n        value,\n        lastModified: new Date()\n      });\n      return true;\n    } catch (error) {\n      console.error('Errore salvataggio impostazione:', error);\n      return false;\n    }\n  }\n\n  // Ottieni tutte le impostazioni\n  async getAllSettings() {\n    try {\n      const settings = await this.db.settings.toArray();\n      const result = {};\n      settings.forEach(setting => {\n        result[setting.key] = setting.value;\n      });\n      return result;\n    } catch (error) {\n      console.error('Errore recupero impostazioni:', error);\n      return {};\n    }\n  }\n\n  // Salva tutte le impostazioni\n  async setAllSettings(settings) {\n    try {\n      const transactions = [];\n      \n      for (const [key, value] of Object.entries(settings)) {\n        transactions.push(\n          this.db.settings.put({\n            key,\n            value,\n            lastModified: new Date()\n          })\n        );\n      }\n      \n      await Promise.all(transactions);\n      return true;\n    } catch (error) {\n      console.error('Errore salvataggio impostazioni:', error);\n      return false;\n    }\n  }\n\n  /**\n   * SYNC EVENTS MANAGEMENT\n   */\n\n  // Aggiungi evento sync\n  async addSyncEvent(action, data) {\n    try {\n      await this.db.syncEvents.add({\n        action,\n        data,\n        timestamp: new Date(),\n        synced: false,\n        deviceId: await this.getDeviceId()\n      });\n    } catch (error) {\n      console.error('Errore aggiunta evento sync:', error);\n    }\n  }\n\n  // Ottieni eventi non sincronizzati\n  async getUnsyncedEvents() {\n    try {\n      return await this.db.syncEvents.where('synced').equals(false).toArray();\n    } catch (error) {\n      console.error('Errore recupero eventi non sincronizzati:', error);\n      return [];\n    }\n  }\n\n  // Marca eventi come sincronizzati\n  async markEventsSynced(eventIds) {\n    try {\n      await this.db.syncEvents.where('id').anyOf(eventIds).modify({ synced: true });\n    } catch (error) {\n      console.error('Errore aggiornamento eventi sync:', error);\n    }\n  }\n\n  /**\n   * CATALOG MANAGEMENT\n   */\n\n  // Aggiorna catalogo\n  async updateCatalog(apps) {\n    try {\n      await this.db.catalog.clear();\n      await this.db.catalog.bulkAdd(apps);\n      return true;\n    } catch (error) {\n      console.error('Errore aggiornamento catalogo:', error);\n      return false;\n    }\n  }\n\n  // Cerca nel catalogo\n  async searchCatalog(query, options = {}) {\n    try {\n      let result = this.db.catalog.orderBy('downloads').reverse();\n\n      if (query) {\n        result = result.filter(app =>\n          app.name.toLowerCase().includes(query.toLowerCase()) ||\n          app.description.toLowerCase().includes(query.toLowerCase()) ||\n          app.categories.some(cat => cat.toLowerCase().includes(query.toLowerCase()))\n        );\n      }\n\n      if (options.category) {\n        result = result.filter(app => app.categories.includes(options.category));\n      }\n\n      if (options.featured) {\n        result = result.filter(app => app.featured === true);\n      }\n\n      return await result.limit(options.limit || 50).toArray();\n    } catch (error) {\n      console.error('Errore ricerca catalogo:', error);\n      return [];\n    }\n  }\n\n  /**\n   * UTILITY METHODS\n   */\n\n  // Ottieni ID dispositivo univoco\n  async getDeviceId() {\n    let deviceId = await this.getSetting('deviceId');\n    if (!deviceId) {\n      deviceId = 'device_' + Math.random().toString(36).substr(2, 9) + '_' + Date.now();\n      await this.setSetting('deviceId', deviceId);\n    }\n    return deviceId;\n  }\n\n  // Ottieni MIME type da filename\n  getMimeType(filename) {\n    const ext = filename.split('.').pop().toLowerCase();\n    const mimeTypes = {\n      'html': 'text/html',\n      'css': 'text/css',\n      'js': 'application/javascript',\n      'json': 'application/json',\n      'png': 'image/png',\n      'jpg': 'image/jpeg',\n      'jpeg': 'image/jpeg',\n      'gif': 'image/gif',\n      'svg': 'image/svg+xml',\n      'txt': 'text/plain'\n    };\n    return mimeTypes[ext] || 'application/octet-stream';\n  }\n\n  // Esporta tutti i dati\n  async exportAllData() {\n    try {\n      const [apps, settings, syncEvents] = await Promise.all([\n        this.db.apps.toArray(),\n        this.db.settings.toArray(),\n        this.db.syncEvents.toArray()\n      ]);\n\n      return {\n        version: '1.0.0',\n        timestamp: new Date().toISOString(),\n        deviceId: await this.getDeviceId(),\n        data: { apps, settings, syncEvents }\n      };\n    } catch (error) {\n      console.error('Errore export dati:', error);\n      throw error;\n    }\n  }\n\n  // Importa dati\n  async importData(exportData) {\n    try {\n      if (!exportData.data) {\n        throw new Error('Formato dati non valido');\n      }\n\n      const { apps, settings, syncEvents } = exportData.data;\n\n      await this.db.transaction('rw', [this.db.apps, this.db.settings, this.db.syncEvents], async () => {\n        if (apps) await this.db.apps.bulkPut(apps);\n        if (settings) await this.db.settings.bulkPut(settings);\n        if (syncEvents) await this.db.syncEvents.bulkPut(syncEvents);\n      });\n\n      return true;\n    } catch (error) {\n      console.error('Errore import dati:', error);\n      throw error;\n    }\n  }\n\n  // Assicura che il database sia aperto\n  async ensureDbOpen() {\n    if (!this.db.isOpen()) {\n      try {\n        await this.db.open();\n        console.log('📂 Database riaperto con successo');\n      } catch (err) {\n        console.error('❌ Errore riapertura database:', err);\n      }\n    }\n  }\n\n  // Ottieni statistiche\n  async getStats() {\n    try {\n      await this.ensureDbOpen();\n      // Verifica che il database sia inizializzato\n      if (!this.db || !this.db.isOpen()) {\n        console.warn('Database non inizializzato');\n        return null;\n      }\n      // Recupera tutte le app per filtrare dati corrotti\n      const allApps = await this.db.apps.toArray().catch(() => []);\n      // Filtra solo app con campi validi\n      const validApps = allApps.filter(app => app && typeof app === 'object');\n      const validCategories = validApps.map(app => app.category).filter(cat => typeof cat === 'string' && cat.length > 0);\n      const favoriteApps = validApps.filter(app => app.favorite === true).length;\n      const totalApps = validApps.length;\n      const totalFiles = await this.db.appFiles.count().catch(() => 0);\n      const settingsCount = await this.db.settings.count().catch(() => 0);\n      const lastInstall = validApps.length > 0 ? validApps.reduce((latest, app) => {\n        if (app.installDate && (!latest || new Date(app.installDate) > new Date(latest))) {\n          return app.installDate;\n        }\n        return latest;\n      }, null) : null;\n      return {\n        totalApps,\n        totalFiles,\n        settingsCount,\n        favoriteApps,\n        categories: Array.from(new Set(validCategories)).length,\n        lastInstall,\n        dbSize: await this.estimateDbSize()\n      };\n    } catch (error) {\n      console.error('Errore recupero statistiche:', error);\n      return null;\n    }\n  }\n\n  // Stima dimensione database\n  async estimateDbSize() {\n    try {\n      if ('storage' in navigator && 'estimate' in navigator.storage) {\n        const estimate = await navigator.storage.estimate();\n        return estimate.usage || 0;\n      }\n      return 0;\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  // Chiudi connessione database\n  async close() {\n    if (this.db) {\n      this.db.close();\n    }\n  }\n}\n\n// Esporta istanza singleton\nexport default new StorageService();","/**\n * AIdeas - Utility Functions & Helpers\n * Funzioni di utilità per l'applicazione\n */\n\n/**\n * TOAST NOTIFICATIONS\n */\n\nlet toastCounter = 0;\n\n/**\n * Mostra una notifica toast\n * @param {string} message - Messaggio da mostrare\n * @param {string} type - Tipo: 'success', 'error', 'warning', 'info'\n * @param {number} duration - Durata in ms (default 4000)\n * @param {Object} options - Opzioni aggiuntive\n */\nexport function showToast(message, type = 'info', duration = 4000, options = {}) {\n  const toastContainer = document.getElementById('toast-container');\n  if (!toastContainer) {\n    console.warn('Toast container non trovato');\n    return;\n  }\n\n  const toastId = `toast-${++toastCounter}`;\n  const toast = document.createElement('div');\n  \n  toast.id = toastId;\n  toast.className = `toast toast-${type}`;\n  toast.setAttribute('role', 'alert');\n  toast.setAttribute('aria-live', 'polite');\n  \n  // Icone per i diversi tipi\n  const icons = {\n    success: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z\"/>\n    </svg>`,\n    error: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"/>\n    </svg>`,\n    warning: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M13,13H11V7H13M12,17.3A1.3,1.3 0 0,1 10.7,16A1.3,1.3 0 0,1 12,14.7A1.3,1.3 0 0,1 13.3,16A1.3,1.3 0 0,1 12,17.3M15.73,3H8.27L3,8.27V15.73L8.27,21H15.73L21,15.73V8.27L15.73,3Z\"/>\n    </svg>`,\n    info: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"/>\n    </svg>`\n  };\n\n  toast.innerHTML = `\n    <div class=\"toast-icon\">\n      ${icons[type] || icons.info}\n    </div>\n    <div class=\"toast-content\">\n      <div class=\"toast-message\">${escapeHtml(message)}</div>\n      ${options.action ? `<button class=\"toast-action\">${options.action}</button>` : ''}\n    </div>\n    <button class=\"toast-close\" aria-label=\"Chiudi notifica\">\n      <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"/>\n      </svg>\n    </button>\n  `;\n\n  // Event listeners\n  const closeBtn = toast.querySelector('.toast-close');\n  const actionBtn = toast.querySelector('.toast-action');\n  \n  const removeToast = () => {\n    toast.classList.add('toast-removing');\n    setTimeout(() => {\n      if (toast.parentNode) {\n        toast.parentNode.removeChild(toast);\n      }\n    }, 300);\n  };\n\n  closeBtn.addEventListener('click', removeToast);\n  \n  if (actionBtn && options.onAction) {\n    actionBtn.addEventListener('click', () => {\n      options.onAction();\n      removeToast();\n    });\n  }\n\n  // Aggiungi al container\n  toastContainer.appendChild(toast);\n  \n  // Animazione di entrata\n  requestAnimationFrame(() => {\n    toast.classList.add('toast-show');\n  });\n\n  // Auto-remove dopo duration\n  if (duration > 0) {\n    setTimeout(removeToast, duration);\n  }\n\n  return toastId;\n}\n\n/**\n * Rimuove un toast specifico\n * @param {string} toastId - ID del toast da rimuovere\n */\nexport function removeToast(toastId) {\n  const toast = document.getElementById(toastId);\n  if (toast) {\n    toast.querySelector('.toast-close').click();\n  }\n}\n\n/**\n * Rimuove tutti i toast\n */\nexport function clearAllToasts() {\n  const toasts = document.querySelectorAll('.toast');\n  toasts.forEach(toast => {\n    toast.querySelector('.toast-close').click();\n  });\n}\n\n/**\n * Nasconde un toast specifico (alias per removeToast)\n * @param {string} toastId - ID del toast da nascondere\n */\nexport function hideToast(toastId) {\n  if (toastId) {\n    removeToast(toastId);\n  } else {\n    // Se non specificato, nasconde tutti i toast\n    clearAllToasts();\n  }\n}\n\n/**\n * MODAL MANAGEMENT\n */\n\n/**\n * Mostra un modal\n * @param {string} modalId - ID del modal\n * @param {string} content - Contenuto HTML del modal\n * @param {Object} options - Opzioni aggiuntive\n */\nexport function showModal(modalId, content, options = {}) {\n  const modalsContainer = document.getElementById('modals-container');\n  if (!modalsContainer) {\n    console.warn('Modals container non trovato');\n    return;\n  }\n\n  // Rimuovi modal esistente con stesso ID\n  const existingModal = document.getElementById(modalId);\n  if (existingModal) {\n    existingModal.remove();\n  }\n\n  const modal = document.createElement('div');\n  modal.id = modalId;\n  modal.className = 'modal';\n  modal.setAttribute('role', 'dialog');\n  modal.setAttribute('aria-modal', 'true');\n  modal.setAttribute('aria-labelledby', `${modalId}-title`);\n\n  modal.innerHTML = `\n    <div class=\"modal-backdrop\"></div>\n    <div class=\"modal-dialog ${options.size || 'modal-md'}\">\n      <div class=\"modal-content\">\n        ${content}\n      </div>\n    </div>\n  `;\n\n  // Event listeners\n  const backdrop = modal.querySelector('.modal-backdrop');\n  const closeButtons = modal.querySelectorAll('.modal-close');\n\n  const closeModal = (e) => {\n    if (e) e.preventDefault();\n    modal.classList.add('modal-closing');\n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n      // Ripristina focus\n      if (options.returnFocus) {\n        options.returnFocus.focus();\n      }\n    }, 300);\n  };\n\n  // Click su backdrop\n  if (!options.disableBackdropClose) {\n    backdrop.addEventListener('click', closeModal);\n  }\n\n  // Click sui pulsanti close\n  closeButtons.forEach(btn => {\n    btn.addEventListener('click', closeModal);\n  });\n\n  // Escape key\n  const handleEscape = (e) => {\n    if (e.key === 'Escape' && !options.disableEscapeClose) {\n      closeModal();\n      document.removeEventListener('keydown', handleEscape);\n    }\n  };\n  document.addEventListener('keydown', handleEscape);\n\n  // Salva focus corrente\n  const currentFocus = document.activeElement;\n  options.returnFocus = currentFocus;\n\n  // Aggiungi al DOM\n  modalsContainer.appendChild(modal);\n\n  // Animazione di entrata\n  requestAnimationFrame(() => {\n    modal.classList.add('modal-show');\n    \n    // Focus sul primo elemento focusabile\n    const focusableElements = modal.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    if (focusableElements.length > 0) {\n      focusableElements[0].focus();\n    }\n  });\n\n  return modal;\n}\n\n/**\n * Nasconde un modal\n * @param {string} modalId - ID del modal da nascondere\n */\nexport function hideModal(modalId) {\n  const modal = document.getElementById(modalId);\n  if (modal) {\n    const closeBtn = modal.querySelector('.modal-close');\n    if (closeBtn) {\n      closeBtn.click();\n    }\n  }\n}\n\n/**\n * Nasconde tutti i modal\n */\nexport function hideAllModals() {\n  const modals = document.querySelectorAll('.modal');\n  modals.forEach(modal => {\n    hideModal(modal.id);\n  });\n}\n\n/**\n * UTILITY FUNCTIONS\n */\n\n/**\n * Escape HTML per prevenire XSS\n * @param {string} text - Testo da escapare\n * @returns {string} Testo escapato\n */\nexport function escapeHtml(text) {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n/**\n * Formatta dimensione file in formato leggibile\n * @param {number} bytes - Dimensione in bytes\n * @param {number} decimals - Numero di decimali (default 2)\n * @returns {string} Dimensione formattata\n */\nexport function formatFileSize(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n/**\n * Formatta data in formato locale\n * @param {Date|string|number} date - Data da formattare\n * @param {Object} options - Opzioni Intl.DateTimeFormat\n * @returns {string} Data formattata\n */\nexport function formatDate(date, options = {}) {\n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Data non valida';\n\n  const defaultOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n\n  return new Intl.DateTimeFormat('it-IT', { ...defaultOptions, ...options }).format(dateObj);\n}\n\n/**\n * Formatta data relativa (es. \"2 ore fa\")\n * @param {Date|string|number} date - Data da formattare\n * @returns {string} Data relativa\n */\nexport function formatRelativeDate(date) {\n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Data non valida';\n\n  const now = new Date();\n  const diffMs = now - dateObj;\n  const diffSeconds = Math.floor(diffMs / 1000);\n  const diffMinutes = Math.floor(diffSeconds / 60);\n  const diffHours = Math.floor(diffMinutes / 60);\n  const diffDays = Math.floor(diffHours / 24);\n  const diffWeeks = Math.floor(diffDays / 7);\n  const diffMonths = Math.floor(diffDays / 30);\n  const diffYears = Math.floor(diffDays / 365);\n\n  if (diffSeconds < 60) return 'Proprio ora';\n  if (diffMinutes < 60) return `${diffMinutes} minut${diffMinutes === 1 ? 'o' : 'i'} fa`;\n  if (diffHours < 24) return `${diffHours} or${diffHours === 1 ? 'a' : 'e'} fa`;\n  if (diffDays < 7) return `${diffDays} giorn${diffDays === 1 ? 'o' : 'i'} fa`;\n  if (diffWeeks < 4) return `${diffWeeks} settiman${diffWeeks === 1 ? 'a' : 'e'} fa`;\n  if (diffMonths < 12) return `${diffMonths} mes${diffMonths === 1 ? 'e' : 'i'} fa`;\n  return `${diffYears} ann${diffYears === 1 ? 'o' : 'i'} fa`;\n}\n\n/**\n * Genera ID univoco\n * @param {string} prefix - Prefisso per l'ID\n * @returns {string} ID univoco\n */\nexport function generateId(prefix = 'id') {\n  return `${prefix}-${Math.random().toString(36).substr(2, 9)}-${Date.now()}`;\n}\n\n/**\n * Debounce function per ottimizzare performance\n * @param {Function} func - Funzione da eseguire\n * @param {number} wait - Millisecondi di attesa\n * @param {boolean} immediate - Esecuzione immediata\n * @returns {Function} Funzione debounced\n */\nexport function debounce(func, wait, immediate = false) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(this, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(this, args);\n  };\n}\n\n/**\n * Throttle function per limitare chiamate\n * @param {Function} func - Funzione da eseguire\n * @param {number} limit - Limite in millisecondi\n * @returns {Function} Funzione throttled\n */\nexport function throttle(func, limit) {\n  let inThrottle;\n  return function executedFunction(...args) {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\n/**\n * Copia testo negli appunti\n * @param {string} text - Testo da copiare\n * @returns {Promise<boolean>} Successo dell'operazione\n */\nexport async function copyToClipboard(text) {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } else {\n      // Fallback per browser più vecchi\n      const textArea = document.createElement('textarea');\n      textArea.value = text;\n      textArea.style.cssText = 'position: fixed; left: -999999px; top: -999999px;';\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      \n      const success = document.execCommand('copy');\n      document.body.removeChild(textArea);\n      return success;\n    }\n  } catch (error) {\n    console.error('Errore copia negli appunti:', error);\n    return false;\n  }\n}\n\n/**\n * Verifica se il dispositivo è mobile\n * @returns {boolean} True se è mobile\n */\nexport function isMobile() {\n  return window.innerWidth <= 768 || /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\n/**\n * Verifica se il dispositivo supporta le PWA\n * @returns {boolean} True se supporta PWA\n */\nexport function isPWASupported() {\n  return 'serviceWorker' in navigator && 'manifests' in window;\n}\n\n/**\n * Ottieni informazioni sul dispositivo\n * @returns {Object} Info dispositivo\n */\nexport function getDeviceInfo() {\n  return {\n    userAgent: navigator.userAgent,\n    platform: navigator.platform,\n    language: navigator.language,\n    online: navigator.onLine,\n    cookieEnabled: navigator.cookieEnabled,\n    screen: {\n      width: screen.width,\n      height: screen.height,\n      colorDepth: screen.colorDepth\n    },\n    viewport: {\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    isMobile: isMobile(),\n    isPWASupported: isPWASupported()\n  };\n}\n\n/**\n * Valida URL\n * @param {string} url - URL da validare\n * @returns {boolean} True se valido\n */\nexport function isValidUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Estrae dominio da URL\n * @param {string} url - URL di origine\n * @returns {string} Dominio estratto\n */\nexport function extractDomain(url) {\n  try {\n    return new URL(url).hostname;\n  } catch {\n    return '';\n  }\n}\n\n/**\n * Converte blob in base64\n * @param {Blob} blob - Blob da convertire\n * @returns {Promise<string>} Base64 string\n */\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result.split(',')[1]);\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  });\n}\n\n/**\n * Converte base64 in blob\n * @param {string} base64 - String base64\n * @param {string} mimeType - Tipo MIME\n * @returns {Blob} Blob risultante\n */\nexport function base64ToBlob(base64, mimeType) {\n  const byteCharacters = atob(base64);\n  const byteNumbers = new Array(byteCharacters.length);\n  \n  for (let i = 0; i < byteCharacters.length; i++) {\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\n  }\n  \n  const byteArray = new Uint8Array(byteNumbers);\n  return new Blob([byteArray], { type: mimeType });\n}\n\n/**\n * Scarica file dal browser\n * @param {string|Blob} data - Dati da scaricare\n * @param {string} filename - Nome file\n * @param {string} mimeType - Tipo MIME (se data è string)\n */\nexport function downloadFile(data, filename, mimeType = 'application/octet-stream') {\n  const blob = data instanceof Blob ? data : new Blob([data], { type: mimeType });\n  const url = URL.createObjectURL(blob);\n  \n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n}\n\n/**\n * Ottieni hash di una stringa\n * @param {string} str - Stringa di input\n * @returns {Promise<string>} Hash SHA-256\n */\nexport async function getStringHash(str) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(str);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n/**\n * Sleep utility per async/await\n * @param {number} ms - Millisecondi di attesa\n * @returns {Promise} Promise che si risolve dopo ms\n */\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Mostra un popup di conferma personalizzato\n * @param {Object} options - Opzioni del popup\n * @param {string} options.title - Titolo del popup\n * @param {string} options.message - Messaggio del popup\n * @param {string} options.icon - Icona (opzionale)\n * @param {string} options.confirmText - Testo del pulsante conferma\n * @param {string} options.cancelText - Testo del pulsante annulla\n * @param {string} options.type - Tipo di popup (default, danger, warning)\n * @returns {Promise<boolean>} - True se confermato, false se annullato\n */\nexport function showConfirmPopup(options = {}) {\n  return new Promise((resolve) => {\n    const {\n      title = 'Conferma',\n      message = 'Sei sicuro di voler continuare?',\n      icon = 'question',\n      confirmText = 'Conferma',\n      cancelText = 'Annulla',\n      type = 'default'\n    } = options;\n\n    // Crea il popup\n    const popup = document.createElement('div');\n    popup.className = 'confirm-popup';\n    \n    // Icone per tipo\n    const icons = {\n      question: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"confirm-popup-icon\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"/>\n      </svg>`,\n      warning: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"confirm-popup-icon\">\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"/>\n      </svg>`,\n      danger: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"confirm-popup-icon\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n      </svg>`,\n      info: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"confirm-popup-icon\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"/>\n      </svg>`\n    };\n\n    const iconHtml = icons[icon] || icons.question;\n    const confirmBtnClass = type === 'danger' ? 'confirm-popup-btn-danger' : 'confirm-popup-btn-primary';\n\n    popup.innerHTML = `\n      <div class=\"confirm-popup-content\">\n        <div class=\"confirm-popup-header\">\n          <h3 class=\"confirm-popup-title\">\n            ${iconHtml}\n            ${title}\n          </h3>\n        </div>\n        <div class=\"confirm-popup-body\">\n          ${message}\n        </div>\n        <div class=\"confirm-popup-footer\">\n          <button class=\"confirm-popup-btn confirm-popup-btn-secondary\" data-action=\"cancel\">\n            ${cancelText}\n          </button>\n          <button class=\"confirm-popup-btn ${confirmBtnClass}\" data-action=\"confirm\">\n            ${confirmText}\n          </button>\n        </div>\n      </div>\n    `;\n\n    // Gestisci click sui pulsanti\n    const handleAction = (action) => {\n      document.body.removeChild(popup);\n      resolve(action === 'confirm');\n    };\n\n    popup.addEventListener('click', (e) => {\n      if (e.target === popup) {\n        handleAction('cancel');\n      }\n    });\n\n    popup.querySelectorAll('[data-action]').forEach(btn => {\n      btn.addEventListener('click', (e) => {\n        e.preventDefault();\n        handleAction(btn.dataset.action);\n      });\n    });\n\n    // Gestisci tasto ESC\n    const handleKeydown = (e) => {\n      if (e.key === 'Escape') {\n        document.removeEventListener('keydown', handleKeydown);\n        handleAction('cancel');\n      }\n    };\n\n    document.addEventListener('keydown', handleKeydown);\n\n    // Aggiungi al DOM\n    document.body.appendChild(popup);\n\n    // Focus sul primo pulsante\n    setTimeout(() => {\n      popup.querySelector('.confirm-popup-btn-secondary').focus();\n    }, 100);\n  });\n}\n\n/**\n * Mostra un popup di conferma per l'eliminazione di un'app\n * @param {string} appName - Nome dell'app da eliminare\n * @returns {Promise<boolean>} - True se confermato\n */\nexport function showDeleteAppConfirm(appName) {\n  return showConfirmPopup({\n    title: 'Elimina App',\n    message: `Sei sicuro di voler eliminare \"${appName}\"? Questa azione non può essere annullata.`,\n    icon: 'danger',\n    confirmText: 'Elimina',\n    cancelText: 'Annulla',\n    type: 'danger'\n  });\n}\n\n/**\n * Mostra un popup di conferma per l'importazione di un'app\n * @param {string} appName - Nome dell'app da importare\n * @param {string} appUrl - URL dell'app\n * @returns {Promise<boolean>} - True se confermato\n */\nexport function showImportAppConfirm(appName, appUrl) {\n  return showConfirmPopup({\n    title: 'Importa App',\n    message: `Importare \"${appName}\" da ${appUrl}?`,\n    icon: 'info',\n    confirmText: 'Importa',\n    cancelText: 'Annulla',\n    type: 'default'\n  });\n}\n\n/**\n * Mostra un popup di conferma per il reset delle impostazioni\n * @returns {Promise<boolean>} - True se confermato\n */\nexport function showResetSettingsConfirm() {\n  return showConfirmPopup({\n    title: 'Reset Impostazioni',\n    message: 'Sei sicuro di voler ripristinare tutte le impostazioni ai valori predefiniti? Questa azione non può essere annullata.',\n    icon: 'warning',\n    confirmText: 'Reset',\n    cancelText: 'Annulla',\n    type: 'danger'\n  });\n}\n\nexport default {\n  // Toast\n  showToast,\n  hideToast,\n  removeToast,\n  clearAllToasts,\n  \n  // Modal\n  showModal,\n  hideModal,\n  hideAllModals,\n  \n  // Utility\n  escapeHtml,\n  formatFileSize,\n  formatDate,\n  formatRelativeDate,\n  generateId,\n  debounce,\n  throttle,\n  copyToClipboard,\n  isMobile,\n  isPWASupported,\n  getDeviceInfo,\n  isValidUrl,\n  extractDomain,\n  blobToBase64,\n  base64ToBlob,\n  downloadFile,\n  getStringHash,\n  sleep,\n  \n  // Confirm Popup\n  showConfirmPopup,\n  showDeleteAppConfirm,\n  showImportAppConfirm,\n  showResetSettingsConfirm\n};","/**\n * AIdeas - UI Loader Intelligente\n * Gestisce il caricamento dell'interfaccia con fallback automatico\n */\n\nimport StorageService from './services/StorageService.js';\nimport { showToast } from './utils/helpers.js';\n\n/**\n * Classe per gestire il caricamento intelligente dell'UI\n */\nclass UILoader {\n  constructor() {\n    this.fallbackAttempted = false;\n    this.loadingTimeout = null;\n  }\n\n  /**\n   * Inizializza il caricamento dell'interfaccia\n   */\n  async init() {\n    try {\n      console.log('🎨 Inizializzazione UI Loader...');\n      await StorageService.ensureDbOpen();\n      // Carica solo Material UI\n      await this.loadMaterialUI();\n    } catch (error) {\n      console.error('❌ Errore inizializzazione UI Loader:', error);\n      // Mostra errore all'utente\n      showToast('Impossibile caricare l\\'interfaccia Material UI', 'error');\n    }\n  }\n\n  /**\n   * Carica l'interfaccia specificata\n   */\n  async loadUI(targetUI) {\n    // Rimosso: ora carica solo Material UI\n    await this.loadMaterialUI();\n  }\n\n  /**\n   * Carica l'interfaccia Material UI\n   */\n  async loadMaterialUI() {\n    console.log('🎨 Caricamento Material UI...');\n    \n    // Controlla se è già stato inizializzato\n    if (window.aideasMaterialUIInitialized) {\n      console.log('⚠️ Material UI già inizializzato, skip');\n      return;\n    }\n    \n    // Timeout per evitare blocchi\n    this.loadingTimeout = setTimeout(() => {\n      throw new Error('Timeout caricamento Material UI');\n    }, 10000);\n\n    try {\n      console.log('📦 Importazione modulo Material UI...');\n      // Carica il modulo Material UI\n      const { initializeAIdeasWithMaterialUI } = await import('./main-material.jsx');\n      \n      console.log('🔧 Funzione di inizializzazione ottenuta:', typeof initializeAIdeasWithMaterialUI);\n      \n      // Inizializza l'app\n      console.log('🚀 Avvio inizializzazione Material UI...');\n      initializeAIdeasWithMaterialUI();\n      \n      // Marca come inizializzato\n      window.aideasMaterialUIInitialized = true;\n      \n      // Cancella timeout\n      clearTimeout(this.loadingTimeout);\n      \n      console.log('✅ Material UI caricata con successo');\n      \n      // Nascondi il loading screen\n      this.hideLoadingScreen();\n      \n    } catch (error) {\n      clearTimeout(this.loadingTimeout);\n      console.error('❌ Errore durante caricamento Material UI:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Nasconde il loading screen\n   */\n  hideLoadingScreen() {\n    try {\n      const loadingScreen = document.getElementById('loading-screen');\n      if (loadingScreen) {\n        loadingScreen.style.display = 'none';\n        console.log('🎯 Loading screen nascosto');\n      }\n    } catch (error) {\n      console.error('❌ Errore nascondere loading screen:', error);\n    }\n  }\n}\n\n// Esporta per uso esterno\nwindow.UILoader = UILoader;\n\n// Auto-inizializzazione\nconst uiLoader = new UILoader();\n\n// Inizializza quando il DOM è pronto\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => uiLoader.init());\n} else {\n  uiLoader.init();\n}\n\nexport default UILoader; "],"file":"js/main-DuCLT3PL.js"}