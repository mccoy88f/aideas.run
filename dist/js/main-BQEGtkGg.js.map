{"version":3,"mappings":"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","names":["DEFAULT_APP_EMOJIS","getEmojiByCategory","category","categoryEmojis","categoryLower","emojis","API_ENDPOINTS","REGEX_PATTERNS","toastCounter","showToast","message","type","duration","options","toastContainer","toastId","toast","icons","escapeHtml","closeBtn","actionBtn","removeToast","text","div","showConfirmPopup","resolve","title","icon","confirmText","cancelText","popup","iconHtml","confirmBtnClass","handleAction","action","e","btn","handleKeydown","generateRandomUsername","colors","fruits","randomColor","randomFruit","getUserDisplayName","settings","sortAndGroupModels","models","groupedModels","groups","model","group","a","b","sortedGroups","aIsFree","bIsFree","orderedGroupedModels","DEBUG","args","serviceName","method","url","label","value","data","StorageService","StorageService$2","m","stats","apps","confirmed","ErrorTracker","event","error","__publicField","ErrorHandler","attemptNumber","operation","config","operationId","result","categorizedError","strategy","lastError","timeoutPromise","_","reject","delay","rollbackFn","originalError","rollbackError","errorInfo","indicator","index","op","failedOperations","now","last24h","categories","severities","ms","operationName","backup","backups","backupId","ErrorHandler$1","Dexie","primKey","obj","trans","appData","proposedUniqueId","app","appId","fileError","syncError","context","query","tag","files","filesObj","file","updates","metadata","updatedMetadata","key","migrated","htmlFile","f","uniqueId","deletedApps","filtered","id","filePromises","defaultValue","setting","transactions","eventIds","cat","deviceId","name","author","sanitizedName","sanitizedAuthor","filename","ext","syncEvents","settingsArray","allAppFiles","item","appFiles","persistentTimestamp","backupData","backupSize","maxSize","localDeletedApps","backupDeletedApps","allDeletedApps","appIdMapping","appsImported","appsSkipped","originalId","appWithoutId","newId","totalFilesImported","originalAppId","newAppId","filesToAdd","exportData","err","validApps","validCategories","favoriteApps","totalApps","totalFiles","settingsCount","lastInstall","latest","StorageService$1","UILoader","loadingScreen","subtitle","style","appContainer","initializeAIdeasWithMaterialUI","__vitePreload","mainText","subText","loadingText","loadingSubtitle","spinner","loadingStyles","uiLoader"],"ignoreList":[],"sources":["../../src/utils/constants.js","../../src/utils/helpers.js","../../src/utils/debug.js","../../src/services/ErrorHandler.js","../../src/services/StorageService.js","../../src/ui-loader.js"],"sourcesContent":["/**\n * AIdeas - Constants & Configuration\n * Costanti e configurazioni globali dell'applicazione\n */\n\n// Informazioni applicazione\nexport const APP_INFO = {\n  name: 'AIdeas',\n  fullName: 'Swiss Army Knife by AI',\n  version: '1.0.0',\n  description: 'Launcher per applicazioni web generate da AI',\n  author: 'AIdeas Team',\n  website: 'https://aideas.run',\n  repository: 'https://github.com/aideas-run/aideas-run',\n  license: 'MIT'\n};\n\n// Database configuration\nexport const DATABASE_CONFIG = {\n  name: 'AIdeas_DB',\n  version: 1,\n  maxSize: 100 * 1024 * 1024, // 100MB\n  backupRetention: 30 // giorni\n};\n\n// Limiti applicazione\nexport const LIMITS = {\n  maxApps: 1000,\n  maxConcurrentApps: 10,\n  maxAppSize: 50 * 1024 * 1024, // 50MB per app ZIP\n  maxIconSize: 2 * 1024 * 1024, // 2MB per icona\n  maxDescriptionLength: 500,\n  maxNameLength: 100,\n  maxTagsCount: 20,\n  maxTagLength: 30\n};\n\n// Tipi di app supportati\nexport const APP_TYPES = {\n  ZIP: 'zip',\n  URL: 'url',\n  GITHUB: 'github',\n  // PWA type removed\n};\n\n// Set di emoji predefinite per app senza icona\nexport const DEFAULT_APP_EMOJIS = [\n  '🚀', '⚡', '🎯', '💡', '🔧', '📱', '💻', '🌐', '🎮', '📚',\n  '🎨', '🎵', '📷', '📹', '🎬', '📺', '📻', '🎙️', '🎤', '🎧',\n  '🏠', '🏢', '🏪', '🏨', '🏥', '🏫', '🏛️', '⛪', '🕌', '🕍',\n  '🚗', '🚕', '🚙', '🚌', '🚎', '🏎️', '🚓', '🚑', '🚒', '🚐',\n  '🍕', '🍔', '🍟', '🌭', '🍿', '🧂', '🥨', '🥯', '🥖', '🧀',\n  '⚽', '🏀', '🏈', '⚾', '🎾', '🏐', '🏉', '🎱', '🏓', '🏸',\n  '🎪', '🎭', '🎨', '🎬', '🎤', '🎧', '🎼', '🎹', '🥁', '🎷',\n  '🌍', '🌎', '🌏', '🌐', '🗺️', '🗾', '🧭', '🏔️', '⛰️', '🌋',\n  '💎', '🔮', '🎁', '🎈', '🎉', '🎊', '🎋', '🎍', '🎎', '🎏',\n  '🔮', '🧿', '⚗️', '🔭', '📡', '💻', '🖥️', '🖨️', '⌨️', '🖱️',\n  '📱', '📲', '💾', '💿', '📀', '🎥', '📺', '📻', '📷', '📹'\n];\n\n// Funzione per ottenere un'emoji casuale\nexport const getRandomEmoji = () => {\n  return DEFAULT_APP_EMOJIS[Math.floor(Math.random() * DEFAULT_APP_EMOJIS.length)];\n};\n\n// Funzione per ottenere un'emoji basata sulla categoria\nexport const getEmojiByCategory = (category) => {\n  const categoryEmojis = {\n    'produttività': ['⚡', '🚀', '💡', '🔧', '📊', '📈', '✅', '🎯'],\n    'intrattenimento': ['🎮', '🎬', '🎵', '🎨', '🎪', '🎭', '🎤', '🎧'],\n    'sviluppo': ['💻', '🔧', '⚙️', '🔨', '📱', '🌐', '🚀', '⚡'],\n    'social': ['👥', '💬', '📱', '🌐', '📞', '📧', '💌', '📢'],\n    'utility': ['🔧', '⚙️', '🛠️', '📋', '📝', '📌', '📍', '🔍'],\n    'altro': ['❓', '💭', '💡', '🎯', '⭐', '💫', '✨', '🌟']\n  };\n  \n  const categoryLower = category?.toLowerCase() || 'altro';\n  const emojis = categoryEmojis[categoryLower] || categoryEmojis['altro'];\n  return emojis[Math.floor(Math.random() * emojis.length)];\n};\n\n// Categorie predefinite\nexport const CATEGORIES = {\n  PRODUCTIVITY: 'productivity',\n  ENTERTAINMENT: 'entertainment',\n  TOOLS: 'tools',\n  GAMES: 'games',\n  AI: 'ai',\n  SOCIAL: 'social',\n  EDUCATION: 'education',\n  BUSINESS: 'business',\n  UTILITY: 'utility',\n  UNCATEGORIZED: 'uncategorized'\n};\n\n// Labels per le categorie\nexport const CATEGORY_LABELS = {\n  [CATEGORIES.PRODUCTIVITY]: 'Produttività',\n  [CATEGORIES.ENTERTAINMENT]: 'Intrattenimento',\n  [CATEGORIES.TOOLS]: 'Strumenti',\n  [CATEGORIES.GAMES]: 'Giochi',\n  [CATEGORIES.AI]: 'Intelligenza Artificiale',\n  [CATEGORIES.SOCIAL]: 'Social',\n  [CATEGORIES.EDUCATION]: 'Educazione',\n  [CATEGORIES.BUSINESS]: 'Business',\n  [CATEGORIES.UTILITY]: 'Utilità',\n  [CATEGORIES.UNCATEGORIZED]: 'Altro'\n};\n\n// Icone per le categorie\nexport const CATEGORY_ICONS = {\n  [CATEGORIES.PRODUCTIVITY]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M16,6L18.29,8.29L13.41,13.17L9.41,9.17L2,16.59L3.41,18L9.41,12L13.41,16L19.71,9.71L22,12V6H16Z\"/>\n  </svg>`,\n  [CATEGORIES.ENTERTAINMENT]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M13,2.05V5.08C16.39,5.57 19,8.47 19,12C19,12.9 18.82,13.75 18.5,14.54L21.12,16.07C21.68,14.83 22,13.45 22,12C22,6.82 18.05,2.55 13,2.05M12,19A7,7 0 0,1 5,12C5,8.47 7.61,5.57 11,5.08V2.05C5.94,2.55 2,6.81 2,12A10,10 0 0,0 12,22C15.3,22 18.23,20.39 20.05,17.91L17.45,16.38C16.17,18 14.21,19 12,19Z\"/>\n  </svg>`,\n  [CATEGORIES.TOOLS]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M22.7,19L13.6,9.9C14.5,7.6 14,4.9 12.1,3C10.1,1 7.1,0.6 4.7,1.7L9,6L6,9L1.6,4.7C0.4,7.1 0.9,10.1 2.9,12.1C4.8,14 7.5,14.5 9.8,13.6L18.9,22.7C19.3,23.1 19.9,23.1 20.3,22.7L22.6,20.4C23.1,20 23.1,19.3 22.7,19Z\"/>\n  </svg>`,\n  [CATEGORIES.GAMES]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M7.97,16L5,19C4.67,19.3 4.23,19.5 3.75,19.5A1.75,1.75 0 0,1 2,17.75V17.5L3,10.12C3.21,7.81 5.14,6 7.5,6H16.5C18.86,6 20.79,7.81 21,10.12L22,17.5V17.75A1.75,1.75 0 0,1 20.25,19.5C19.77,19.5 19.33,19.3 19,19L16.03,16H7.97M9.5,8A1.5,1.5 0 0,0 8,9.5A1.5,1.5 0 0,0 9.5,11A1.5,1.5 0 0,0 11,9.5A1.5,1.5 0 0,0 9.5,8M14.5,8A1.5,1.5 0 0,0 13,9.5A1.5,1.5 0 0,0 14.5,11A1.5,1.5 0 0,0 16,9.5A1.5,1.5 0 0,0 14.5,8Z\"/>\n  </svg>`,\n  [CATEGORIES.AI]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M12,2A2,2 0 0,1 14,4C14,4.74 13.6,5.39 13,5.73V7.27C13.6,7.61 14,8.26 14,9A2,2 0 0,1 12,11A2,2 0 0,1 10,9A2,2 0 0,1 12,7A2,2 0 0,1 14,9A2,2 0 0,1 12,11A2,2 0 0,1 10,9C10,8.26 10.4,7.61 11,7.27V5.73C10.4,5.39 10,4.74 10,4A2,2 0 0,1 12,2M9,9A2,2 0 0,1 11,11A2,2 0 0,1 9,13A2,2 0 0,1 7,11A2,2 0 0,1 9,9M15,9A2,2 0 0,1 17,11A2,2 0 0,1 15,13A2,2 0 0,1 13,11A2,2 0 0,1 15,9M12,12A2,2 0 0,1 14,14C14,14.74 13.6,15.39 13,15.73V17.27C13.6,17.61 14,18.26 14,19A2,2 0 0,1 12,21A2,2 0 0,1 10,19A2,2 0 0,1 12,17A2,2 0 0,1 14,19A2,2 0 0,1 12,21A2,2 0 0,1 10,19C10,18.26 10.4,17.61 11,17.27V15.73C10.4,15.39 10,14.74 10,14A2,2 0 0,1 12,12Z\"/>\n  </svg>`,\n  [CATEGORIES.SOCIAL]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M16,4C18.11,4 19.8,5.69 19.8,7.8C19.8,9.91 18.11,11.6 16,11.6C13.89,11.6 12.2,9.91 12.2,7.8C12.2,5.69 13.89,4 16,4M16,5.9C15,5.9 14.1,6.8 14.1,7.8C14.1,8.8 15,9.7 16,9.7C17,9.7 17.9,8.8 17.9,7.8C17.9,6.8 17,5.9 16,5.9M16,13.64C18.67,13.64 22.4,14.97 22.4,17.64V20H9.6V17.64C9.6,14.97 13.33,13.64 16,13.64M16,15.26C14.5,15.26 11.22,16 11.22,17.64V18.38H20.78V17.64C20.78,16 17.5,15.26 16,15.26M7.76,4C9.87,4 11.56,5.69 11.56,7.8C11.56,9.91 9.87,11.6 7.76,11.6C5.65,11.6 3.96,9.91 3.96,7.8C3.96,5.69 5.65,4 7.76,4M7.76,5.9C6.76,5.9 5.86,6.8 5.86,7.8C5.86,8.8 6.76,9.7 7.76,9.7C8.76,9.7 9.66,8.8 9.66,7.8C9.66,6.8 8.76,5.9 7.76,5.9M7.76,13.64C10.43,13.64 14.16,14.97 14.16,17.64V20H1.36V17.64C1.36,14.97 5.09,13.64 7.76,13.64M7.76,15.26C6.26,15.26 2.98,16 2.98,17.64V18.38H12.54V17.64C12.54,16 9.26,15.26 7.76,15.26Z\"/>\n  </svg>`,\n  [CATEGORIES.EDUCATION]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M12,3L1,9L12,15L21,10.09V17H23V9M5,13.18V17.18L12,21L19,17.18V13.18L12,17L5,13.18Z\"/>\n  </svg>`,\n  [CATEGORIES.BUSINESS]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M12,7V3H2V21H22V7H12M6,19H4V17H6V19M6,15H4V13H6V15M6,11H4V9H6V11M6,7H4V5H6V7M10,19H8V17H10V19M10,15H8V13H10V15M10,11H8V9H10V11M10,7H8V5H10V7M20,19H12V17H14V15H12V13H14V11H12V9H20V19M18,11H16V13H18V11M18,15H16V17H18V15Z\"/>\n  </svg>`,\n  [CATEGORIES.UTILITY]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M17,8C8,10 5.9,16.17 3.82,21.34L5.71,22L6.66,19.7C7.14,19.87 7.64,20 8,20C9,20 10,19 11,17H12C14,15 16,13 17,8M18.5,2C16.7,2 15.14,2.9 14.22,4.22L15.63,5.63C16.07,5 16.72,4.5 17.5,4.5C18.61,4.5 19.5,5.39 19.5,6.5C19.5,7.28 19,7.93 18.37,8.37L19.78,9.78C21.1,8.86 22,7.3 22,5.5C22,3.57 20.43,2 18.5,2Z\"/>\n  </svg>`,\n  [CATEGORIES.UNCATEGORIZED]: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"/>\n  </svg>`\n};\n\n// Modalità di lancio app\nexport const LAUNCH_MODES = {\n  IFRAME: 'iframe',\n  NEW_PAGE: 'newpage',\n  AUTO: 'auto'\n};\n\n// Permessi sandbox per iframe\nexport const SANDBOX_PERMISSIONS = {\n  STRICT: 'allow-scripts allow-forms',\n  MODERATE: 'allow-scripts allow-forms allow-modals allow-popups-to-escape-sandbox',\n  PERMISSIVE: 'allow-scripts allow-forms allow-modals allow-popups allow-popups-to-escape-sandbox allow-same-origin'\n};\n\n// Estensioni file supportate\nexport const SUPPORTED_EXTENSIONS = {\n  ARCHIVES: ['.zip'],\n  IMAGES: ['.png', '.jpg', '.jpeg', '.gif', '.svg', '.webp'],\n  DOCUMENTS: ['.html', '.css', '.js', '.json', '.md', '.txt'],\n  MANIFESTS: ['manifest.json', 'aideas.json', 'package.json']\n};\n\n// MIME types\nexport const MIME_TYPES = {\n  'html': 'text/html',\n  'css': 'text/css',\n  'js': 'application/javascript',\n  'mjs': 'application/javascript',\n  'json': 'application/json',\n  'txt': 'text/plain',\n  'md': 'text/markdown',\n  'png': 'image/png',\n  'jpg': 'image/jpeg',\n  'jpeg': 'image/jpeg',\n  'gif': 'image/gif',\n  'svg': 'image/svg+xml',\n  'webp': 'image/webp',\n  'ico': 'image/x-icon',\n  'zip': 'application/zip',\n  'pdf': 'application/pdf',\n  'xml': 'application/xml'\n};\n\n// Provider di sincronizzazione\nexport const SYNC_PROVIDERS = {\n  GITHUB: 'github',\n  GOOGLE_DRIVE: 'googledrive'\n};\n\n// URL e endpoint API\nexport const API_ENDPOINTS = {\n  GITHUB: {\n    BASE: 'https://api.github.com',\n    USER: 'https://api.github.com/user',\n    GISTS: 'https://api.github.com/gists',\n    REPOS: 'https://api.github.com/repos'\n  },\n  GOOGLE: {\n    DRIVE: 'https://www.googleapis.com/drive/v3',\n    AUTH: 'https://accounts.google.com/o/oauth2/v2/auth',\n    TOKEN: 'https://oauth2.googleapis.com/token'\n  },\n  CDN: {\n    CDNJS: 'https://cdnjs.cloudflare.com/ajax/libs',\n    JSDELIVR: 'https://cdn.jsdelivr.net/npm',\n    UNPKG: 'https://unpkg.com'\n  }\n};\n\n// Temi disponibili\nexport const THEMES = {\n  AUTO: 'auto',\n  LIGHT: 'light',\n  DARK: 'dark'\n};\n\n// Lingue supportate\nexport const LANGUAGES = {\n  IT: 'it',\n  EN: 'en',\n  ES: 'es',\n  FR: 'fr',\n  DE: 'de'\n};\n\n// Strategie di cache\nexport const CACHE_STRATEGIES = {\n  AGGRESSIVE: 'aggressive',\n  MODERATE: 'moderate',\n  MINIMAL: 'minimal'\n};\n\n// Eventi personalizzati\nexport const CUSTOM_EVENTS = {\n  APP_LAUNCHED: 'aideas:app:launched',\n  APP_CLOSED: 'aideas:app:closed',\n  APP_INSTALLED: 'aideas:app:installed',\n  APP_UPDATED: 'aideas:app:updated',\n  APP_DELETED: 'aideas:app:deleted',\n  SYNC_STARTED: 'aideas:sync:started',\n  SYNC_COMPLETED: 'aideas:sync:completed',\n  SYNC_FAILED: 'aideas:sync:failed',\n  SETTINGS_CHANGED: 'aideas:settings:changed',\n  THEME_CHANGED: 'aideas:theme:changed'\n};\n\n// Chiavi localStorage\nexport const STORAGE_KEYS = {\n  THEME: 'aideas_theme',\n  LANGUAGE: 'aideas_language',\n  FIRST_RUN: 'aideas_first_run',\n  INSTALL_PROMPT: 'aideas_install_prompt_dismissed',\n  LAST_BACKUP: 'aideas_last_backup',\n  DEV_MODE: 'aideas_dev_mode'\n};\n\n// PWA_CONFIG removed - not needed\n\n// Configurazioni di sicurezza\nexport const SECURITY_CONFIG = {\n  ALLOWED_PROTOCOLS: ['http:', 'https:', 'data:', 'blob:'],\n  BLOCKED_DOMAINS: [\n    'malware.example.com',\n    'phishing.example.com'\n  ],\n  MAX_REDIRECTS: 5,\n  REQUEST_TIMEOUT: 30000, // ms\n  CSP_DIRECTIVES: {\n    'default-src': ['\\'self\\''],\n    'script-src': ['\\'self\\'', '\\'unsafe-inline\\'', 'https://cdnjs.cloudflare.com'],\n    'style-src': ['\\'self\\'', '\\'unsafe-inline\\'', 'https://fonts.googleapis.com'],\n    'img-src': ['\\'self\\'', 'data:', 'https:', 'blob:'],\n    'media-src': ['\\'self\\'', 'data:', 'https:', 'blob:'],\n    'connect-src': ['\\'self\\'', 'https://api.github.com', 'https://www.googleapis.com'],\n    'font-src': ['\\'self\\'', 'https://fonts.gstatic.com']\n  }\n};\n\n// Configurazioni performance\nexport const PERFORMANCE_CONFIG = {\n  LAZY_LOAD_THRESHOLD: 200, // px\n  DEBOUNCE_SEARCH: 300, // ms\n  THROTTLE_SCROLL: 16, // ms\n  IMAGE_QUALITY: 0.8,\n  MAX_PARALLEL_DOWNLOADS: 3,\n  CHUNK_SIZE: 64 * 1024, // 64KB\n  PREFETCH_DELAY: 2000 // ms\n};\n\n// Formati di data\nexport const DATE_FORMATS = {\n  SHORT: 'dd/MM/yyyy',\n  LONG: 'dd MMMM yyyy',\n  WITH_TIME: 'dd/MM/yyyy HH:mm',\n  ISO: 'yyyy-MM-dd\\'T\\'HH:mm:ss.SSSxxx',\n  RELATIVE_THRESHOLDS: {\n    MINUTE: 60 * 1000,\n    HOUR: 60 * 60 * 1000,\n    DAY: 24 * 60 * 60 * 1000,\n    WEEK: 7 * 24 * 60 * 60 * 1000,\n    MONTH: 30 * 24 * 60 * 60 * 1000,\n    YEAR: 365 * 24 * 60 * 60 * 1000\n  }\n};\n\n// Messaggi di errore standard\nexport const ERROR_MESSAGES = {\n  NETWORK_ERROR: 'Errore di connessione. Controlla la tua connessione internet.',\n  INVALID_FILE: 'Formato file non supportato.',\n  FILE_TOO_LARGE: 'File troppo grande.',\n  STORAGE_FULL: 'Spazio di archiviazione esaurito.',\n  INVALID_URL: 'URL non valido.',\n  SYNC_FAILED: 'Sincronizzazione fallita.',\n  IMPORT_FAILED: 'Importazione fallita.',\n  EXPORT_FAILED: 'Esportazione fallita.',\n  PERMISSION_DENIED: 'Permesso negato.',\n  APP_NOT_FOUND: 'Applicazione non trovata.',\n  INVALID_MANIFEST: 'Manifest non valido.',\n  UNSUPPORTED_BROWSER: 'Browser non supportato.'\n};\n\n// Messaggi di successo standard\nexport const SUCCESS_MESSAGES = {\n  APP_INSTALLED: 'Applicazione installata con successo',\n  APP_UPDATED: 'Applicazione aggiornata',\n  APP_DELETED: 'Applicazione rimossa',\n  SYNC_COMPLETED: 'Sincronizzazione completata',\n  BACKUP_CREATED: 'Backup creato',\n  SETTINGS_SAVED: 'Impostazioni salvate',\n  EXPORT_COMPLETED: 'Esportazione completata',\n  IMPORT_COMPLETED: 'Importazione completata'\n};\n\n// Configurazioni debug\nexport const DEBUG_CONFIG = {\n  ENABLE_CONSOLE_LOGS: true,\n  ENABLE_PERFORMANCE_MARKS: false,\n  ENABLE_ERROR_BOUNDARY: true,\n  LOG_LEVELS: {\n    ERROR: 0,\n    WARN: 1,\n    INFO: 2,\n    DEBUG: 3,\n    TRACE: 4\n  }\n};\n\n// Breakpoints responsive\nexport const BREAKPOINTS = {\n  MOBILE: 480,\n  TABLET: 768,\n  DESKTOP: 1024,\n  LARGE: 1200,\n  XLARGE: 1440\n};\n\n// Configurazioni animazioni\nexport const ANIMATION_CONFIG = {\n  DURATION: {\n    FAST: 150,\n    NORMAL: 300,\n    SLOW: 500\n  },\n  EASING: {\n    EASE: 'ease',\n    EASE_IN: 'ease-in',\n    EASE_OUT: 'ease-out',\n    EASE_IN_OUT: 'ease-in-out'\n  },\n  SPRING: {\n    BOUNCE: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)',\n    SMOOTH: 'cubic-bezier(0.4, 0, 0.2, 1)'\n  }\n};\n\n// Default settings dell'applicazione\nexport const DEFAULT_SETTINGS = {\n  // Generali\n  language: LANGUAGES.IT,\n  theme: THEMES.AUTO,\n  \n  // Launcher\n  defaultLaunchMode: LAUNCH_MODES.NEW_PAGE,\n  maxConcurrentApps: 5,\n  showAppTooltips: true,\n  enableKeyboardShortcuts: true,\n  autoUpdateApps: false,\n  \n  // UI/UX\n  viewMode: 'grid',\n  sortBy: 'lastUsed',\n  showWelcomeMessage: true,\n  enableAnimations: true,\n  compactMode: false,\n  \n  // Sync & Backup\n  syncEnabled: false,\n  syncProvider: SYNC_PROVIDERS.GITHUB,\n  autoSyncInterval: 60,\n  backupBeforeSync: true,\n  \n  // Privacy & Security\n  analyticsEnabled: false,\n  crashReportingEnabled: true,\n  allowTelemetry: false,\n  validateAppsOnLaunch: true,\n  sandboxMode: 'strict',\n  \n  // Performance\n  enableServiceWorker: true,\n  cacheStrategy: CACHE_STRATEGIES.MODERATE,\n  preloadApps: false,\n  lazyLoadImages: true,\n  \n  // Developer\n  enableDebugMode: false,\n  showConsoleErrors: false,\n  enableExperimentalFeatures: false\n};\n\n// Regex patterns utili\nexport const REGEX_PATTERNS = {\n  EMAIL: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  URL: /^https?:\\/\\/.+/,\n  GITHUB_URL: /github\\.com\\/([^\\/]+)\\/([^\\/]+)/,\n  GITHUB_PAGES: /([^\\.]+)\\.github\\.io\\/([^\\/]+)/,\n  SEMVER: /^(\\d+)\\.(\\d+)\\.(\\d+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?$/,\n  HEX_COLOR: /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,\n  SAFE_FILENAME: /^[a-zA-Z0-9._-]+$/\n};\n\n// Feature flags per controllo funzionalità\nexport const FEATURE_FLAGS = {\n  ENABLE_PWA_INSTALL: false,\n  ENABLE_GITHUB_SYNC: true,\n  ENABLE_GOOGLE_DRIVE_SYNC: false,\n  ENABLE_APP_STORE: false,\n  ENABLE_ANALYTICS: false,\n  ENABLE_CRASH_REPORTING: true,\n  ENABLE_BACKGROUND_SYNC: true,\n  ENABLE_PUSH_NOTIFICATIONS: false,\n  ENABLE_DARK_MODE: true,\n  ENABLE_EXPERIMENTAL_FEATURES: false\n};\n\n// Messaggi di errore dettagliati con categorizzazione\nexport const ERROR_CATEGORIES = {\n  NETWORK: {\n    name: 'Errore di Rete',\n    description: 'Problemi di connessione internet',\n    icon: '🌐',\n    color: 'error'\n  },\n  AUTHENTICATION: {\n    name: 'Autenticazione',\n    description: 'Problemi di login o credenziali',\n    icon: '🔐',\n    color: 'warning'\n  },\n  STORAGE: {\n    name: 'Archiviazione',\n    description: 'Problemi di database o spazio',\n    icon: '💾',\n    color: 'error'\n  },\n  VALIDATION: {\n    name: 'Validazione',\n    description: 'Dati non validi o mancanti',\n    icon: '⚠️',\n    color: 'warning'\n  },\n  RATE_LIMIT: {\n    name: 'Limite Richieste',\n    description: 'Troppe richieste al server',\n    icon: '⏳',\n    color: 'info'\n  },\n  TEMPORARY: {\n    name: 'Errore Temporaneo',\n    description: 'Problema temporaneo del sistema',\n    icon: '🔄',\n    color: 'info'\n  },\n  UNKNOWN: {\n    name: 'Errore Sconosciuto',\n    description: 'Errore non identificato',\n    icon: '❓',\n    color: 'error'\n  }\n};\n\n// Messaggi di errore dettagliati con soluzioni\nexport const DETAILED_ERROR_MESSAGES = {\n  // Errori di sincronizzazione\n  SYNC_NETWORK_ERROR: {\n    title: 'Errore di Connessione',\n    message: 'Impossibile connettersi al servizio di sincronizzazione',\n    solution: 'Verifica la connessione internet e riprova',\n    actions: ['Riprova', 'Verifica connessione']\n  },\n  SYNC_AUTH_ERROR: {\n    title: 'Errore di Autenticazione',\n    message: 'Credenziali non valide o scadute',\n    solution: 'Riconfigurata le credenziali di accesso',\n    actions: ['Riautentica', 'Controlla credenziali']\n  },\n  SYNC_QUOTA_ERROR: {\n    title: 'Quota Superata',\n    message: 'Limite di richieste API superato',\n    solution: 'Attendi qualche minuto prima di riprovare',\n    actions: ['Riprova più tardi', 'Controlla quota']\n  },\n  SYNC_DATA_CORRUPTION: {\n    title: 'Dati Corrotti',\n    message: 'I dati di sincronizzazione sono corrotti o incompleti',\n    solution: 'Prova a scaricare un backup precedente',\n    actions: ['Ripristina backup', 'Contatta supporto']\n  },\n\n  // Errori di installazione app\n  INSTALL_INVALID_DATA: {\n    title: 'Dati App Non Validi',\n    message: 'I dati dell\\'app non sono in formato valido',\n    solution: 'Verifica che il file sia un\\'app valida',\n    actions: ['Controlla file', 'Prova altro file']\n  },\n  INSTALL_STORAGE_FULL: {\n    title: 'Spazio Insufficiente',\n    message: 'Non c\\'è abbastanza spazio per installare l\\'app',\n    solution: 'Libera spazio eliminando app non utilizzate',\n    actions: ['Libera spazio', 'Elimina app']\n  },\n  INSTALL_DUPLICATE_APP: {\n    title: 'App Già Installata',\n    message: 'Un\\'app con questo nome è già installata',\n    solution: 'Usa un nome diverso o aggiorna l\\'app esistente',\n    actions: ['Cambia nome', 'Aggiorna esistente']\n  },\n  INSTALL_MISSING_FILES: {\n    title: 'File Mancanti',\n    message: 'Il file ZIP non contiene tutti i file necessari',\n    solution: 'Assicurati che il ZIP contenga almeno un file HTML',\n    actions: ['Controlla ZIP', 'Aggiungi file mancanti']\n  },\n\n  // Errori di rete\n  NETWORK_OFFLINE: {\n    title: 'Modalità Offline',\n    message: 'Non sei connesso a internet',\n    solution: 'Verifica la connessione internet',\n    actions: ['Controlla connessione', 'Riprova online']\n  },\n  NETWORK_TIMEOUT: {\n    title: 'Timeout di Connessione',\n    message: 'L\\'operazione ha richiesto troppo tempo',\n    solution: 'Riprova con una connessione più stabile',\n    actions: ['Riprova', 'Controlla connessione']\n  },\n  NETWORK_CORS_ERROR: {\n    title: 'Errore CORS',\n    message: 'Il server non consente richieste da questa origine',\n    solution: 'Controlla le impostazioni del server',\n    actions: ['Contatta amministratore', 'Usa proxy']\n  },\n\n  // Errori generici\n  GENERIC_ERROR: {\n    title: 'Errore Generico',\n    message: 'Si è verificato un errore imprevisto',\n    solution: 'Riprova o riavvia l\\'applicazione',\n    actions: ['Riprova', 'Riavvia app']\n  }\n};\n\n// Suggerimenti per la risoluzione automatica\nexport const ERROR_RECOVERY_SUGGESTIONS = {\n  NETWORK_ERROR: [\n    'Verifica la connessione internet',\n    'Disabilita VPN o proxy temporaneamente',\n    'Riprova tra qualche minuto',\n    'Controlla le impostazioni del firewall'\n  ],\n  STORAGE_ERROR: [\n    'Libera spazio sul dispositivo',\n    'Chiudi altre applicazioni',\n    'Riavvia il browser',\n    'Pulisci la cache del browser'\n  ],\n  AUTH_ERROR: [\n    'Verifica nome utente e password',\n    'Controlla se l\\'account è attivo',\n    'Rigenera token di accesso',\n    'Verifica permessi dell\\'applicazione'\n  ],\n  SYNC_ERROR: [\n    'Verifica la connessione al servizio',\n    'Controlla le credenziali',\n    'Attendi e riprova più tardi',\n    'Contatta il supporto se persiste'\n  ]\n};\n\n// Codici di errore HTTP comuni\nexport const HTTP_ERROR_CODES = {\n  400: 'Richiesta non valida',\n  401: 'Non autorizzato',\n  403: 'Accesso negato',\n  404: 'Risorsa non trovata',\n  408: 'Timeout della richiesta',\n  409: 'Conflitto',\n  429: 'Troppe richieste',\n  500: 'Errore interno del server',\n  502: 'Gateway non valido',\n  503: 'Servizio non disponibile',\n  504: 'Timeout del gateway'\n};\n\n// Configurazione monitoraggio errori\nexport const ERROR_MONITORING = {\n  MAX_ERROR_HISTORY: 100,\n  ERROR_REPORT_INTERVAL: 60000, // 1 minuto\n  CRITICAL_ERROR_THRESHOLD: 5, // 5 errori critici in 5 minuti\n  AUTO_RECOVERY_ENABLED: true,\n  OFFLINE_QUEUE_SIZE: 50\n};\n\n// Export default configuration object\nexport default {\n  APP_INFO,\n  DATABASE_CONFIG,\n  LIMITS,\n  APP_TYPES,\n  CATEGORIES,\n  CATEGORY_LABELS,\n  CATEGORY_ICONS,\n  LAUNCH_MODES,\n  SANDBOX_PERMISSIONS,\n  SUPPORTED_EXTENSIONS,\n  MIME_TYPES,\n  SYNC_PROVIDERS,\n  API_ENDPOINTS,\n  THEMES,\n  LANGUAGES,\n  CACHE_STRATEGIES,\n  CUSTOM_EVENTS,\n  STORAGE_KEYS,\n  // PWA_CONFIG removed\n  SECURITY_CONFIG,\n  PERFORMANCE_CONFIG,\n  DATE_FORMATS,\n  ERROR_MESSAGES,\n  SUCCESS_MESSAGES,\n  DEBUG_CONFIG,\n  BREAKPOINTS,\n  ANIMATION_CONFIG,\n  DEFAULT_SETTINGS,\n  REGEX_PATTERNS,\n  FEATURE_FLAGS,\n  ERROR_CATEGORIES,\n  DETAILED_ERROR_MESSAGES,\n  ERROR_RECOVERY_SUGGESTIONS,\n  HTTP_ERROR_CODES,\n  ERROR_MONITORING\n};","/**\n * AIdeas - Utility Functions & Helpers\n * Funzioni di utilità per l'applicazione\n */\n\n/**\n * TOAST NOTIFICATIONS\n */\n\nlet toastCounter = 0;\n\n/**\n * Mostra una notifica toast\n * @param {string} message - Messaggio da mostrare\n * @param {string} type - Tipo: 'success', 'error', 'warning', 'info'\n * @param {number} duration - Durata in ms (default 4000)\n * @param {Object} options - Opzioni aggiuntive\n */\nexport function showToast(message, type = 'info', duration = 4000, options = {}) {\n  const toastContainer = document.getElementById('toast-container');\n  if (!toastContainer) {\n    console.warn('Toast container non trovato');\n    return;\n  }\n\n  const toastId = `toast-${++toastCounter}`;\n  const toast = document.createElement('div');\n  \n  toast.id = toastId;\n  toast.className = `toast toast-${type}`;\n  toast.setAttribute('role', 'alert');\n  toast.setAttribute('aria-live', 'polite');\n  \n  // Icone per i diversi tipi\n  const icons = {\n    success: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z\"/>\n    </svg>`,\n    error: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"/>\n    </svg>`,\n    warning: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M13,13H11V7H13M12,17.3A1.3,1.3 0 0,1 10.7,16A1.3,1.3 0 0,1 12,14.7A1.3,1.3 0 0,1 13.3,16A1.3,1.3 0 0,1 12,17.3M15.73,3H8.27L3,8.27V15.73L8.27,21H15.73L21,15.73V8.27L15.73,3Z\"/>\n    </svg>`,\n    info: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"/>\n    </svg>`\n  };\n\n  toast.innerHTML = `\n    <div class=\"toast-icon\">\n      ${icons[type] || icons.info}\n    </div>\n    <div class=\"toast-content\">\n      <div class=\"toast-message\">${escapeHtml(message)}</div>\n      ${options.action ? `<button class=\"toast-action\">${options.action}</button>` : ''}\n    </div>\n    <button class=\"toast-close\" aria-label=\"Chiudi notifica\">\n      <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"/>\n      </svg>\n    </button>\n  `;\n\n  // Event listeners\n  const closeBtn = toast.querySelector('.toast-close');\n  const actionBtn = toast.querySelector('.toast-action');\n  \n  const removeToast = () => {\n    toast.classList.add('toast-removing');\n    setTimeout(() => {\n      if (toast.parentNode) {\n        toast.parentNode.removeChild(toast);\n      }\n    }, 300);\n  };\n\n  closeBtn.addEventListener('click', removeToast);\n  \n  if (actionBtn && options.onAction) {\n    actionBtn.addEventListener('click', () => {\n      options.onAction();\n      removeToast();\n    });\n  }\n\n  // Aggiungi al container\n  toastContainer.appendChild(toast);\n  \n  // Animazione di entrata\n  requestAnimationFrame(() => {\n    toast.classList.add('toast-show');\n  });\n\n  // Auto-remove dopo duration\n  if (duration > 0) {\n    setTimeout(removeToast, duration);\n  }\n\n  return toastId;\n}\n\n/**\n * Rimuove un toast specifico\n * @param {string} toastId - ID del toast da rimuovere\n */\nexport function removeToast(toastId) {\n  const toast = document.getElementById(toastId);\n  if (toast) {\n    toast.querySelector('.toast-close').click();\n  }\n}\n\n/**\n * Rimuove tutti i toast\n */\nexport function clearAllToasts() {\n  const toasts = document.querySelectorAll('.toast');\n  toasts.forEach(toast => {\n    toast.querySelector('.toast-close').click();\n  });\n}\n\n/**\n * Nasconde un toast specifico (alias per removeToast)\n * @param {string} toastId - ID del toast da nascondere\n */\nexport function hideToast(toastId) {\n  if (toastId) {\n    removeToast(toastId);\n  } else {\n    // Se non specificato, nasconde tutti i toast\n    clearAllToasts();\n  }\n}\n\n/**\n * MODAL MANAGEMENT\n */\n\n/**\n * Mostra un modal\n * @param {string} modalId - ID del modal\n * @param {string} content - Contenuto HTML del modal\n * @param {Object} options - Opzioni aggiuntive\n */\nexport function showModal(modalId, content, options = {}) {\n  const modalsContainer = document.getElementById('modals-container');\n  if (!modalsContainer) {\n    console.warn('Modals container non trovato');\n    return;\n  }\n\n  // Rimuovi modal esistente con stesso ID\n  const existingModal = document.getElementById(modalId);\n  if (existingModal) {\n    existingModal.remove();\n  }\n\n  const modal = document.createElement('div');\n  modal.id = modalId;\n  modal.className = 'modal';\n  modal.setAttribute('role', 'dialog');\n  modal.setAttribute('aria-modal', 'true');\n  modal.setAttribute('aria-labelledby', `${modalId}-title`);\n\n  modal.innerHTML = `\n    <div class=\"modal-backdrop\"></div>\n    <div class=\"modal-dialog ${options.size || 'modal-md'}\">\n      <div class=\"modal-content\">\n        ${content}\n      </div>\n    </div>\n  `;\n\n  // Event listeners\n  const backdrop = modal.querySelector('.modal-backdrop');\n  const closeButtons = modal.querySelectorAll('.modal-close');\n\n  const closeModal = (e) => {\n    if (e) e.preventDefault();\n    modal.classList.add('modal-closing');\n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n      // Ripristina focus\n      if (options.returnFocus) {\n        options.returnFocus.focus();\n      }\n    }, 300);\n  };\n\n  // Click su backdrop\n  if (!options.disableBackdropClose) {\n    backdrop.addEventListener('click', closeModal);\n  }\n\n  // Click sui pulsanti close\n  closeButtons.forEach(btn => {\n    btn.addEventListener('click', closeModal);\n  });\n\n  // Escape key\n  const handleEscape = (e) => {\n    if (e.key === 'Escape' && !options.disableEscapeClose) {\n      closeModal();\n      document.removeEventListener('keydown', handleEscape);\n    }\n  };\n  document.addEventListener('keydown', handleEscape);\n\n  // Salva focus corrente\n  const currentFocus = document.activeElement;\n  options.returnFocus = currentFocus;\n\n  // Aggiungi al DOM\n  modalsContainer.appendChild(modal);\n\n  // Animazione di entrata\n  requestAnimationFrame(() => {\n    modal.classList.add('modal-show');\n    \n    // Focus sul primo elemento focusabile\n    const focusableElements = modal.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    if (focusableElements.length > 0) {\n      focusableElements[0].focus();\n    }\n  });\n\n  return modal;\n}\n\n/**\n * Nasconde un modal\n * @param {string} modalId - ID del modal da nascondere\n */\nexport function hideModal(modalId) {\n  const modal = document.getElementById(modalId);\n  if (modal) {\n    const closeBtn = modal.querySelector('.modal-close');\n    if (closeBtn) {\n      closeBtn.click();\n    }\n  }\n}\n\n/**\n * Nasconde tutti i modal\n */\nexport function hideAllModals() {\n  const modals = document.querySelectorAll('.modal');\n  modals.forEach(modal => {\n    hideModal(modal.id);\n  });\n}\n\n/**\n * UTILITY FUNCTIONS\n */\n\n/**\n * Escape HTML per prevenire XSS\n * @param {string} text - Testo da escapare\n * @returns {string} Testo escapato\n */\nexport function escapeHtml(text) {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n/**\n * Formatta dimensione file in formato leggibile\n * @param {number} bytes - Dimensione in bytes\n * @param {number} decimals - Numero di decimali (default 2)\n * @returns {string} Dimensione formattata\n */\nexport function formatFileSize(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n/**\n * Formatta data in formato locale\n * @param {Date|string|number} date - Data da formattare\n * @param {Object} options - Opzioni Intl.DateTimeFormat\n * @returns {string} Data formattata\n */\nexport function formatDate(date, options = {}) {\n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Data non valida';\n\n  const defaultOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n\n  return new Intl.DateTimeFormat('it-IT', { ...defaultOptions, ...options }).format(dateObj);\n}\n\n/**\n * Formatta data relativa (es. \"2 ore fa\")\n * @param {Date|string|number} date - Data da formattare\n * @returns {string} Data relativa\n */\nexport function formatRelativeDate(date) {\n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Data non valida';\n\n  const now = new Date();\n  const diffMs = now - dateObj;\n  const diffSeconds = Math.floor(diffMs / 1000);\n  const diffMinutes = Math.floor(diffSeconds / 60);\n  const diffHours = Math.floor(diffMinutes / 60);\n  const diffDays = Math.floor(diffHours / 24);\n  const diffWeeks = Math.floor(diffDays / 7);\n  const diffMonths = Math.floor(diffDays / 30);\n  const diffYears = Math.floor(diffDays / 365);\n\n  if (diffSeconds < 60) return 'Proprio ora';\n  if (diffMinutes < 60) return `${diffMinutes} minut${diffMinutes === 1 ? 'o' : 'i'} fa`;\n  if (diffHours < 24) return `${diffHours} or${diffHours === 1 ? 'a' : 'e'} fa`;\n  if (diffDays < 7) return `${diffDays} giorn${diffDays === 1 ? 'o' : 'i'} fa`;\n  if (diffWeeks < 4) return `${diffWeeks} settiman${diffWeeks === 1 ? 'a' : 'e'} fa`;\n  if (diffMonths < 12) return `${diffMonths} mes${diffMonths === 1 ? 'e' : 'i'} fa`;\n  return `${diffYears} ann${diffYears === 1 ? 'o' : 'i'} fa`;\n}\n\n/**\n * Genera ID univoco\n * @param {string} prefix - Prefisso per l'ID\n * @returns {string} ID univoco\n */\nexport function generateId(prefix = 'id') {\n  return `${prefix}-${Math.random().toString(36).substr(2, 9)}-${Date.now()}`;\n}\n\n/**\n * Debounce function per ottimizzare performance\n * @param {Function} func - Funzione da eseguire\n * @param {number} wait - Millisecondi di attesa\n * @param {boolean} immediate - Esecuzione immediata\n * @returns {Function} Funzione debounced\n */\nexport function debounce(func, wait, immediate = false) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(this, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(this, args);\n  };\n}\n\n/**\n * Throttle function per limitare chiamate\n * @param {Function} func - Funzione da eseguire\n * @param {number} limit - Limite in millisecondi\n * @returns {Function} Funzione throttled\n */\nexport function throttle(func, limit) {\n  let inThrottle;\n  return function executedFunction(...args) {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\n/**\n * Copia testo negli appunti\n * @param {string} text - Testo da copiare\n * @returns {Promise<boolean>} Successo dell'operazione\n */\nexport async function copyToClipboard(text) {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } else {\n      // Fallback per browser più vecchi\n      const textArea = document.createElement('textarea');\n      textArea.value = text;\n      textArea.style.cssText = 'position: fixed; left: -999999px; top: -999999px;';\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      \n      const success = document.execCommand('copy');\n      document.body.removeChild(textArea);\n      return success;\n    }\n  } catch (error) {\n    console.error('Errore copia negli appunti:', error);\n    return false;\n  }\n}\n\n/**\n * Verifica se il dispositivo è mobile\n * @returns {boolean} True se è mobile\n */\nexport function isMobile() {\n  return window.innerWidth <= 768 || /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\n// isPWASupported function removed - not needed\n\n/**\n * Ottieni informazioni sul dispositivo\n * @returns {Object} Info dispositivo\n */\nexport function getDeviceInfo() {\n  return {\n    userAgent: navigator.userAgent,\n    platform: navigator.platform,\n    language: navigator.language,\n    online: navigator.onLine,\n    cookieEnabled: navigator.cookieEnabled,\n    screen: {\n      width: screen.width,\n      height: screen.height,\n      colorDepth: screen.colorDepth\n    },\n    viewport: {\n      width: window.innerWidth,\n      height: window.innerHeight\n    },\n    isMobile: isMobile(),\n    isPWASupported: false\n  };\n}\n\n/**\n * Valida URL\n * @param {string} url - URL da validare\n * @returns {boolean} True se valido\n */\nexport function isValidUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Estrae dominio da URL\n * @param {string} url - URL di origine\n * @returns {string} Dominio estratto\n */\nexport function extractDomain(url) {\n  try {\n    return new URL(url).hostname;\n  } catch {\n    return '';\n  }\n}\n\n/**\n * Converte blob in base64\n * @param {Blob} blob - Blob da convertire\n * @returns {Promise<string>} Base64 string\n */\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result.split(',')[1]);\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  });\n}\n\n/**\n * Converte base64 in blob\n * @param {string} base64 - String base64\n * @param {string} mimeType - Tipo MIME\n * @returns {Blob} Blob risultante\n */\nexport function base64ToBlob(base64, mimeType) {\n  const byteCharacters = atob(base64);\n  const byteNumbers = new Array(byteCharacters.length);\n  \n  for (let i = 0; i < byteCharacters.length; i++) {\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\n  }\n  \n  const byteArray = new Uint8Array(byteNumbers);\n  return new Blob([byteArray], { type: mimeType });\n}\n\n/**\n * Scarica file dal browser\n * @param {string|Blob} data - Dati da scaricare\n * @param {string} filename - Nome file\n * @param {string} mimeType - Tipo MIME (se data è string)\n */\nexport function downloadFile(data, filename, mimeType = 'application/octet-stream') {\n  const blob = data instanceof Blob ? data : new Blob([data], { type: mimeType });\n  const url = URL.createObjectURL(blob);\n  \n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n}\n\n/**\n * Ottieni hash di una stringa\n * @param {string} str - Stringa di input\n * @returns {Promise<string>} Hash SHA-256\n */\nexport async function getStringHash(str) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(str);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n/**\n * Sleep utility per async/await\n * @param {number} ms - Millisecondi di attesa\n * @returns {Promise} Promise che si risolve dopo ms\n */\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Mostra un popup di conferma personalizzato\n * @param {Object} options - Opzioni del popup\n * @param {string} options.title - Titolo del popup\n * @param {string} options.message - Messaggio del popup\n * @param {string} options.icon - Icona (opzionale)\n * @param {string} options.confirmText - Testo del pulsante conferma\n * @param {string} options.cancelText - Testo del pulsante annulla\n * @param {string} options.type - Tipo di popup (default, danger, warning)\n * @returns {Promise<boolean>} - True se confermato, false se annullato\n */\nexport function showConfirmPopup(options = {}) {\n  return new Promise((resolve) => {\n    const {\n      title = 'Conferma',\n      message = 'Sei sicuro di voler continuare?',\n      icon = 'question',\n      confirmText = 'Conferma',\n      cancelText = 'Annulla',\n      type = 'default'\n    } = options;\n\n    // Crea il popup\n    const popup = document.createElement('div');\n    popup.className = 'confirm-popup';\n    \n    // Icone per tipo\n    const icons = {\n      question: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"confirm-popup-icon\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"/>\n      </svg>`,\n      warning: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"confirm-popup-icon\">\n        <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"/>\n      </svg>`,\n      danger: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"confirm-popup-icon\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n      </svg>`,\n      info: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"confirm-popup-icon\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"/>\n      </svg>`\n    };\n\n    const iconHtml = icons[icon] || icons.question;\n    const confirmBtnClass = type === 'danger' ? 'confirm-popup-btn-danger' : 'confirm-popup-btn-primary';\n\n    popup.innerHTML = `\n      <div class=\"confirm-popup-content\">\n        <div class=\"confirm-popup-header\">\n          <h3 class=\"confirm-popup-title\">\n            ${iconHtml}\n            ${title}\n          </h3>\n        </div>\n        <div class=\"confirm-popup-body\">\n          ${message}\n        </div>\n        <div class=\"confirm-popup-footer\">\n          <button class=\"confirm-popup-btn confirm-popup-btn-secondary\" data-action=\"cancel\">\n            ${cancelText}\n          </button>\n          <button class=\"confirm-popup-btn ${confirmBtnClass}\" data-action=\"confirm\">\n            ${confirmText}\n          </button>\n        </div>\n      </div>\n    `;\n\n    // Gestisci click sui pulsanti\n    const handleAction = (action) => {\n      document.body.removeChild(popup);\n      resolve(action === 'confirm');\n    };\n\n    popup.addEventListener('click', (e) => {\n      if (e.target === popup) {\n        handleAction('cancel');\n      }\n    });\n\n    popup.querySelectorAll('[data-action]').forEach(btn => {\n      btn.addEventListener('click', (e) => {\n        e.preventDefault();\n        handleAction(btn.dataset.action);\n      });\n    });\n\n    // Gestisci tasto ESC\n    const handleKeydown = (e) => {\n      if (e.key === 'Escape') {\n        document.removeEventListener('keydown', handleKeydown);\n        handleAction('cancel');\n      }\n    };\n\n    document.addEventListener('keydown', handleKeydown);\n\n    // Aggiungi al DOM\n    document.body.appendChild(popup);\n\n    // Focus sul primo pulsante\n    setTimeout(() => {\n      popup.querySelector('.confirm-popup-btn-secondary').focus();\n    }, 100);\n  });\n}\n\n/**\n * Mostra un popup di conferma per l'eliminazione di un'app\n * @param {string} appName - Nome dell'app da eliminare\n * @returns {Promise<boolean>} - True se confermato\n */\nexport function showDeleteAppConfirm(appName) {\n  return showConfirmPopup({\n    title: 'Elimina App',\n    message: `Sei sicuro di voler eliminare \"${appName}\"? Questa azione non può essere annullata.`,\n    icon: 'danger',\n    confirmText: 'Elimina',\n    cancelText: 'Annulla',\n    type: 'danger'\n  });\n}\n\n/**\n * Mostra un popup di conferma per l'importazione di un'app\n * @param {string} appName - Nome dell'app da importare\n * @param {string} appUrl - URL dell'app\n * @returns {Promise<boolean>} - True se confermato\n */\nexport function showImportAppConfirm(appName, appUrl) {\n  return showConfirmPopup({\n    title: 'Importa App',\n    message: `Importare \"${appName}\" da ${appUrl}?`,\n    icon: 'info',\n    confirmText: 'Importa',\n    cancelText: 'Annulla',\n    type: 'default'\n  });\n}\n\n/**\n * Mostra un popup di conferma per il reset delle impostazioni\n * @returns {Promise<boolean>} - True se confermato\n */\nexport function showResetSettingsConfirm() {\n  return showConfirmPopup({\n    title: 'Reset Impostazioni',\n    message: 'Sei sicuro di voler ripristinare tutte le impostazioni ai valori predefiniti? Questa azione non può essere annullata.',\n    icon: 'warning',\n    confirmText: 'Reset',\n    cancelText: 'Annulla',\n    type: 'danger'\n  });\n}\n\n/**\n * Genera un nome utente casuale combinando colori e frutti\n * @returns {string} Nome utente casuale (es. \"Purple Melon\", \"Azure Kiwi\")\n */\nexport const generateRandomUsername = () => {\n  const colors = [\n    'Purple', 'Azure', 'Crimson', 'Emerald', 'Golden', 'Indigo', 'Jade', 'Lavender',\n    'Magenta', 'Navy', 'Orange', 'Pink', 'Ruby', 'Sapphire', 'Teal', 'Violet',\n    'Amber', 'Bronze', 'Copper', 'Diamond', 'Fuchsia', 'Garnet', 'Honey', 'Ivory',\n    'Jet', 'Lime', 'Maroon', 'Onyx', 'Pearl', 'Quartz', 'Rose', 'Silver'\n  ];\n  \n  const fruits = [\n    'Apple', 'Banana', 'Cherry', 'Dragon', 'Elderberry', 'Fig', 'Grape', 'Honeydew',\n    'Kiwi', 'Lemon', 'Mango', 'Nectarine', 'Orange', 'Papaya', 'Quince', 'Raspberry',\n    'Strawberry', 'Tangerine', 'Ugli', 'Vanilla', 'Watermelon', 'Xigua', 'Yuzu', 'Zucchini',\n    'Apricot', 'Blackberry', 'Cantaloupe', 'Date', 'Guava', 'Jackfruit', 'Lychee', 'Mulberry'\n  ];\n  \n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\n  const randomFruit = fruits[Math.floor(Math.random() * fruits.length)];\n  \n  return `${randomColor} ${randomFruit}`;\n};\n\n/**\n * Ottiene il nome utente dalle impostazioni o genera un nome casuale\n * @param {Object} settings - Impostazioni dell'app\n * @returns {string} Nome utente\n */\nexport const getUserDisplayName = (settings) => {\n  if (settings?.username && settings.username.trim()) {\n    return settings.username.trim();\n  }\n  \n  // Se non c'è un nome utente, genera un nome casuale\n  return generateRandomUsername();\n};\n\n/**\n * Ordina i modelli AI in modo consistente\n * @param {Array} models - Array di modelli AI\n * @returns {Object} Modelli raggruppati e ordinati\n */\nexport const sortAndGroupModels = (models) => {\n  // Raggruppa modelli per categoria\n  const groupedModels = models.reduce((groups, model) => {\n    const group = model.group || '🆓 Modelli Gratuiti';\n    if (!groups[group]) {\n      groups[group] = [];\n    }\n    groups[group].push(model);\n    return groups;\n  }, {});\n  \n  // Ordina i modelli alfabeticamente all'interno di ogni categoria\n  Object.keys(groupedModels).forEach(group => {\n    groupedModels[group].sort((a, b) => a.label.localeCompare(b.label));\n  });\n  \n  // Ordina le categorie: prima i modelli gratuiti, poi quelli a pagamento\n  const sortedGroups = Object.keys(groupedModels).sort((a, b) => {\n    const aIsFree = a.includes('🆓') || a.includes('Gratuiti');\n    const bIsFree = b.includes('🆓') || b.includes('Gratuiti');\n    \n    if (aIsFree && !bIsFree) return -1;\n    if (!aIsFree && bIsFree) return 1;\n    return a.localeCompare(b);\n  });\n  \n  // Crea un nuovo oggetto con le categorie ordinate\n  const orderedGroupedModels = {};\n  sortedGroups.forEach(group => {\n    orderedGroupedModels[group] = groupedModels[group];\n  });\n  \n  return orderedGroupedModels;\n};\n\nexport default {\n  // Toast\n  showToast,\n  hideToast,\n  removeToast,\n  clearAllToasts,\n  \n  // Modal\n  showModal,\n  hideModal,\n  hideAllModals,\n  \n  // Utility\n  escapeHtml,\n  formatFileSize,\n  formatDate,\n  formatRelativeDate,\n  generateId,\n  debounce,\n  throttle,\n  copyToClipboard,\n  isMobile,\n  // isPWASupported removed\n  getDeviceInfo,\n  isValidUrl,\n  extractDomain,\n  blobToBase64,\n  base64ToBlob,\n  downloadFile,\n  getStringHash,\n  sleep,\n  \n  // Confirm Popup\n  showConfirmPopup,\n  showDeleteAppConfirm,\n  showImportAppConfirm,\n  showResetSettingsConfirm\n};","/**\n * AIdeas - Debug Utilities\n * Utility per debugging e sviluppo\n */\n\nimport { DEBUG_CONFIG } from './constants.js';\nimport { showToast, showConfirmPopup } from './helpers.js';\n\nexport const DEBUG = {\n  enabled: import.meta.env.DEV || localStorage.getItem('aideas_debug') === 'true',\n  verbose: localStorage.getItem('aideas_verbose_logging') === 'true',\n  \n  // Basic logging - only in development or debug mode\n  log(...args) {\n    if (this.enabled) {\n      console.log('🔍 [AIdeas]', ...args);\n    }\n  },\n  \n  // Information logging - visible in verbose mode\n  info(...args) {\n    if (this.enabled && this.verbose) {\n      console.info('ℹ️ [AIdeas]', ...args);\n    }\n  },\n  \n  // Success logging - visible in verbose mode  \n  success(...args) {\n    if (this.enabled && this.verbose) {\n      console.log('✅ [AIdeas]', ...args);\n    }\n  },\n  \n  // Warnings - always visible in development\n  warn(...args) {\n    if (this.enabled) {\n      console.warn('⚠️ [AIdeas]', ...args);\n    }\n  },\n  \n  // Errors - always visible even in production\n  error(...args) {\n    console.error('❌ [AIdeas]', ...args);\n  },\n  \n  // Service-specific logging for development\n  service(serviceName, ...args) {\n    if (this.enabled) {\n      console.log(`🔧 [${serviceName}]`, ...args);\n    }\n  },\n  \n  // Network requests logging\n  network(method, url, ...args) {\n    if (this.enabled && this.verbose) {\n      console.log(`🌐 [Network] ${method}`, url, ...args);\n    }\n  },\n  \n  // Performance logging\n  perf(label, value) {\n    if (this.enabled && this.verbose) {\n      console.log(`⚡ [Performance] ${label}:`, value);\n    }\n  },\n  \n  table(data) {\n    if (this.enabled) {\n      console.table(data);\n    }\n  },\n  \n  group(label) {\n    if (this.enabled) {\n      console.group(`📁 ${label}`);\n    }\n  },\n  \n  groupEnd() {\n    if (this.enabled) {\n      console.groupEnd();\n    }\n  }\n};\n\n// Development console tools\nif (import.meta.env.DEV || DEBUG.enabled) {\n  window.AIdeas_DEV = {\n    // Storage inspection\n    async inspectStorage() {\n      const StorageService = await import('../services/StorageService.js').then(m => m.default);\n      const stats = await StorageService.getStats();\n      const apps = await StorageService.getAllApps();\n      const settings = await StorageService.getAllSettings();\n      \n      console.group('🔍 AIdeas Storage Inspection');\n      console.log('Stats:', stats);\n      console.table(apps);\n      console.log('Settings:', settings);\n      console.groupEnd();\n    },\n    \n    // Performance metrics\n    getPerformance() {\n      return {\n        timing: performance.timing,\n        navigation: performance.navigation,\n        memory: performance.memory\n      };\n    },\n    \n    // Error log\n    getErrors() {\n      return window.AIdeas_ERRORS || [];\n    },\n    \n    // Clear all data\n    clearAllData() {\n      showConfirmPopup({\n        title: 'Pulisci Dati',\n        message: 'Eliminare tutti i dati di AIdeas? Questa operazione non può essere annullata!',\n        icon: 'danger',\n        confirmText: 'Elimina',\n        cancelText: 'Annulla',\n        type: 'danger'\n      }).then(confirmed => {\n        if (confirmed) {\n          localStorage.clear();\n          sessionStorage.clear();\n          indexedDB.deleteDatabase('aideas-db');\n          showToast('Tutti i dati eliminati', 'success');\n          setTimeout(() => window.location.reload(), 1000);\n        }\n      });\n    },\n    \n    // Enable verbose logging\n    enableVerbose() {\n      localStorage.setItem('aideas_verbose_logging', 'true');\n      DEBUG.verbose = true;\n      console.log('Verbose logging enabled');\n    },\n    \n    // Disable verbose logging\n    disableVerbose() {\n      localStorage.removeItem('aideas_verbose_logging');\n      DEBUG.verbose = false;\n      console.log('Verbose logging disabled');\n    }\n  };\n}\n\n// Tracking degli errori globali\nexport class ErrorTracker {\n  static errors = [];\n  \n  static init() {\n    window.AIdeas_ERRORS = this.errors;\n    \n    window.addEventListener('error', (event) => {\n      this.trackError({\n        type: 'runtime',\n        message: event.message,\n        source: event.filename,\n        lineno: event.lineno,\n        colno: event.colno,\n        stack: event.error?.stack,\n        timestamp: new Date().toISOString()\n      });\n    });\n    \n    window.addEventListener('unhandledrejection', (event) => {\n      this.trackError({\n        type: 'promise',\n        message: event.reason?.message || 'Unhandled Promise Rejection',\n        stack: event.reason?.stack,\n        timestamp: new Date().toISOString()\n      });\n    });\n  }\n  \n  static trackError(error) {\n    this.errors.push(error);\n    if (DEBUG.enabled) {\n      console.error('[AIdeas Error Tracker]', error);\n    }\n    \n    // Limita il numero di errori memorizzati\n    if (this.errors.length > 100) {\n      this.errors.shift();\n    }\n  }\n  \n  static getErrors() {\n    return this.errors;\n  }\n  \n  static clearErrors() {\n    this.errors = [];\n    return true;\n  }\n}\n\n// Performance monitoring\nexport class PerformanceMonitor {\n  static metrics = {\n    marks: {},\n    measures: {},\n    counters: {}\n  };\n  \n  static mark(name) {\n    if (!DEBUG_CONFIG.ENABLE_PERFORMANCE_MARKS) return;\n    \n    const timestamp = performance.now();\n    this.metrics.marks[name] = timestamp;\n    \n    if (DEBUG.verbose) {\n      DEBUG.log(`Performance mark: ${name} at ${timestamp.toFixed(2)}ms`);\n    }\n  }\n  \n  static measure(name, startMark, endMark) {\n    if (!DEBUG_CONFIG.ENABLE_PERFORMANCE_MARKS) return;\n    \n    if (!this.metrics.marks[startMark] || !this.metrics.marks[endMark]) {\n      DEBUG.warn(`Cannot measure ${name}: marks not found`);\n      return;\n    }\n    \n    const duration = this.metrics.marks[endMark] - this.metrics.marks[startMark];\n    this.metrics.measures[name] = duration;\n    \n    if (DEBUG.verbose) {\n      DEBUG.log(`Performance measure: ${name} = ${duration.toFixed(2)}ms`);\n    }\n  }\n  \n  static count(name) {\n    if (!DEBUG_CONFIG.ENABLE_PERFORMANCE_MARKS) return;\n    \n    if (!this.metrics.counters[name]) {\n      this.metrics.counters[name] = 0;\n    }\n    \n    this.metrics.counters[name]++;\n  }\n  \n  static getMetrics() {\n    return this.metrics;\n  }\n  \n  static clearMetrics() {\n    this.metrics = {\n      marks: {},\n      measures: {},\n      counters: {}\n    };\n  }\n}\n\n// Inizializza il tracker degli errori\nErrorTracker.init();","import { DEBUG } from '../utils/debug.js';\nimport { ERROR_MESSAGES } from '../utils/constants.js';\n\n/**\n * Sistema centralizzato di gestione errori avanzato\n * Gestisce retry, timeout, recovery, rollback e categorizzazione errori\n */\nclass ErrorHandler {\n  constructor() {\n    this.retryStrategies = new Map();\n    this.errorHistory = [];\n    this.maxHistorySize = 100;\n    this.operationStack = [];\n    this.isOnline = navigator.onLine;\n    \n    // Monitora connessione\n    this.setupNetworkMonitoring();\n    \n    // Configura strategie di retry predefinite\n    this.setupDefaultRetryStrategies();\n  }\n\n  /**\n   * Configura monitoraggio rete\n   */\n  setupNetworkMonitoring() {\n    window.addEventListener('online', () => {\n      this.isOnline = true;\n      DEBUG.success('🌐 Connessione ripristinata');\n      this.retryFailedOperations();\n    });\n\n    window.addEventListener('offline', () => {\n      this.isOnline = false;\n      DEBUG.warn('🔴 Connessione persa');\n    });\n  }\n\n  /**\n   * Configura strategie di retry predefinite\n   */\n  setupDefaultRetryStrategies() {\n    // Strategia per errori di rete\n    this.retryStrategies.set('NETWORK_ERROR', {\n      maxRetries: 3,\n      delayMs: 1000,\n      backoffMultiplier: 2,\n      shouldRetry: (error) => this.isNetworkError(error),\n      onRetry: (attemptNumber) => DEBUG.warn(`🔄 Tentativo ${attemptNumber} per errore di rete`)\n    });\n\n    // Strategia per errori di quota/rate limit\n    this.retryStrategies.set('RATE_LIMIT', {\n      maxRetries: 5,\n      delayMs: 5000,\n      backoffMultiplier: 1.5,\n      shouldRetry: (error) => this.isRateLimitError(error),\n      onRetry: (attemptNumber) => DEBUG.warn(`⏳ Tentativo ${attemptNumber} per rate limit`)\n    });\n\n    // Strategia per errori temporanei\n    this.retryStrategies.set('TEMPORARY_ERROR', {\n      maxRetries: 2,\n      delayMs: 2000,\n      backoffMultiplier: 1.5,\n      shouldRetry: (error) => this.isTemporaryError(error),\n      onRetry: (attemptNumber) => DEBUG.warn(`🔄 Tentativo ${attemptNumber} per errore temporaneo`)\n    });\n\n    // Strategia per errori di storage\n    this.retryStrategies.set('STORAGE_ERROR', {\n      maxRetries: 2,\n      delayMs: 1000,\n      backoffMultiplier: 2,\n      shouldRetry: (error) => this.isStorageError(error),\n      onRetry: (attemptNumber) => DEBUG.warn(`💾 Tentativo ${attemptNumber} per errore di storage`)\n    });\n  }\n\n  /**\n   * Gestisce un'operazione con retry automatico e recovery\n   * @param {Function} operation - Operazione da eseguire\n   * @param {Object} options - Opzioni di configurazione\n   * @returns {Promise} Risultato dell'operazione\n   */\n  async withRetry(operation, options = {}) {\n    const config = {\n      operationName: options.operationName || 'Operazione sconosciuta',\n      timeout: options.timeout || 30000,\n      rollbackFn: options.rollbackFn || null,\n      retryStrategy: options.retryStrategy || 'NETWORK_ERROR',\n      context: options.context || {},\n      validateResult: options.validateResult || null,\n      ...options\n    };\n\n    // Aggiungi operazione allo stack per rollback\n    const operationId = this.pushOperation(config);\n    \n    try {\n      const result = await this.executeWithRetry(operation, config);\n      \n      // Valida il risultato se richiesto\n      if (config.validateResult && !config.validateResult(result)) {\n        throw new Error('Risultato operazione non valido');\n      }\n      \n      // Rimuovi operazione completata con successo\n      this.popOperation(operationId);\n      \n      return result;\n      \n    } catch (error) {\n      // Esegui rollback se disponibile\n      if (config.rollbackFn) {\n        await this.executeRollback(config.rollbackFn, error, config);\n      }\n      \n      // Rimuovi operazione fallita\n      this.popOperation(operationId);\n      \n      // Crea errore categorizzato\n      const categorizedError = this.categorizeError(error, config);\n      \n      // Registra errore nella storia\n      this.recordError(categorizedError, config);\n      \n      throw categorizedError;\n    }\n  }\n\n  /**\n   * Esegue operazione con retry e timeout\n   */\n  async executeWithRetry(operation, config) {\n    const strategy = this.retryStrategies.get(config.retryStrategy);\n    if (!strategy) {\n      throw new Error(`Strategia retry sconosciuta: ${config.retryStrategy}`);\n    }\n\n    let lastError;\n    let attemptNumber = 0;\n\n    while (attemptNumber <= strategy.maxRetries) {\n      try {\n        // Applica timeout se specificato\n        if (config.timeout) {\n          const timeoutPromise = new Promise((_, reject) => {\n            setTimeout(() => reject(new Error('Timeout operazione')), config.timeout);\n          });\n          \n          return await Promise.race([operation(), timeoutPromise]);\n        } else {\n          return await operation();\n        }\n        \n      } catch (error) {\n        lastError = error;\n        attemptNumber++;\n        \n        // Se non è l'ultimo tentativo e l'errore è riprovabile\n        if (attemptNumber <= strategy.maxRetries && strategy.shouldRetry(error)) {\n          const delay = strategy.delayMs * Math.pow(strategy.backoffMultiplier, attemptNumber - 1);\n          \n          strategy.onRetry(attemptNumber);\n          DEBUG.warn(`⏳ Attesa ${delay}ms prima del prossimo tentativo`);\n          \n          await this.sleep(delay);\n          continue;\n        }\n        \n        break;\n      }\n    }\n\n    throw lastError;\n  }\n\n  /**\n   * Esegue rollback per operazione fallita\n   */\n  async executeRollback(rollbackFn, originalError, config) {\n    try {\n      DEBUG.warn(`🔄 Esecuzione rollback per ${config.operationName}`);\n      await rollbackFn(originalError, config.context);\n      DEBUG.success('✅ Rollback completato');\n    } catch (rollbackError) {\n      DEBUG.error('❌ Errore durante rollback:', rollbackError);\n      // Non lanciare l'errore di rollback, mantieni l'errore originale\n    }\n  }\n\n  /**\n   * Categorizza un errore per una migliore gestione\n   */\n  categorizeError(error, config) {\n    const errorInfo = {\n      originalError: error,\n      category: 'UNKNOWN',\n      severity: 'MEDIUM',\n      isRetryable: false,\n      userMessage: '',\n      technicalMessage: error.message,\n      suggestedAction: '',\n      operationName: config.operationName,\n      timestamp: new Date().toISOString(),\n      context: config.context\n    };\n\n    // Categorizza in base al tipo di errore\n    if (this.isNetworkError(error)) {\n      errorInfo.category = 'NETWORK';\n      errorInfo.severity = 'HIGH';\n      errorInfo.isRetryable = true;\n      errorInfo.userMessage = 'Problema di connessione. Verifica la tua connessione internet.';\n      errorInfo.suggestedAction = 'Riprova quando la connessione è stabile';\n    } else if (this.isRateLimitError(error)) {\n      errorInfo.category = 'RATE_LIMIT';\n      errorInfo.severity = 'MEDIUM';\n      errorInfo.isRetryable = true;\n      errorInfo.userMessage = 'Troppi tentativi ravvicinati. Riprova tra qualche minuto.';\n      errorInfo.suggestedAction = 'Attendi qualche minuto prima di riprovare';\n    } else if (this.isAuthError(error)) {\n      errorInfo.category = 'AUTHENTICATION';\n      errorInfo.severity = 'HIGH';\n      errorInfo.isRetryable = false;\n      errorInfo.userMessage = 'Problema di autenticazione. Verifica le credenziali.';\n      errorInfo.suggestedAction = 'Riconfigutra le credenziali di accesso';\n    } else if (this.isValidationError(error)) {\n      errorInfo.category = 'VALIDATION';\n      errorInfo.severity = 'LOW';\n      errorInfo.isRetryable = false;\n      errorInfo.userMessage = 'Dati non validi. Controlla i parametri inseriti.';\n      errorInfo.suggestedAction = 'Verifica e correggi i dati inseriti';\n    } else if (this.isStorageError(error)) {\n      errorInfo.category = 'STORAGE';\n      errorInfo.severity = 'HIGH';\n      errorInfo.isRetryable = true;\n      errorInfo.userMessage = 'Problema di archiviazione. Spazio insufficiente o database corrotto.';\n      errorInfo.suggestedAction = 'Libera spazio o riavvia l\\'applicazione';\n    } else if (this.isTemporaryError(error)) {\n      errorInfo.category = 'TEMPORARY';\n      errorInfo.severity = 'LOW';\n      errorInfo.isRetryable = true;\n      errorInfo.userMessage = 'Errore temporaneo. Riprova tra qualche istante.';\n      errorInfo.suggestedAction = 'Riprova l\\'operazione';\n    }\n\n    return errorInfo;\n  }\n\n  /**\n   * Determina se un errore è di rete\n   */\n  isNetworkError(error) {\n    if (!this.isOnline) return true;\n    \n    const networkIndicators = [\n      'network error',\n      'connection refused',\n      'connection timeout',\n      'dns lookup failed',\n      'fetch failed',\n      'cors error',\n      'net::',\n      'connection_failed'\n    ];\n    \n    return networkIndicators.some(indicator => \n      error.message.toLowerCase().includes(indicator)\n    );\n  }\n\n  /**\n   * Determina se un errore è di rate limit\n   */\n  isRateLimitError(error) {\n    const rateLimitIndicators = [\n      'rate limit',\n      'too many requests',\n      'quota exceeded',\n      'api limit',\n      'throttled'\n    ];\n    \n    return rateLimitIndicators.some(indicator => \n      error.message.toLowerCase().includes(indicator)\n    ) || error.status === 429;\n  }\n\n  /**\n   * Determina se un errore è di autenticazione\n   */\n  isAuthError(error) {\n    const authIndicators = [\n      'authentication',\n      'unauthorized',\n      'invalid token',\n      'access denied',\n      'permission denied',\n      'forbidden'\n    ];\n    \n    return authIndicators.some(indicator => \n      error.message.toLowerCase().includes(indicator)\n    ) || [401, 403].includes(error.status);\n  }\n\n  /**\n   * Determina se un errore è di validazione\n   */\n  isValidationError(error) {\n    const validationIndicators = [\n      'validation',\n      'invalid',\n      'required',\n      'missing',\n      'bad request',\n      'malformed'\n    ];\n    \n    return validationIndicators.some(indicator => \n      error.message.toLowerCase().includes(indicator)\n    ) || error.status === 400;\n  }\n\n  /**\n   * Determina se un errore è di storage\n   */\n  isStorageError(error) {\n    const storageIndicators = [\n      'quota',\n      'storage',\n      'database',\n      'indexeddb',\n      'space',\n      'disk full'\n    ];\n    \n    return storageIndicators.some(indicator => \n      error.message.toLowerCase().includes(indicator)\n    );\n  }\n\n  /**\n   * Determina se un errore è temporaneo\n   */\n  isTemporaryError(error) {\n    const temporaryIndicators = [\n      'temporary',\n      'timeout',\n      'busy',\n      'locked',\n      'retry',\n      'server error'\n    ];\n    \n    return temporaryIndicators.some(indicator => \n      error.message.toLowerCase().includes(indicator)\n    ) || [500, 502, 503, 504].includes(error.status);\n  }\n\n  /**\n   * Registra operazione nello stack per rollback\n   */\n  pushOperation(config) {\n    const operationId = Date.now() + Math.random();\n    this.operationStack.push({\n      id: operationId,\n      ...config,\n      startTime: Date.now()\n    });\n    return operationId;\n  }\n\n  /**\n   * Rimuove operazione dallo stack\n   */\n  popOperation(operationId) {\n    const index = this.operationStack.findIndex(op => op.id === operationId);\n    if (index !== -1) {\n      this.operationStack.splice(index, 1);\n    }\n  }\n\n  /**\n   * Registra errore nella storia\n   */\n  recordError(errorInfo, config) {\n    this.errorHistory.push({\n      ...errorInfo,\n      id: Date.now() + Math.random(),\n      timestamp: new Date().toISOString()\n    });\n\n    // Mantieni solo gli ultimi errori\n    if (this.errorHistory.length > this.maxHistorySize) {\n      this.errorHistory.shift();\n    }\n\n    // Log appropriato in base alla severità\n    switch (errorInfo.severity) {\n      case 'HIGH':\n        DEBUG.error(`❌ ${config.operationName}:`, errorInfo.technicalMessage);\n        break;\n      case 'MEDIUM':\n        DEBUG.warn(`⚠️ ${config.operationName}:`, errorInfo.technicalMessage);\n        break;\n      case 'LOW':\n        DEBUG.log(`ℹ️ ${config.operationName}:`, errorInfo.technicalMessage);\n        break;\n    }\n  }\n\n  /**\n   * Riprova operazioni fallite quando la connessione è ripristinata\n   */\n  async retryFailedOperations() {\n    const failedOperations = this.operationStack.filter(op => \n      op.retryWhenOnline && Date.now() - op.startTime < 300000 // 5 minuti\n    );\n\n    if (failedOperations.length > 0) {\n      DEBUG.log(`🔄 Riprovo ${failedOperations.length} operazioni dopo ripristino connessione`);\n      \n      for (const operation of failedOperations) {\n        try {\n          if (operation.retryFunction) {\n            await operation.retryFunction();\n          }\n        } catch (error) {\n          DEBUG.warn(`❌ Errore nel riprovare operazione ${operation.operationName}:`, error);\n        }\n      }\n    }\n  }\n\n  /**\n   * Ottiene statistiche degli errori\n   */\n  getErrorStats() {\n    const now = Date.now();\n    const last24h = this.errorHistory.filter(e => \n      now - new Date(e.timestamp).getTime() < 24 * 60 * 60 * 1000\n    );\n\n    const categories = {};\n    const severities = {};\n    \n    last24h.forEach(error => {\n      categories[error.category] = (categories[error.category] || 0) + 1;\n      severities[error.severity] = (severities[error.severity] || 0) + 1;\n    });\n\n    return {\n      total: this.errorHistory.length,\n      last24h: last24h.length,\n      categories,\n      severities,\n      isOnline: this.isOnline,\n      activeOperations: this.operationStack.length\n    };\n  }\n\n  /**\n   * Pulisce la storia degli errori\n   */\n  clearErrorHistory() {\n    this.errorHistory = [];\n    DEBUG.log('🧹 Storia errori pulita');\n  }\n\n  /**\n   * Utility per sleep\n   */\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Crea backup automatico prima di operazioni critiche\n   */\n  async createBackup(operationName, data) {\n    try {\n      const backup = {\n        operationName,\n        data,\n        timestamp: new Date().toISOString(),\n        id: `backup_${Date.now()}`\n      };\n\n      // Salva backup in localStorage temporaneo\n      const backups = JSON.parse(localStorage.getItem('aideas_backups') || '[]');\n      backups.push(backup);\n      \n      // Mantieni solo gli ultimi 5 backup\n      if (backups.length > 5) {\n        backups.shift();\n      }\n      \n      localStorage.setItem('aideas_backups', JSON.stringify(backups));\n      \n      DEBUG.log(`💾 Backup creato per ${operationName}`);\n      return backup.id;\n      \n    } catch (error) {\n      DEBUG.warn('⚠️ Errore creazione backup:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Ripristina backup in caso di errore\n   */\n  async restoreBackup(backupId) {\n    try {\n      const backups = JSON.parse(localStorage.getItem('aideas_backups') || '[]');\n      const backup = backups.find(b => b.id === backupId);\n      \n      if (!backup) {\n        throw new Error('Backup non trovato');\n      }\n      \n      DEBUG.log(`🔄 Ripristino backup per ${backup.operationName}`);\n      return backup.data;\n      \n    } catch (error) {\n      DEBUG.error('❌ Errore ripristino backup:', error);\n      throw error;\n    }\n  }\n}\n\n// Esporta istanza singleton\nexport default new ErrorHandler(); ","import Dexie from 'dexie';\nimport { getEmojiByCategory } from '../utils/constants.js';\nimport { DEBUG } from '../utils/debug.js';\nimport ErrorHandler from './ErrorHandler.js';\n\n/**\n * AIdeas Storage Service - Gestione IndexedDB con Dexie.js\n * Classe singleton per gestire tutto lo storage locale dell'applicazione\n */\nclass StorageService {\n  constructor() {\n    if (StorageService.instance) {\n      return StorageService.instance;\n    }\n\n    this.db = new Dexie('AIdeas_DB');\n    this.initDatabase();\n    StorageService.instance = this;\n  }\n\n  /**\n   * Inizializza lo schema del database\n   */\n  initDatabase() {\n    this.db.version(1).stores({\n      // Apps installate dall'utente\n      apps: '++id, name, description, category, version, url, type, githubUrl, installDate, lastUsed, favorite, source, originalGithubUrl, uniqueId, *tags',\n      \n      // Files delle app (per ZIP imports) \n      appFiles: '++id, appId, filename, content, size, mimeType',\n      \n      // Impostazioni utente\n      settings: 'key, value, lastModified',\n      \n      // Eventi per sincronizzazione\n      syncEvents: '++id, timestamp, action, data, synced, deviceId',\n      \n      // Catalogo app store\n      catalog: '++id, name, description, author, githubUrl, rating, downloads, featured, *categories'\n    });\n\n    // Hook per validazione dati\n    this.db.apps.hook('creating', (primKey, obj, trans) => {\n      obj.installDate = obj.installDate || new Date();\n      obj.lastUsed = obj.lastUsed || new Date();\n      obj.favorite = obj.favorite || false;\n      obj.tags = obj.tags || [];\n      obj.source = obj.source || 'manual'; // 'manual' o 'store'\n      obj.originalGithubUrl = obj.originalGithubUrl || null;\n      obj.uniqueId = obj.uniqueId || this.generateUniqueId(obj.name, obj.author);\n    });\n\n    this.db.syncEvents.hook('creating', (primKey, obj, trans) => {\n      obj.timestamp = obj.timestamp || new Date();\n      obj.synced = obj.synced || false;\n      obj.deviceId = obj.deviceId || this.getDeviceId();\n    });\n  }\n\n  /**\n   * APPS MANAGEMENT\n   */\n\n  // Installa una nuova app\n  async installApp(appData) {\n    return await ErrorHandler.withRetry(async () => {\n      // Validazione dati di input\n      if (!appData.name || !appData.name.trim()) {\n        throw new Error('Nome app richiesto');\n      }\n\n      // Controlla se esiste già un'app con lo stesso uniqueId\n      const proposedUniqueId = appData.uniqueId || this.generateUniqueId(appData.name, appData.author);\n      const existingApp = await this.db.apps.where('uniqueId').equals(proposedUniqueId).first();\n      if (existingApp) {\n        throw new Error(`App \"${appData.name}\" di \"${appData.author || 'Unknown'}\" già installata`);\n      }\n\n      // Assegna automaticamente un'emoji se non c'è icona\n      let icon = appData.icon;\n      if (!icon) {\n        icon = getEmojiByCategory(appData.category);\n        DEBUG.success(`Assegnata emoji automatica per ${appData.name}: ${icon}`);\n      }\n\n      const app = {\n        name: appData.name,\n        description: appData.description || '',\n        category: appData.category || 'uncategorized',\n        version: appData.version || '1.0.0',\n        url: appData.url || null,\n        type: appData.type, // 'zip', 'url', 'github', 'pwa', 'html'\n        githubUrl: appData.githubUrl || null,\n        icon: icon,\n        manifest: appData.manifest || {},\n        permissions: appData.permissions || [],\n        tags: appData.tags || [],\n        metadata: appData.metadata || {},\n        content: appData.content || null, // Aggiungi campo per contenuto HTML\n        openMode: appData.openMode || (window?.appSettings?.defaultOpenMode || 'modal'), // Nuovo campo\n        // Nuovi campi per tracking origine\n        source: appData.source || 'manual', // 'manual', 'store'\n        originalGithubUrl: appData.originalGithubUrl || null,\n        uniqueId: appData.uniqueId || this.generateUniqueId(appData.name, appData.author),\n        author: appData.author || 'Unknown'\n      };\n\n      const appId = await this.db.apps.add(app);\n      \n      // Rimuovi l'app dalla lista delle eliminazioni se era stata eliminata prima\n      if (app.uniqueId) {\n        await this.removeFromDeletedApps(app.uniqueId);\n      }\n      \n      // Salva i file se è un'app ZIP\n      if (appData.files && appData.files.length > 0) {\n        try {\n          await this.saveAppFiles(appId, appData.files);\n        } catch (fileError) {\n          // Rollback: rimuovi l'app se il salvataggio dei file fallisce\n          await this.db.apps.delete(appId);\n          throw new Error(`Errore salvataggio file: ${fileError.message}`);\n        }\n      }\n\n      // Genera automaticamente i file PWA (tranne per app URL importate)\n      // La generazione PWA verrà gestita dal componente principale per evitare dipendenze circolari\n      if (appData.type !== 'url' || !appData.url) {\n        // Emetti un evento per notificare la generazione PWA\n        window.dispatchEvent(new CustomEvent('app-installed', { \n          detail: { appId, app } \n        }));\n      }\n\n      // Aggiorna timestamp di ultima modifica\n      await this.setSetting('lastDataModification', new Date().toISOString());\n\n      // Registra evento sync\n      try {\n        await this.addSyncEvent('app_installed', { appId, app });\n      } catch (syncError) {\n        DEBUG.warn('Errore registrazione evento sync:', syncError);\n        // Non bloccare l'installazione se il sync fallisce\n      }\n\n      DEBUG.success(`✅ App \"${appData.name}\" installata con successo (ID: ${appId})`);\n      return appId;\n      \n    }, {\n      operationName: `Installazione app: ${appData.name}`,\n      retryStrategy: 'STORAGE_ERROR',\n      timeout: 15000,\n      context: { appName: appData.name, appType: appData.type },\n      rollbackFn: async (error, context) => {\n        DEBUG.warn(`🔄 Rollback installazione app: ${context.appName}`);\n        // Il rollback specifico è già gestito nel try-catch dei file\n      },\n      validateResult: (appId) => {\n        return appId && typeof appId === 'number' && appId > 0;\n      }\n    });\n  }\n\n  // Ottieni tutte le app\n  async getAllApps(options = {}) {\n    try {\n      let query = this.db.apps.orderBy('lastUsed').reverse();\n\n      if (options.category) {\n        query = query.filter(app => app.category === options.category);\n      }\n\n      if (options.search) {\n        query = query.filter(app => \n          app.name.toLowerCase().includes(options.search.toLowerCase()) ||\n          app.description.toLowerCase().includes(options.search.toLowerCase()) ||\n          app.tags.some(tag => tag.toLowerCase().includes(options.search.toLowerCase()))\n        );\n      }\n\n      if (options.favorite) {\n        query = query.filter(app => app.favorite === true);\n      }\n\n      return await query.toArray();\n    } catch (error) {\n      DEBUG.error('Errore recupero app:', error);\n      return [];\n    }\n  }\n\n  // Ottieni app per ID\n  async getApp(appId) {\n    try {\n      return await this.db.apps.get(appId);\n    } catch (error) {\n      DEBUG.error('Errore recupero app:', error);\n      return null;\n    }\n  }\n\n  // Ottieni dati completi dell'app (app + file)\n  async getAppData(appId) {\n    try {\n      const app = await this.getApp(appId);\n      if (!app) {\n        return null;\n      }\n\n      const files = await this.getAppFiles(appId);\n      \n      // Converte l'array di file in un oggetto con filename come chiave\n      // compatibile con il formato del basecode originale\n      const filesObj = {};\n      files.forEach(file => {\n        filesObj[file.filename] = file.content;\n      });\n\n      // Restituisce i dati nel formato compatibile con il basecode\n      return {\n        ...app,\n        files: filesObj\n      };\n    } catch (error) {\n      DEBUG.error('Errore recupero dati app:', error);\n      return null;\n    }\n  }\n\n  // Ottieni app con i suoi file in formato dettagliato\n  async getAppWithFiles(appId) {\n    try {\n      const app = await this.getApp(appId);\n      if (!app) {\n        return null;\n      }\n\n      const files = await this.getAppFiles(appId);\n      \n      return {\n        ...app,\n        files: files\n      };\n    } catch (error) {\n      DEBUG.error('Errore recupero app con file:', error);\n      return null;\n    }\n  }\n\n  // Aggiorna app\n  async updateApp(appId, updates) {\n    try {\n      await this.db.apps.update(appId, updates);\n      \n      // Aggiorna timestamp di ultima modifica\n      await this.setSetting('lastDataModification', new Date().toISOString());\n      \n      await this.addSyncEvent('app_updated', { appId, updates });\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore aggiornamento app:', error);\n      return false;\n    }\n  }\n\n  // Aggiorna metadati specifici di un'app (CSP, domini esterni, ecc.)\n  async setAppMetadata(appId, metadata) {\n    try {\n      const app = await this.getApp(appId);\n      if (!app) {\n        throw new Error('App non trovata');\n      }\n\n      // Unisci i metadati esistenti con quelli nuovi\n      const updatedMetadata = {\n        ...app.metadata,\n        ...metadata\n      };\n\n      await this.db.apps.update(appId, { metadata: updatedMetadata });\n      DEBUG.success(`Metadati aggiornati per app ${appId}:`, metadata);\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore aggiornamento metadati app:', error);\n      return false;\n    }\n  }\n\n  // Ottieni metadati specifici di un'app\n  async getAppMetadata(appId, key = null) {\n    try {\n      const app = await this.getApp(appId);\n      if (!app || !app.metadata) {\n        return null;\n      }\n\n      if (key) {\n        return app.metadata[key] || null;\n      }\n\n      return app.metadata;\n    } catch (error) {\n      DEBUG.error('Errore recupero metadati app:', error);\n      return null;\n    }\n  }\n\n  // Migra app esistenti per aggiungere campo content se mancante\n  async migrateAppsForContent() {\n    try {\n      DEBUG.service('StorageService', 'Inizio migrazione app HTML...');\n      const apps = await this.db.apps.toArray();\n      DEBUG.info(`Trovate ${apps.length} app totali`);\n      \n      let migrated = 0;\n      \n      for (const app of apps) {\n        DEBUG.info(`Controllo app: ${app.name} (tipo: ${app.type})`);\n        \n        if (app.type === 'html' && !app.content) {\n          DEBUG.info(`App HTML senza contenuto trovata: ${app.name}`);\n          \n          // Per le app HTML senza contenuto, prova a recuperarlo dai file\n          const files = await this.getAppFiles(app.id);\n          DEBUG.info(`Trovati ${files.length} file per app ${app.name}`);\n          \n          const htmlFile = files.find(f => f.filename.endsWith('.html'));\n          \n          if (htmlFile) {\n            DEBUG.success(`File HTML trovato: ${htmlFile.filename}`);\n            await this.db.apps.update(app.id, { content: htmlFile.content });\n            migrated++;\n            DEBUG.success(`App ${app.name} migrata con successo`);\n          } else {\n            DEBUG.warn(`Nessun file HTML trovato per app ${app.name}`);\n          }\n        }\n      }\n      \n      if (migrated > 0) {\n        DEBUG.success(`Migrate ${migrated} app HTML per aggiungere campo content`);\n      } else {\n        DEBUG.info('Nessuna app HTML da migrare');\n      }\n      \n      return migrated;\n    } catch (error) {\n      DEBUG.error('Errore migrazione app:', error);\n      DEBUG.error('Stack trace:', error.stack);\n      return 0;\n    }\n  }\n\n  // Elimina app\n  async deleteApp(appId) {\n    try {\n      const app = await this.getApp(appId);\n      if (!app) {\n        DEBUG.warn(`App ${appId} non trovata per eliminazione`);\n        return false;\n      }\n\n      await this.db.transaction('rw', [this.db.apps, this.db.appFiles], async () => {\n        await this.db.apps.delete(appId);\n        await this.db.appFiles.where('appId').equals(appId).delete();\n      });\n\n      // Salva l'eliminazione nella lista delle app eliminate\n      await this.addDeletedApp(app.uniqueId || app.name);\n\n      // Aggiorna timestamp di ultima modifica\n      await this.setSetting('lastDataModification', new Date().toISOString());\n\n      await this.addSyncEvent('app_deleted', { appId, uniqueId: app.uniqueId, name: app.name });\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore eliminazione app:', error);\n      return false;\n    }\n  }\n\n  // Aggiunge un'app alla lista delle app eliminate\n  async addDeletedApp(uniqueId) {\n    try {\n      const deletedApps = await this.getSetting('deletedApps', []);\n      if (!deletedApps.includes(uniqueId)) {\n        deletedApps.push(uniqueId);\n        await this.setSetting('deletedApps', deletedApps);\n        DEBUG.log(`📝 App ${uniqueId} aggiunta alla lista eliminazioni`);\n      }\n    } catch (error) {\n      DEBUG.error('Errore aggiunta app eliminata:', error);\n    }\n  }\n\n  // Verifica se un'app è stata eliminata localmente\n  async isAppDeleted(uniqueId) {\n    try {\n      const deletedApps = await this.getSetting('deletedApps', []);\n      return deletedApps.includes(uniqueId);\n    } catch (error) {\n      DEBUG.error('Errore verifica app eliminata:', error);\n      return false;\n    }\n  }\n\n  // Pulisce la lista delle app eliminate (per app che vengono reinstallate)\n  async removeFromDeletedApps(uniqueId) {\n    try {\n      const deletedApps = await this.getSetting('deletedApps', []);\n      const filtered = deletedApps.filter(id => id !== uniqueId);\n      await this.setSetting('deletedApps', filtered);\n      DEBUG.log(`🧹 App ${uniqueId} rimossa dalla lista eliminazioni`);\n    } catch (error) {\n      DEBUG.error('Errore rimozione app eliminata:', error);\n    }\n  }\n\n  // Cancella tutte le app\n  async clearAllApps() {\n    try {\n      await this.db.transaction('rw', [this.db.apps, this.db.appFiles], async () => {\n        await this.db.apps.clear();\n        await this.db.appFiles.clear();\n      });\n\n      // Pulisci la lista delle app eliminate\n      await this.setSetting('deletedApps', []);\n\n      // Aggiorna timestamp di ultima modifica\n      await this.setSetting('lastDataModification', new Date().toISOString());\n\n      // Registra evento sync per la cancellazione di tutte le app\n      await this.addSyncEvent('all_apps_deleted', { timestamp: new Date().toISOString() });\n      \n      DEBUG.success('✅ Tutte le app sono state cancellate');\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore cancellazione tutte le app:', error);\n      return false;\n    }\n  }\n\n  // Reset completo del database - cancella tutto\n  async clearAllData() {\n    try {\n      await this.db.transaction('rw', [this.db.apps, this.db.appFiles, this.db.settings, this.db.syncEvents, this.db.catalog], async () => {\n        await this.db.apps.clear();\n        await this.db.appFiles.clear();\n        await this.db.settings.clear();\n        await this.db.syncEvents.clear();\n        await this.db.catalog.clear();\n      });\n\n      // Cancella anche i dati dal localStorage per sicurezza\n      const keysToRemove = [\n        'aideas_debug',\n        'aideas_verbose_logging',\n        'githubToken',\n        'googleDriveToken',\n        'cloudSyncEnabled',\n        'selectedProvider',\n        'lastDataModification',\n        'deletedApps'\n      ];\n      \n      keysToRemove.forEach(key => {\n        try {\n          localStorage.removeItem(key);\n        } catch (e) {\n          DEBUG.warn(`Errore rimozione localStorage key ${key}:`, e);\n        }\n      });\n\n      DEBUG.success('✅ Reset completo del database eseguito');\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore reset completo database:', error);\n      return false;\n    }\n  }\n\n  // Aggiorna ultimo utilizzo\n  async updateLastUsed(appId) {\n    try {\n      await this.db.apps.update(appId, { lastUsed: new Date() });\n    } catch (error) {\n      DEBUG.error('Errore aggiornamento ultimo utilizzo:', error);\n    }\n  }\n\n  // Toggle preferito\n  async toggleFavorite(appId) {\n    try {\n      const app = await this.db.apps.get(appId);\n      if (app) {\n        await this.db.apps.update(appId, { favorite: !app.favorite });\n        return !app.favorite;\n      }\n      return false;\n    } catch (error) {\n      DEBUG.error('Errore toggle preferito:', error);\n      return false;\n    }\n  }\n\n  /**\n   * APP FILES MANAGEMENT\n   */\n\n  // Salva file di un'app\n  async saveAppFiles(appId, files) {\n    try {\n      const filePromises = files.map(file => \n        this.db.appFiles.add({\n          appId,\n          filename: file.filename,\n          content: file.content,\n          size: file.size || file.content.length,\n          mimeType: file.mimeType || this.getMimeType(file.filename)\n        })\n      );\n\n      await Promise.all(filePromises);\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore salvataggio file app:', error);\n      return false;\n    }\n  }\n\n  // Ottieni file di un'app\n  async getAppFiles(appId) {\n    try {\n      return await this.db.appFiles.where('appId').equals(appId).toArray();\n    } catch (error) {\n      DEBUG.error('Errore recupero file app:', error);\n      return [];\n    }\n  }\n\n  /**\n   * SETTINGS MANAGEMENT  \n   */\n\n  // Ottieni impostazione\n  async getSetting(key, defaultValue = null) {\n    try {\n      const setting = await this.db.settings.get(key);\n      return setting ? setting.value : defaultValue;\n    } catch (error) {\n      DEBUG.error('Errore recupero impostazione:', error);\n      return defaultValue;\n    }\n  }\n\n  // Salva impostazione\n  async setSetting(key, value) {\n    try {\n      await this.db.settings.put({\n        key,\n        value,\n        lastModified: new Date()\n      });\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore salvataggio impostazione:', error);\n      return false;\n    }\n  }\n\n  // Ottieni tutte le impostazioni\n  async getAllSettings() {\n    try {\n      const settings = await this.db.settings.toArray();\n      const result = {};\n      settings.forEach(setting => {\n        result[setting.key] = setting.value;\n      });\n      return result;\n    } catch (error) {\n      DEBUG.error('Errore recupero impostazioni:', error);\n      return {};\n    }\n  }\n\n  // Salva tutte le impostazioni\n  async setAllSettings(settings) {\n    try {\n      const transactions = [];\n      \n      for (const [key, value] of Object.entries(settings)) {\n        transactions.push(\n          this.db.settings.put({\n            key,\n            value,\n            lastModified: new Date()\n          })\n        );\n      }\n      \n      await Promise.all(transactions);\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore salvataggio impostazioni:', error);\n      return false;\n    }\n  }\n\n  /**\n   * SYNC EVENTS MANAGEMENT\n   */\n\n  // Aggiungi evento sync\n  async addSyncEvent(action, data) {\n    try {\n      await this.db.syncEvents.add({\n        action,\n        data,\n        timestamp: new Date(),\n        synced: false,\n        deviceId: await this.getDeviceId()\n      });\n    } catch (error) {\n      DEBUG.error('Errore aggiunta evento sync:', error);\n    }\n  }\n\n  // Ottieni eventi non sincronizzati\n  async getUnsyncedEvents() {\n    try {\n      return await this.db.syncEvents.where('synced').equals(false).toArray();\n    } catch (error) {\n      DEBUG.error('Errore recupero eventi non sincronizzati:', error);\n      return [];\n    }\n  }\n\n  // Marca eventi come sincronizzati\n  async markEventsSynced(eventIds) {\n    try {\n      await this.db.syncEvents.where('id').anyOf(eventIds).modify({ synced: true });\n    } catch (error) {\n      DEBUG.error('Errore aggiornamento eventi sync:', error);\n    }\n  }\n\n  /**\n   * CATALOG MANAGEMENT\n   */\n\n  // Aggiorna catalogo\n  async updateCatalog(apps) {\n    try {\n      await this.db.catalog.clear();\n      await this.db.catalog.bulkAdd(apps);\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore aggiornamento catalogo:', error);\n      return false;\n    }\n  }\n\n  // Cerca nel catalogo\n  async searchCatalog(query, options = {}) {\n    try {\n      let result = this.db.catalog.orderBy('downloads').reverse();\n\n      if (query) {\n        result = result.filter(app =>\n          app.name.toLowerCase().includes(query.toLowerCase()) ||\n          app.description.toLowerCase().includes(query.toLowerCase()) ||\n          app.categories.some(cat => cat.toLowerCase().includes(query.toLowerCase()))\n        );\n      }\n\n      if (options.category) {\n        result = result.filter(app => app.categories.includes(options.category));\n      }\n\n      if (options.featured) {\n        result = result.filter(app => app.featured === true);\n      }\n\n      return await result.limit(options.limit || 50).toArray();\n    } catch (error) {\n      DEBUG.error('Errore ricerca catalogo:', error);\n      return [];\n    }\n  }\n\n  /**\n   * UTILITY METHODS\n   */\n\n  // Ottieni ID dispositivo univoco\n  async getDeviceId() {\n    let deviceId = await this.getSetting('deviceId');\n    if (!deviceId) {\n      deviceId = 'device_' + Math.random().toString(36).substr(2, 9) + '_' + Date.now();\n      await this.setSetting('deviceId', deviceId);\n    }\n    return deviceId;\n  }\n\n  // Genera un ID univoco per l'app nel formato name.author\n  generateUniqueId(name, author) {\n    const sanitizedName = name ? name.toLowerCase().replace(/[^a-z0-9]/g, '') : 'unknown';\n    const sanitizedAuthor = author ? author.toLowerCase().replace(/[^a-z0-9]/g, '') : 'unknown';\n    return `${sanitizedName}.${sanitizedAuthor}`;\n  }\n\n  // Ottieni MIME type da filename\n  getMimeType(filename) {\n    const ext = filename.split('.').pop().toLowerCase();\n    const mimeTypes = {\n      'html': 'text/html',\n      'css': 'text/css',\n      'js': 'application/javascript',\n      'json': 'application/json',\n      'png': 'image/png',\n      'jpg': 'image/jpeg',\n      'jpeg': 'image/jpeg',\n      'gif': 'image/gif',\n      'svg': 'image/svg+xml',\n      'txt': 'text/plain'\n    };\n    return mimeTypes[ext] || 'application/octet-stream';\n  }\n\n  // Esporta tutti i dati\n  async exportAllData() {\n    try {\n      const [apps, settings, syncEvents] = await Promise.all([\n        this.db.apps.toArray(),\n        this.db.settings.toArray(),\n        this.db.syncEvents.toArray()\n      ]);\n\n      return {\n        version: '1.0.0',\n        timestamp: new Date().toISOString(),\n        deviceId: await this.getDeviceId(),\n        data: { apps, settings, syncEvents }\n      };\n    } catch (error) {\n      DEBUG.error('Errore export dati:', error);\n      throw error;\n    }\n  }\n\n  // Esporta dati nel formato del backup manuale (compatibile con UI)\n  async exportBackupData() {\n    try {\n      const [apps, settingsArray, allAppFiles] = await Promise.all([\n        this.db.apps.toArray(),\n        this.db.settings.toArray(),\n        this.db.appFiles.toArray() // Aggiungi tutti i file delle app\n      ]);\n\n      // Converti array di settings in oggetto\n      const settings = {};\n      settingsArray.forEach(item => {\n        settings[item.key] = item.value;\n      });\n\n      // Organizza i file per appId per una migliore struttura\n      const appFiles = {};\n      allAppFiles.forEach(file => {\n        if (!appFiles[file.appId]) {\n          appFiles[file.appId] = [];\n        }\n        appFiles[file.appId].push({\n          filename: file.filename,\n          content: file.content,\n          size: file.size,\n          mimeType: file.mimeType\n        });\n      });\n\n      // Usa timestamp persistente per evitare che i dati locali sembrino sempre più recenti\n      let persistentTimestamp = await this.getSetting('lastDataModification');\n      if (!persistentTimestamp) {\n        // Prima volta: usa timestamp corrente\n        persistentTimestamp = new Date().toISOString();\n        await this.setSetting('lastDataModification', persistentTimestamp);\n      }\n\n      // Ottieni la lista delle app eliminate\n      const deletedApps = await this.getSetting('deletedApps', []);\n\n      return {\n        settings: settings,\n        apps: apps,\n        appFiles: appFiles, // Aggiungi i file delle app\n        deletedApps: deletedApps, // Aggiungi la lista delle eliminazioni\n        timestamp: persistentTimestamp,\n        version: '1.0.0'\n      };\n    } catch (error) {\n      DEBUG.error('Errore export backup:', error);\n      throw error;\n    }\n  }\n\n  // Importa dati dal formato del backup manuale\n  async importBackupData(backupData) {\n    try {\n      DEBUG.log('📥 Importazione backup dati:', {\n        hasSettings: !!backupData.settings,\n        hasApps: !!backupData.apps,\n        hasAppFiles: !!backupData.appFiles,\n        appsCount: backupData.apps?.length || 0,\n        appFilesCount: backupData.appFiles ? Object.keys(backupData.appFiles).length : 0,\n        version: backupData.version\n      });\n\n      // Validazione formato\n      if (!backupData.settings || !backupData.apps) {\n        throw new Error('Formato backup non valido - settings o apps mancanti');\n      }\n\n      if (!Array.isArray(backupData.apps)) {\n        throw new Error('Formato backup non valido - apps deve essere un array');\n      }\n\n      // Controlla la dimensione del backup per evitare errori di quota\n      const backupSize = JSON.stringify(backupData).length;\n      const maxSize = 50 * 1024 * 1024; // 50MB limite\n      \n      if (backupSize > maxSize) {\n        throw new Error(`Backup troppo grande (${Math.round(backupSize / 1024 / 1024)}MB). Dimensione massima: 50MB`);\n      }\n      \n      DEBUG.log(`📦 Backup valido: ${backupData.apps.length} app, ${Math.round(backupSize / 1024)}KB`);\n\n      // Ottieni la lista delle app eliminate localmente e dal backup\n      const localDeletedApps = await this.getSetting('deletedApps', []);\n      const backupDeletedApps = backupData.deletedApps || [];\n      \n      // Unisci le liste delle eliminazioni (mantieni entrambe)\n      const allDeletedApps = [...new Set([...localDeletedApps, ...backupDeletedApps])];\n      await this.setSetting('deletedApps', allDeletedApps);\n      \n      DEBUG.log('📝 App eliminate localmente:', localDeletedApps);\n      DEBUG.log('📝 App eliminate dal backup:', backupDeletedApps);\n      DEBUG.log('📝 App eliminate totali:', allDeletedApps);\n\n      await this.db.transaction('rw', [this.db.apps, this.db.settings, this.db.appFiles], async () => {\n        // Importa settings\n        if (backupData.settings && typeof backupData.settings === 'object') {\n          const settingsArray = Object.entries(backupData.settings).map(([key, value]) => ({\n            key,\n            value,\n            lastModified: new Date()\n          }));\n          \n          await this.db.settings.clear();\n          await this.db.settings.bulkAdd(settingsArray);\n          DEBUG.log('✅ Settings importate:', Object.keys(backupData.settings).length);\n        }\n\n        // Importa apps (escludendo quelle eliminate localmente)\n        if (backupData.apps && backupData.apps.length > 0) {\n          await this.db.apps.clear();\n          \n          // Mappa gli ID originali con i nuovi ID generati\n          const appIdMapping = {};\n          let appsImported = 0;\n          let appsSkipped = 0;\n          \n          for (const app of backupData.apps) {\n            const originalId = app.id;\n            const uniqueId = app.uniqueId || app.name;\n            \n            // Salta le app che sono state eliminate localmente\n            if (allDeletedApps.includes(uniqueId)) {\n              DEBUG.log(`⏭️ App ${uniqueId} saltata (eliminata localmente)`);\n              appsSkipped++;\n              continue;\n            }\n            \n            // Rimuovi l'ID per permettere al database di generarne uno nuovo\n            const { id, ...appWithoutId } = app;\n            const newId = await this.db.apps.add(appWithoutId);\n            appIdMapping[originalId] = newId;\n            appsImported++;\n          }\n          \n          DEBUG.log(`✅ Apps importate: ${appsImported}, saltate: ${appsSkipped}`);\n\n          // Importa file delle app se presenti (solo per le app importate)\n          if (backupData.appFiles && typeof backupData.appFiles === 'object') {\n            await this.db.appFiles.clear();\n            \n            let totalFilesImported = 0;\n            for (const [originalAppId, files] of Object.entries(backupData.appFiles)) {\n              const newAppId = appIdMapping[originalAppId];\n              if (newAppId && Array.isArray(files)) {\n                const filesToAdd = files.map(file => ({\n                  appId: newAppId,\n                  filename: file.filename,\n                  content: file.content,\n                  size: file.size || file.content.length,\n                  mimeType: file.mimeType || this.getMimeType(file.filename)\n                }));\n                \n                await this.db.appFiles.bulkAdd(filesToAdd);\n                totalFilesImported += filesToAdd.length;\n              }\n            }\n            \n            DEBUG.log('✅ File delle app importati:', totalFilesImported);\n          }\n        }\n      });\n\n      // Registra evento di sync\n      await this.addSyncEvent('backup_imported', {\n        appsCount: backupData.apps?.length || 0,\n        appFilesCount: backupData.appFiles ? Object.keys(backupData.appFiles).length : 0,\n        timestamp: backupData.timestamp,\n        version: backupData.version\n      });\n\n      DEBUG.log('✅ Backup completo importato con successo');\n      return true;\n    } catch (error) {\n      DEBUG.error('❌ Errore import backup:', error);\n      \n      // Gestisci errori specifici\n      if (error.name === 'QuotaExceededError' || error.message.includes('QuotaExceededError')) {\n        throw new Error('Spazio di archiviazione insufficiente. Libera spazio nel browser e riprova.');\n      } else if (error.name === 'AbortError') {\n        throw new Error('Operazione annullata. Riprova.');\n      } else if (error.name === 'ConstraintError') {\n        throw new Error('Errore di vincolo del database. Il backup potrebbe contenere dati duplicati.');\n      }\n      \n      throw error;\n    }\n  }\n\n  // Importa dati (formato legacy per compatibilità)\n  async importData(exportData) {\n    try {\n      if (!exportData.data) {\n        throw new Error('Formato dati non valido');\n      }\n\n      const { apps, settings, syncEvents } = exportData.data;\n\n      await this.db.transaction('rw', [this.db.apps, this.db.settings, this.db.syncEvents], async () => {\n        if (apps) await this.db.apps.bulkPut(apps);\n        if (settings) await this.db.settings.bulkPut(settings);\n        if (syncEvents) await this.db.syncEvents.bulkPut(syncEvents);\n      });\n\n      return true;\n    } catch (error) {\n      DEBUG.error('Errore import dati:', error);\n      throw error;\n    }\n  }\n\n  // Assicura che il database sia aperto\n  async ensureDbOpen() {\n    if (!this.db.isOpen()) {\n      try {\n        await this.db.open();\n        DEBUG.log('📂 Database riaperto con successo');\n      } catch (err) {\n        DEBUG.error('❌ Errore riapertura database:', err);\n      }\n    }\n  }\n\n  // Ottieni statistiche\n  async getStats() {\n    try {\n      await this.ensureDbOpen();\n      // Verifica che il database sia inizializzato\n      if (!this.db || !this.db.isOpen()) {\n        DEBUG.warn('Database non inizializzato');\n        return null;\n      }\n      // Recupera tutte le app per filtrare dati corrotti\n      const allApps = await this.db.apps.toArray().catch(() => []);\n      // Filtra solo app con campi validi\n      const validApps = allApps.filter(app => app && typeof app === 'object');\n      const validCategories = validApps.map(app => app.category).filter(cat => typeof cat === 'string' && cat.length > 0);\n      const favoriteApps = validApps.filter(app => app.favorite === true).length;\n      const totalApps = validApps.length;\n      const totalFiles = await this.db.appFiles.count().catch(() => 0);\n      const settingsCount = await this.db.settings.count().catch(() => 0);\n      const lastInstall = validApps.length > 0 ? validApps.reduce((latest, app) => {\n        if (app.installDate && (!latest || new Date(app.installDate) > new Date(latest))) {\n          return app.installDate;\n        }\n        return latest;\n      }, null) : null;\n      return {\n        totalApps,\n        totalFiles,\n        settingsCount,\n        favoriteApps,\n        categories: Array.from(new Set(validCategories)).length,\n        lastInstall,\n        dbSize: await this.estimateDbSize()\n      };\n    } catch (error) {\n      DEBUG.error('Errore recupero statistiche:', error);\n      return null;\n    }\n  }\n\n  // Stima dimensione database\n  async estimateDbSize() {\n    try {\n      if ('storage' in navigator && 'estimate' in navigator.storage) {\n        const estimate = await navigator.storage.estimate();\n        return estimate.usage || 0;\n      }\n      return 0;\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  // Chiudi connessione database\n  async close() {\n    if (this.db) {\n      this.db.close();\n    }\n  }\n}\n\n// Esporta istanza singleton\nexport default new StorageService();","/**\n * AIdeas - UI Loader Moderno\n * Gestisce il caricamento dell'interfaccia Material UI con animazioni moderne\n */\n\nimport StorageService from './services/StorageService.js';\nimport { showToast } from './utils/helpers.js';\nimport { DEBUG } from './utils/debug.js';\n\n/**\n * Classe per gestire il caricamento dell'interfaccia Material UI\n */\nclass UILoader {\n  constructor() {\n    this.loadingTimeout = null;\n    this.initialized = false;\n  }\n\n  /**\n   * Inizializza il caricamento dell'interfaccia Material UI\n   */\n  async init() {\n    try {\n      DEBUG.log('🎨 Inizializzazione UI Loader...');\n      \n      // Mostra loading screen moderno\n      this.showLoadingScreen();\n      \n      // Assicura che il database sia aperto\n      await StorageService.ensureDbOpen();\n      \n      // Carica Material UI\n      await this.loadMaterialUI();\n      \n      DEBUG.success('✅ UI Loader inizializzato con successo');\n      \n    } catch (error) {\n      DEBUG.error('❌ Errore inizializzazione UI Loader:', error);\n      showToast('Impossibile caricare l\\'interfaccia', 'error');\n      this.showErrorScreen(error);\n    }\n  }\n\n  /**\n   * Mostra loading screen moderno\n   */\n  showLoadingScreen() {\n    // Usa il loading screen esistente dall'HTML\n    const loadingScreen = document.getElementById('loading-screen');\n    if (loadingScreen) {\n      loadingScreen.style.display = 'flex';\n      loadingScreen.style.opacity = '1';\n      \n      // Aggiorna il messaggio per l'inizializzazione\n      const subtitle = loadingScreen.querySelector('.loading-subtitle');\n      if (subtitle) {\n        subtitle.textContent = 'Inizializzazione Material UI...';\n      }\n    }\n  }\n\n  /**\n   * Aggiunge stili moderni per il loading screen\n   */\n  addLoadingStyles() {\n    if (document.getElementById('loading-styles')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'loading-styles';\n    style.textContent = `\n      #loading-screen {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 9999;\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        opacity: 1;\n        transition: opacity 0.5s ease-out;\n      }\n\n      .loading-container {\n        text-align: center;\n        color: white;\n        animation: fadeInUp 0.8s ease-out;\n      }\n\n      .aideas-logo {\n        margin-bottom: 40px;\n        animation: pulse 2s infinite;\n      }\n\n      .logo-icon {\n        font-size: 60px;\n        margin-bottom: 10px;\n        animation: bounce 2s infinite;\n      }\n\n      .logo-text {\n        font-size: 32px;\n        font-weight: bold;\n        letter-spacing: 2px;\n        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n      }\n\n      .loading-spinner {\n        position: relative;\n        margin: 30px auto;\n        width: 80px;\n        height: 80px;\n      }\n\n      .spinner-ring {\n        position: absolute;\n        border: 3px solid transparent;\n        border-top: 3px solid white;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n      }\n\n      .spinner-ring:nth-child(1) {\n        width: 80px;\n        height: 80px;\n        animation-delay: 0s;\n      }\n\n      .spinner-ring:nth-child(2) {\n        width: 60px;\n        height: 60px;\n        top: 10px;\n        left: 10px;\n        animation-delay: -0.3s;\n        border-top-color: rgba(255,255,255,0.7);\n      }\n\n      .spinner-ring:nth-child(3) {\n        width: 40px;\n        height: 40px;\n        top: 20px;\n        left: 20px;\n        animation-delay: -0.6s;\n        border-top-color: rgba(255,255,255,0.4);\n      }\n\n      .loading-text {\n        font-size: 18px;\n        font-weight: 600;\n        margin: 20px 0 10px 0;\n        text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n      }\n\n      .loading-subtitle {\n        font-size: 14px;\n        opacity: 0.8;\n        text-shadow: 1px 1px 2px rgba(0,0,0,0.3);\n      }\n\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n\n      @keyframes pulse {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.05); }\n      }\n\n      @keyframes bounce {\n        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n        40% { transform: translateY(-10px); }\n        60% { transform: translateY(-5px); }\n      }\n\n      @keyframes fadeInUp {\n        from {\n          opacity: 0;\n          transform: translateY(30px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n\n      .loading-fade-out {\n        opacity: 0;\n        transform: translateY(-20px);\n      }\n\n      .error-screen {\n        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n      }\n\n      .error-screen .loading-text {\n        color: #ffffff;\n      }\n\n      .error-screen .loading-subtitle {\n        color: rgba(255,255,255,0.9);\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Carica l'interfaccia Material UI\n   */\n  async loadMaterialUI() {\n    DEBUG.log('🎨 Caricamento Material UI...');\n    \n    // Controlla se è già stato inizializzato\n    if (this.initialized) {\n      DEBUG.log('⚠️ Material UI già inizializzato, skip');\n      return;\n    }\n    \n    // Nascondi il loading screen HTML IMMEDIATAMENTE\n    // Questo evita conflitti visivi tra il loading screen HTML e il componente React\n    this.hideLoadingScreen();\n    \n    // Mostra il container dell'app\n    const appContainer = document.getElementById('app');\n    if (appContainer) {\n      appContainer.style.display = '';\n      DEBUG.log('🎯 Container app reso visibile');\n    }\n    \n    // Timeout per evitare blocchi\n    this.loadingTimeout = setTimeout(() => {\n      throw new Error('Timeout caricamento Material UI (10s)');\n    }, 10000);\n\n    try {\n      // Importa il modulo Material UI\n      const { initializeAIdeasWithMaterialUI } = await import('./main-material.jsx');\n      \n      DEBUG.log('🔧 Funzione di inizializzazione ottenuta:', typeof initializeAIdeasWithMaterialUI);\n      \n      // Inizializza l'app\n      DEBUG.log('🚀 Avvio inizializzazione Material UI...');\n      await initializeAIdeasWithMaterialUI();\n      \n      // Marca come inizializzato\n      this.initialized = true;\n      \n      // Cancella timeout\n      clearTimeout(this.loadingTimeout);\n      \n      DEBUG.success('✅ Material UI caricata con successo');\n      \n    } catch (error) {\n      clearTimeout(this.loadingTimeout);\n      DEBUG.error('❌ Errore durante caricamento Material UI:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Aggiorna il testo del loading screen\n   */\n  updateLoadingText(mainText, subText) {\n    const loadingText = document.querySelector('.loading-text');\n    const loadingSubtitle = document.querySelector('.loading-subtitle');\n    \n    if (loadingText) loadingText.textContent = mainText;\n    if (loadingSubtitle) loadingSubtitle.textContent = subText;\n  }\n\n  /**\n   * Mostra schermata di errore\n   */\n  showErrorScreen(error) {\n    const loadingScreen = document.getElementById('loading-screen');\n    if (loadingScreen) {\n      loadingScreen.classList.add('error-screen');\n      this.updateLoadingText('Errore caricamento interfaccia', error.message || 'Errore sconosciuto');\n      \n      // Rimuovi spinner e mostra icona errore\n      const spinner = loadingScreen.querySelector('.loading-spinner');\n      if (spinner) {\n        spinner.innerHTML = '<div style=\"font-size: 60px; color: white;\">❌</div>';\n      }\n    }\n  }\n\n  /**\n   * Nasconde il loading screen con animazione\n   */\n  hideLoadingScreen() {\n    try {\n      const loadingScreen = document.getElementById('loading-screen');\n      if (loadingScreen) {\n        // Nascondi immediatamente senza animazione per evitare conflitti\n        loadingScreen.style.display = 'none';\n        DEBUG.log('🎯 Loading screen nascosto immediatamente');\n      }\n    } catch (error) {\n      DEBUG.error('❌ Errore nascondere loading screen:', error);\n    }\n  }\n\n  /**\n   * Cleanup risorse\n   */\n  cleanup() {\n    if (this.loadingTimeout) {\n      clearTimeout(this.loadingTimeout);\n    }\n    \n    // Rimuovi stili se necessario\n    const loadingStyles = document.getElementById('loading-styles');\n    if (loadingStyles) {\n      loadingStyles.remove();\n    }\n  }\n}\n\n// Esporta per uso esterno\nwindow.UILoader = UILoader;\n\n// Auto-inizializzazione\nconst uiLoader = new UILoader();\n\n// Inizializza quando il DOM è pronto\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => uiLoader.init());\n} else {\n  uiLoader.init();\n}\n\nexport default UILoader; "],"file":"js/main-BQEGtkGg.js"}