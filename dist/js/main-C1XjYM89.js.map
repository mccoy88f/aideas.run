{"version":3,"file":"main-C1XjYM89.js","sources":["../../src/components/AppLauncher.js","../../node_modules/domelementtype/lib/esm/index.js","../../node_modules/domhandler/lib/esm/node.js","../../node_modules/entities/lib/esm/escape.js","../../node_modules/dom-serializer/lib/esm/foreignNames.js","../../node_modules/dom-serializer/lib/esm/index.js","../../node_modules/domutils/lib/esm/stringify.js","../../node_modules/domutils/lib/esm/traversal.js","../../node_modules/domutils/lib/esm/manipulation.js","../../node_modules/domutils/lib/esm/querying.js","../../node_modules/domutils/lib/esm/legacy.js","../../node_modules/domutils/lib/esm/helpers.js","../../node_modules/domutils/lib/esm/feeds.js","../../node_modules/cheerio/dist/browser/static.js","../../node_modules/cheerio/dist/browser/utils.js","../../node_modules/cheerio/dist/browser/api/attributes.js","../../node_modules/css-what/lib/es/types.js","../../node_modules/css-what/lib/es/parse.js","../../node_modules/boolbase/index.js","../../node_modules/css-select/lib/esm/sort.js","../../node_modules/css-select/lib/esm/attributes.js","../../node_modules/nth-check/lib/esm/parse.js","../../node_modules/nth-check/lib/esm/compile.js","../../node_modules/nth-check/lib/esm/index.js","../../node_modules/css-select/lib/esm/pseudo-selectors/filters.js","../../node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js","../../node_modules/css-select/lib/esm/pseudo-selectors/aliases.js","../../node_modules/css-select/lib/esm/pseudo-selectors/subselects.js","../../node_modules/css-select/lib/esm/pseudo-selectors/index.js","../../node_modules/css-select/lib/esm/general.js","../../node_modules/css-select/lib/esm/compile.js","../../node_modules/css-select/lib/esm/index.js","../../node_modules/cheerio-select/lib/esm/positionals.js","../../node_modules/cheerio-select/lib/esm/helpers.js","../../node_modules/cheerio-select/lib/esm/index.js","../../node_modules/cheerio/dist/browser/api/traversing.js","../../node_modules/cheerio/dist/browser/parse.js","../../node_modules/cheerio/dist/browser/api/manipulation.js","../../node_modules/cheerio/dist/browser/api/css.js","../../node_modules/cheerio/dist/browser/api/forms.js","../../node_modules/cheerio/dist/browser/api/extract.js","../../node_modules/cheerio/dist/browser/cheerio.js","../../node_modules/parse5/dist/common/unicode.js","../../node_modules/parse5/dist/common/error-codes.js","../../node_modules/parse5/dist/common/token.js","../../node_modules/parse5/dist/common/html.js","../../node_modules/parse5/dist/tokenizer/index.js","../../node_modules/parse5/dist/parser/open-element-stack.js","../../node_modules/parse5/dist/parser/formatting-element-list.js","../../node_modules/parse5/dist/common/foreign-content.js","../../node_modules/parse5/dist/parser/index.js","../../node_modules/parse5/dist/serializer/index.js","../../src/services/ProxyService.js","../../src/components/AppImporter.js","../../src/components/AppCard.js","../../src/components/SettingPanel.js","../../src/main.js"],"sourcesContent":["/**\n * AIdeas - App Launcher Component\n * Gestisce l'apertura e l'esecuzione delle applicazioni\n */\n\nimport StorageService from '../services/StorageService.js';\nimport { \n  showToast, \n  hideToast, \n  showConfirmPopup,\n  showDeleteAppConfirm,\n  showImportAppConfirm,\n  showResetSettingsConfirm,\n  showModal,\n  hideModal,\n  escapeHtml,\n  generateId\n} from '../utils/helpers.js';\n\n/**\n * Classe per gestire il lancio delle applicazioni\n */\nexport default class AppLauncher {\n  constructor() {\n    this.activeApps = new Map(); // Mappa delle app attualmente in esecuzione\n    this.launchHistory = [];\n    this.maxConcurrentApps = 5;\n    \n    // Bind methods\n    this.launch = this.launch.bind(this);\n    this.launchZipApp = this.launchZipApp.bind(this);\n    this.launchUrlApp = this.launchUrlApp.bind(this);\n    this.launchGitHubApp = this.launchGitHubApp.bind(this);\n    this.launchPWA = this.launchPWA.bind(this);\n    this.createSecureFrame = this.createSecureFrame.bind(this);\n    this.closeApp = this.closeApp.bind(this);\n    this.setupEventListeners = this.setupEventListeners.bind(this);\n  }\n\n  /**\n   * Inizializza il launcher\n   */\n  async init() {\n    this.setupEventListeners();\n    await this.loadLaunchHistory();\n  }\n\n  /**\n   * Lancia un'applicazione\n   * @param {Object} app - Dati dell'applicazione\n   * @param {Object} options - Opzioni di lancio\n   */\n  async launch(app, options = {}) {\n    try {\n      console.log(`🚀 Launching app: ${app.name} (${app.type})`);\n\n      // Carica preferenze di lancio\n      const launchMode = await StorageService.getSetting('defaultLaunchMode', 'newpage'); // Cambiato default da 'iframe' a 'newpage'\n      const appSpecificMode = app.metadata?.launchMode; // Override per app specifica\n      \n      // Determina modalità finale\n      const finalLaunchMode = options.forceMode || appSpecificMode || launchMode;\n      options.launchMode = finalLaunchMode;\n\n      // Verifica limiti concorrenti (solo per iframe)\n      if (finalLaunchMode === 'iframe' && this.activeApps.size >= this.maxConcurrentApps && !options.force) {\n        const confirmed = await this.showConcurrentAppsDialog();\n        if (!confirmed) return;\n      }\n\n      // Validazione app\n      const validation = await this.validateApp(app);\n      if (!validation.valid) {\n        throw new Error(validation.error);\n      }\n\n      // Preparazione lancio\n      const launchId = generateId('launch');\n      const startTime = Date.now();\n\n      // Mostra loading\n      showToast(`Caricamento ${app.name}...`, 'info', 0);\n\n      let iframe;\n\n      // Lancia l'app in base al tipo\n      switch (app.type) {\n        case 'zip':\n          iframe = await this.launchZipApp(app, options);\n          break;\n        case 'html':\n          iframe = await this.launchHtmlApp(app, options);\n          break;\n        case 'github':\n          iframe = await this.launchGitHubApp(app, options);\n          break;\n        case 'pwa':\n          iframe = await this.launchPWA(app, options);\n          break;\n        default:\n          iframe = await this.launchUrlApp(app, options);\n      }\n\n      // Aggiorna stato\n      this.activeApps.set(launchId, {\n        app,\n        iframe,\n        startTime: Date.now(),\n        launchMode: finalLaunchMode\n      });\n\n      // Aggiungi alla cronologia\n      this.addToHistory(app, launchId);\n\n      // Nascondi loading\n      hideToast();\n\n      return iframe;\n\n    } catch (error) {\n      console.error('Errore lancio app:', error);\n      hideToast();\n      showToast(`Errore nel lancio di ${app.name}: ${error.message}`, 'error');\n      throw error;\n    }\n  }\n\n  /**\n   * Lancia un'app ZIP\n   * @param {Object} app - Dati dell'app\n   * @param {Object} options - Opzioni di lancio\n   */\n  async launchZipApp(app, options = {}) {\n    try {\n      // Carica i file dell'app dal database\n      const appFiles = await StorageService.getAppFiles(app.id);\n      if (!appFiles.length) {\n        throw new Error('File dell\\'app non trovati');\n      }\n\n      // Trova il file entry point\n      const entryPoint = this.findEntryPoint(appFiles, app.manifest?.entryPoint);\n      if (!entryPoint) {\n        throw new Error('Entry point non trovato');\n      }\n\n      // Crea blob URLs per tutti i file\n      const fileMap = new Map();\n      const blobUrls = new Map();\n\n      for (const file of appFiles) {\n        const blob = new Blob([file.content], { type: file.mimeType });\n        const blobUrl = URL.createObjectURL(blob);\n        fileMap.set(file.filename, file);\n        blobUrls.set(file.filename, blobUrl);\n      }\n\n      // Modifica l'HTML entry point per aggiustare TUTTI i percorsi\n      let htmlContent = entryPoint.content;\n      \n      // Sostituisci TUTTI i percorsi relativi con blob URLs (più aggressivo)\n      htmlContent = this.replaceAllLocalPaths(htmlContent, blobUrls, app);\n\n      // Crea il blob per l'entry point modificato\n      const htmlBlob = new Blob([htmlContent], { type: 'text/html' });\n      const htmlBlobUrl = URL.createObjectURL(htmlBlob);\n\n      // Determina modalità di lancio\n      if (options.launchMode === 'newpage') {\n        // Apri in nuova pagina\n        const newWindow = window.open('', `aideas_zip_${app.id}_${Date.now()}`, \n          'width=1200,height=800,scrollbars=yes,resizable=yes');\n        \n        if (!newWindow) {\n          throw new Error('Popup bloccato dal browser. Consenti i popup per AIdeas.');\n        }\n\n        // Scrivi il contenuto direttamente nella nuova finestra\n        newWindow.document.write(htmlContent);\n        newWindow.document.close();\n\n        // Inietta API AIdeas\n        this.injectAIdeasAPI({ contentWindow: newWindow }, app);\n\n        // Setup cleanup\n        const cleanup = () => {\n          for (const url of blobUrls.values()) {\n            URL.revokeObjectURL(url);\n          }\n          URL.revokeObjectURL(htmlBlobUrl);\n        };\n\n        newWindow.addEventListener('beforeunload', cleanup);\n\n        return {\n          window: newWindow,\n          external: true,\n          cleanup\n        };\n      } else {\n        // Modalità iframe (default)\n        const iframe = this.createSecureFrame(app, {\n          src: htmlBlobUrl,\n          sandbox: 'allow-scripts allow-forms allow-modals allow-popups-to-escape-sandbox allow-same-origin',\n          files: fileMap,\n          blobUrls\n        });\n\n        // Setup cleanup quando l'iframe viene chiuso\n        iframe.addEventListener('unload', () => {\n          for (const url of blobUrls.values()) {\n            URL.revokeObjectURL(url);\n          }\n          URL.revokeObjectURL(htmlBlobUrl);\n        });\n\n        return {\n          iframe,\n          window: iframe.contentWindow,\n          cleanup: () => {\n            for (const url of blobUrls.values()) {\n              URL.revokeObjectURL(url);\n            }\n            URL.revokeObjectURL(htmlBlobUrl);\n          }\n        };\n      }\n\n    } catch (error) {\n      console.error('Errore lancio app ZIP:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Lancia un'app HTML\n   * @param {Object} app - Dati dell'app\n   * @param {Object} options - Opzioni di lancio\n   */\n  async launchHtmlApp(app, options = {}) {\n    try {\n      // Validazione contenuto HTML\n      if (!app.content) {\n        throw new Error('Contenuto HTML mancante');\n      }\n\n      // Inietta CSP personalizzata basata sull'analisi del contenuto\n      let modifiedContent = await this.injectCSPForHTMLApp(app.content, app.id);\n\n      // Crea blob URL per il contenuto HTML modificato\n      const htmlBlob = new Blob([modifiedContent], { type: 'text/html' });\n      const htmlBlobUrl = URL.createObjectURL(htmlBlob);\n\n      // Determina modalità di lancio\n      if (options.launchMode === 'newpage') {\n        // Modalità nuova finestra - usa document.write per massima compatibilità\n        const newWindow = window.open('', `aideas_html_${app.id}_${Date.now()}`,\n          'width=1200,height=800,scrollbars=yes,resizable=yes');\n        if (!newWindow) {\n          throw new Error('Popup bloccato dal browser. Consenti i popup per AIdeas.');\n        }\n        \n        // Scrivi direttamente il contenuto HTML\n        newWindow.document.open();\n        newWindow.document.write(modifiedContent);\n        newWindow.document.close();\n        \n        return {\n          window: newWindow,\n          external: true,\n          cleanup: () => {\n            URL.revokeObjectURL(htmlBlobUrl);\n          }\n        };\n      } else {\n        // Modalità iframe (default) - usa blob URL con CSP corretta\n        const iframe = this.createSecureFrame(app, {\n          src: htmlBlobUrl,\n          sandbox: 'allow-scripts allow-forms allow-modals allow-popups-to-escape-sandbox allow-same-origin'\n        });\n\n        // Setup cleanup quando l'iframe viene chiuso\n        iframe.addEventListener('unload', () => {\n          URL.revokeObjectURL(htmlBlobUrl);\n        });\n\n        return {\n          iframe,\n          window: iframe.contentWindow,\n          cleanup: () => {\n            URL.revokeObjectURL(htmlBlobUrl);\n          }\n        };\n      }\n\n    } catch (error) {\n      console.error('Errore lancio app HTML:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Analizza l'HTML per trovare CDN e risorse esterne\n   * @param {string} htmlContent - Contenuto HTML da analizzare\n   * @returns {Object} - Oggetto con domini trovati per categoria\n   */\n  analyzeHTMLForExternalResources(htmlContent) {\n    const domains = {\n      scripts: new Set(),\n      styles: new Set(),\n      fonts: new Set(),\n      images: new Set(),\n      frames: new Set(),\n      connections: new Set()\n    };\n\n    // Regex per trovare URL esterni\n    const patterns = {\n      scripts: /<script[^>]*src=[\"']([^\"']+)[\"'][^>]*>/gi,\n      styles: /<link[^>]*href=[\"']([^\"']+)[\"'][^>]*>/gi,\n      fonts: /<link[^>]*href=[\"']([^\"']+)[\"'][^>]*rel=[\"'](?:preload|stylesheet)[\"'][^>]*>/gi,\n      images: /<img[^>]*src=[\"']([^\"']+)[\"'][^>]*>/gi,\n      frames: /<iframe[^>]*src=[\"']([^\"']+)[\"'][^>]*>/gi,\n      connections: /fetch\\([\"']([^\"']+)[\"']\\)|XMLHttpRequest\\([\"']([^\"']+)[\"']\\)/gi\n    };\n\n    // Estrai domini da URL\n    const extractDomain = (url) => {\n      try {\n        if (url.startsWith('//')) {\n          url = 'https:' + url;\n        } else if (url.startsWith('/')) {\n          return null; // URL relativo\n        } else if (!url.startsWith('http')) {\n          return null; // URL relativo o data URL\n        }\n        return new URL(url).hostname;\n      } catch (e) {\n        return null;\n      }\n    };\n\n    // Analizza script tags\n    let match;\n    while ((match = patterns.scripts.exec(htmlContent)) !== null) {\n      const domain = extractDomain(match[1]);\n      if (domain) domains.scripts.add(domain);\n    }\n\n    // Analizza link tags (CSS e font)\n    while ((match = patterns.styles.exec(htmlContent)) !== null) {\n      const domain = extractDomain(match[1]);\n      if (domain) {\n        // Determina se è CSS o font basandosi su rel o type\n        const linkTag = match[0];\n        if (linkTag.includes('rel=\"stylesheet\"') || linkTag.includes('type=\"text/css\"')) {\n          domains.styles.add(domain);\n        } else if (linkTag.includes('rel=\"preload\"') && linkTag.includes('as=\"font\"')) {\n          domains.fonts.add(domain);\n        }\n      }\n    }\n\n    // Analizza img tags\n    while ((match = patterns.images.exec(htmlContent)) !== null) {\n      const domain = extractDomain(match[1]);\n      if (domain) domains.images.add(domain);\n    }\n\n    // Analizza iframe tags\n    while ((match = patterns.frames.exec(htmlContent)) !== null) {\n      const domain = extractDomain(match[1]);\n      if (domain) domains.frames.add(domain);\n    }\n\n    // Analizza fetch/XMLHttpRequest calls\n    while ((match = patterns.connections.exec(htmlContent)) !== null) {\n      const url = match[1] || match[2];\n      const domain = extractDomain(url);\n      if (domain) domains.connections.add(domain);\n    }\n\n    // Converti Set in array\n    return {\n      scripts: Array.from(domains.scripts),\n      styles: Array.from(domains.styles),\n      fonts: Array.from(domains.fonts),\n      images: Array.from(domains.images),\n      frames: Array.from(domains.frames),\n      connections: Array.from(domains.connections)\n    };\n  }\n\n  /**\n   * Genera CSP personalizzata basata sui domini trovati\n   * @param {Object} domains - Domini trovati dall'analisi\n   * @returns {string} - CSP personalizzata\n   */\n  generateCustomCSP(domains) {\n    const allDomains = new Set();\n    \n    // Raccogli tutti i domini\n    Object.values(domains).forEach(domainList => {\n      domainList.forEach(domain => allDomains.add(domain));\n    });\n\n    const domainList = Array.from(allDomains);\n    \n    // CSP base con domini trovati\n    let csp = \"default-src 'self' data: blob: 'unsafe-inline' 'unsafe-eval'; \";\n    csp += \"script-src 'self' data: blob: 'unsafe-inline' 'unsafe-eval' \" + domainList.join(' ') + \"; \";\n    csp += \"style-src 'self' data: blob: 'unsafe-inline' \" + domainList.join(' ') + \"; \";\n    csp += \"img-src 'self' data: blob: \" + domainList.join(' ') + \"; \";\n    csp += \"font-src 'self' data: blob: \" + domainList.join(' ') + \"; \";\n    csp += \"connect-src 'self' data: blob: \" + domainList.join(' ') + \"; \";\n    csp += \"frame-src 'self' data: blob: \" + domainList.join(' ') + \"; \";\n    csp += \"object-src 'self' data: blob:; \";\n    csp += \"base-uri 'self'; \";\n    csp += \"form-action 'self';\";\n\n    return csp;\n  }\n\n  /**\n   * Inietta CSP personalizzata per app HTML basata sull'analisi del contenuto\n   * @param {string} htmlContent - Contenuto HTML originale\n   * @param {string} appId - ID dell'app per caching\n   * @returns {string} - Contenuto HTML con CSP modificata\n   */\n  async injectCSPForHTMLApp(htmlContent, appId = null) {\n    try {\n      let customCSP = null;\n      let domains = null;\n\n      // Se abbiamo un ID app, controlla se abbiamo già una CSP cached\n      if (appId) {\n        const cachedCSP = await StorageService.getAppMetadata(appId, 'customCSP');\n        const cachedDomains = await StorageService.getAppMetadata(appId, 'externalDomains');\n        const lastAnalyzed = await StorageService.getAppMetadata(appId, 'lastAnalyzed');\n        \n        // Usa CSP cached se è recente (meno di 24 ore)\n        if (cachedCSP && cachedDomains && lastAnalyzed) {\n          const hoursSinceAnalysis = (Date.now() - lastAnalyzed) / (1000 * 60 * 60);\n          if (hoursSinceAnalysis < 24) {\n            console.log(`♻️ Usando CSP cached per app ${appId} (analizzata ${hoursSinceAnalysis.toFixed(1)} ore fa)`);\n            customCSP = cachedCSP;\n            domains = cachedDomains;\n          }\n        }\n      }\n\n      // Se non abbiamo CSP cached, analizza l'HTML\n      if (!customCSP) {\n        console.log(`🔍 Analisi HTML per app ${appId || 'senza ID'}...`);\n        domains = this.analyzeHTMLForExternalResources(htmlContent);\n        customCSP = this.generateCustomCSP(domains);\n        \n        // Cache la CSP per questa app se abbiamo un ID\n        if (appId) {\n          await StorageService.setAppMetadata(appId, { \n            customCSP: customCSP,\n            externalDomains: domains,\n            lastAnalyzed: Date.now()\n          });\n          console.log(`💾 CSP cached per app ${appId}`);\n        }\n      }\n      \n      console.log('🔍 Domini trovati nell\\'HTML:', domains);\n      \n      let modifiedContent;\n      \n      // Sostituisci o aggiungi meta CSP\n      if (htmlContent.includes('<meta http-equiv=\"Content-Security-Policy\"')) {\n        modifiedContent = htmlContent.replace(\n          /<meta http-equiv=\"Content-Security-Policy\"[^>]*>/g,\n          `<meta http-equiv=\"Content-Security-Policy\" content=\"${customCSP}\">`\n        );\n      } else {\n        modifiedContent = htmlContent.replace(\n          /<head>/i,\n          `<head>\\n  <meta http-equiv=\"Content-Security-Policy\" content=\"${customCSP}\">`\n        );\n      }\n      \n      return modifiedContent;\n      \n    } catch (error) {\n      console.warn('Errore nell\\'analisi CSP, uso CSP di fallback:', error);\n      \n      // Fallback a CSP completamente permissiva\n      const fallbackCSP = \"default-src * data: blob: 'unsafe-inline' 'unsafe-eval'; script-src * data: blob: 'unsafe-inline' 'unsafe-eval'; style-src * data: blob: 'unsafe-inline'; img-src * data: blob:; font-src * data: blob:; connect-src * data: blob:; frame-src * data: blob:; object-src * data: blob:; base-uri *; form-action *;\";\n      \n      let modifiedContent;\n      \n      if (htmlContent.includes('<meta http-equiv=\"Content-Security-Policy\"')) {\n        modifiedContent = htmlContent.replace(\n          /<meta http-equiv=\"Content-Security-Policy\"[^>]*>/g,\n          `<meta http-equiv=\"Content-Security-Policy\" content=\"${fallbackCSP}\">`\n        );\n      } else {\n        modifiedContent = htmlContent.replace(\n          /<head>/i,\n          `<head>\\n  <meta http-equiv=\"Content-Security-Policy\" content=\"${fallbackCSP}\">`\n        );\n      }\n      \n      return modifiedContent;\n    }\n  }\n\n  /**\n   * Lancia un'app URL\n   * @param {Object} app - Dati dell'app\n   * @param {Object} options - Opzioni di lancio\n   */\n  async launchUrlApp(app, options = {}) {\n    try {\n      // Validazione URL\n      if (!app.url) {\n        throw new Error('URL dell\\'app non specificato');\n      }\n\n      let targetUrl = app.url;\n\n      // Se forza nuova finestra o è impostato nelle preferenze\n      if (options.launchMode === 'newpage' || options.forceNewWindow) {\n        console.log('🪟 Apertura in nuova finestra (modalità esplicita)');\n        // Apri in nuova finestra/tab\n        const newWindow = window.open(targetUrl, `aideas_app_${app.id}`, \n          'width=1200,height=800,scrollbars=yes,resizable=yes');\n        \n        if (!newWindow) {\n          throw new Error('Popup bloccato dal browser. Consenti i popup per AIdeas.');\n        }\n\n        return {\n          window: newWindow,\n          external: true\n        };\n      } else {\n        // Modalità iframe - controlla compatibilità\n        console.log('🔍 Tentativo apertura in iframe...');\n        const canUseIframe = await this.checkIframeCompatibility(targetUrl);\n\n        if (!canUseIframe) {\n          // Fallback automatico a nuova finestra se iframe non supportato\n          console.log('🔄 Fallback automatico a nuova finestra - iframe non supportato');\n          showToast('Questo sito non supporta iframe, apertura in nuova finestra', 'info');\n          \n          const newWindow = window.open(targetUrl, `aideas_app_${app.id}_fallback`, \n            'width=1200,height=800,scrollbars=yes,resizable=yes');\n          \n          if (!newWindow) {\n            throw new Error('Popup bloccato dal browser. Consenti i popup per AIdeas.');\n          }\n\n          return {\n            window: newWindow,\n            external: true,\n            fallback: true\n          };\n        } else {\n          // Carica in iframe\n          console.log('✅ Caricamento in iframe...');\n          const iframe = this.createSecureFrame(app, {\n            src: targetUrl,\n            sandbox: 'allow-scripts allow-forms allow-modals allow-popups allow-popups-to-escape-sandbox allow-same-origin'\n          });\n\n          // Aggiungi listener per errori di caricamento iframe\n          iframe.addEventListener('error', () => {\n            console.log('❌ Errore caricamento iframe, fallback a nuova finestra');\n            showToast('Errore caricamento iframe, apertura in nuova finestra', 'info');\n            \n            // Chiudi modal iframe\n            const modal = iframe.closest('.modal');\n            if (modal) {\n              hideModal(modal.id);\n            }\n            \n            // Apri in nuova finestra\n            const newWindow = window.open(targetUrl, `aideas_app_${app.id}_fallback`, \n              'width=1200,height=800,scrollbars=yes,resizable=yes');\n            \n            if (newWindow) {\n              showToast('App aperta in nuova finestra', 'success');\n            }\n          });\n\n          return {\n            iframe,\n            window: iframe.contentWindow\n          };\n        }\n      }\n\n    } catch (error) {\n      console.error('Errore lancio app URL:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Lancia un'app GitHub\n   * @param {Object} app - Dati dell'app\n   * @param {Object} options - Opzioni di lancio\n   */\n  async launchGitHubApp(app, options = {}) {\n    try {\n      if (!app.githubUrl) {\n        throw new Error('URL GitHub non specificato');\n      }\n\n      // Estrai info repository\n      const repoInfo = this.parseGitHubUrl(app.githubUrl);\n      if (!repoInfo) {\n        throw new Error('URL GitHub non valido');\n      }\n\n      // Costruisci URL per GitHub Pages o raw content\n      let targetUrl;\n      \n      if (app.metadata?.usePagesUrl) {\n        // Usa GitHub Pages\n        targetUrl = `https://${repoInfo.owner}.github.io/${repoInfo.repo}/`;\n      } else {\n        // Usa raw content per index.html\n        targetUrl = `https://raw.githubusercontent.com/${repoInfo.owner}/${repoInfo.repo}/${repoInfo.branch || 'main'}/index.html`;\n      }\n\n      // Prova a caricare come URL app\n      const urlApp = { ...app, url: targetUrl, type: 'url' };\n      return await this.launchUrlApp(urlApp, options);\n\n    } catch (error) {\n      console.error('Errore lancio app GitHub:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Lancia una PWA\n   * @param {Object} app - Dati dell'app\n   * @param {Object} options - Opzioni di lancio\n   */\n  async launchPWA(app, options = {}) {\n    try {\n      if (!app.url) {\n        throw new Error('URL della PWA non specificato');\n      }\n\n      // Per le PWA, preferisci sempre nuova finestra per esperienza nativa\n      const newWindow = window.open(app.url, `aideas_pwa_${app.id}`,\n        'width=1200,height=800,scrollbars=yes,resizable=yes,toolbar=no,location=no,status=no,menubar=no');\n      \n      if (!newWindow) {\n        throw new Error('Popup bloccato dal browser. Consenti i popup per AIdeas.');\n      }\n\n      // Prova a richiedere installazione PWA se supportato\n      if ('serviceWorker' in navigator && app.manifest) {\n        setTimeout(() => {\n          this.promptPWAInstall(app, newWindow);\n        }, 2000);\n      }\n\n      return {\n        window: newWindow,\n        external: true,\n        isPWA: true\n      };\n\n    } catch (error) {\n      console.error('Errore lancio PWA:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Crea un iframe sicuro per l'app\n   * @param {Object} app - Dati dell'app\n   * @param {Object} iframeOptions - Opzioni iframe\n   */\n  createSecureFrame(app, iframeOptions = {}) {\n    // Crea modal container per l'app\n    const modalId = `app-modal-${app.id}-${Date.now()}`;\n    \n    const modalContent = `\n      <div class=\"modal-header\">\n        <div class=\"app-modal-title\">\n          <div class=\"app-modal-icon\">\n            ${app.icon ? `<img src=\"${app.icon}\" alt=\"${app.name}\">` : '📱'}\n          </div>\n          <div>\n            <h2>${escapeHtml(app.name)}</h2>\n            <p class=\"app-modal-subtitle\">${escapeHtml(app.description || '')}</p>\n          </div>\n        </div>\n        <div class=\"app-modal-controls\">\n          <select class=\"app-launch-mode\" id=\"app-launch-mode-${app.id}\" title=\"Modalità di apertura\">\n            <option value=\"default\">Modalità predefinita</option>\n            <option value=\"iframe\">Apri in finestra modale</option>\n            <option value=\"newpage\">Apri in nuova pagina</option>\n          </select>\n          <button class=\"btn btn-secondary btn-sm\" id=\"app-refresh-${app.id}\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z\"/>\n            </svg>\n            Ricarica\n          </button>\n          <button class=\"btn btn-secondary btn-sm\" id=\"app-fullscreen-${app.id}\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M7,14H5V19H10V17H7V14M12,14H10V17H7V19H12V14M17,14V17H14V19H19V14H17M19,10H17V5H14V7H17V10H19M10,7V5H5V10H7V7H10M12,10V7H10V5H15V10H12Z\"/>\n            </svg>\n            Schermo intero\n          </button>\n          <button class=\"modal-close\">&times;</button>\n        </div>\n      </div>\n      <div class=\"modal-body app-modal-body\">\n        <div class=\"app-frame-container\">\n          <div class=\"app-loading\">\n            <div class=\"spinner\"></div>\n            <p>Caricamento ${escapeHtml(app.name)}...</p>\n          </div>\n        </div>\n      </div>\n    `;\n\n    // Mostra modal\n    const modal = showModal(modalId, modalContent, {\n      size: 'modal-xl',\n      disableBackdropClose: false,\n      disableEscapeClose: false\n    });\n\n    // Crea iframe\n    const iframe = document.createElement('iframe');\n    iframe.className = 'app-frame';\n    iframe.src = iframeOptions.src;\n    iframe.sandbox = iframeOptions.sandbox || 'allow-scripts allow-forms allow-modals';\n    iframe.style.cssText = `\n      width: 100%;\n      height: 70vh;\n      border: none;\n      border-radius: 8px;\n      background: white;\n    `;\n\n    // Event listeners per iframe\n    iframe.addEventListener('load', () => {\n      const loadingEl = modal.querySelector('.app-loading');\n      if (loadingEl) {\n        loadingEl.style.display = 'none';\n      }\n      iframe.style.display = 'block';\n      \n      // Inietta API AIdeas nell'iframe\n      this.injectAIdeasAPI(iframe, app);\n    });\n\n    iframe.addEventListener('error', () => {\n      const container = modal.querySelector('.app-frame-container');\n      container.innerHTML = `\n        <div class=\"app-error\">\n          <div class=\"app-error-icon\">⚠️</div>\n          <h3>Errore di caricamento</h3>\n          <p>Impossibile caricare l'applicazione.</p>\n          <button class=\"btn btn-primary\" onclick=\"location.reload()\">Riprova</button>\n        </div>\n      `;\n    });\n\n    // Aggiungi iframe al modal\n    const frameContainer = modal.querySelector('.app-frame-container');\n    frameContainer.appendChild(iframe);\n\n    // Setup controlli modal\n    this.setupAppModalControls(modal, iframe, app);\n\n    return iframe;\n  }\n\n  /**\n   * Setup controlli del modal dell'app\n   * @param {Element} modal - Modal element\n   * @param {Element} iframe - Iframe element\n   * @param {Object} app - Dati dell'app\n   */\n  setupAppModalControls(modal, iframe, app) {\n    // Launch mode selector\n    const launchModeSelect = modal.querySelector(`#app-launch-mode-${app.id}`);\n    launchModeSelect?.addEventListener('change', async () => {\n      const newMode = launchModeSelect.value;\n      if (newMode !== 'default') {\n        const confirmed = await showConfirmPopup({\n          title: 'Cambia Modalità',\n          message: `Vuoi riaprire l'app in modalità \"${newMode === 'iframe' ? 'finestra modale' : 'nuova pagina'}\"?`,\n          icon: 'question',\n          confirmText: 'Riapri',\n          cancelText: 'Annulla',\n          type: 'default'\n        });\n        if (confirmed) {\n          // Chiudi modal corrente\n          hideModal(modal.id);\n          // Rilancia con nuova modalità\n          await this.launch(app, { forceMode: newMode });\n        } else {\n          // Reset selezione\n          launchModeSelect.value = 'default';\n        }\n      }\n    });\n\n    // Refresh button\n    const refreshBtn = modal.querySelector(`#app-refresh-${app.id}`);\n    refreshBtn?.addEventListener('click', () => {\n      iframe.src = iframe.src; // Ricarica iframe\n      showToast('App ricaricata', 'info');\n    });\n\n    // Fullscreen button\n    const fullscreenBtn = modal.querySelector(`#app-fullscreen-${app.id}`);\n    fullscreenBtn?.addEventListener('click', () => {\n      if (modal.requestFullscreen) {\n        modal.requestFullscreen();\n      } else if (modal.webkitRequestFullscreen) {\n        modal.webkitRequestFullscreen();\n      } else if (modal.msRequestFullscreen) {\n        modal.msRequestFullscreen();\n      }\n    });\n\n    // Cleanup quando modal si chiude\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === 'childList') {\n          mutation.removedNodes.forEach((node) => {\n            if (node === modal) {\n              this.cleanupApp(app.id);\n              observer.disconnect();\n            }\n          });\n        }\n      });\n    });\n\n    observer.observe(document.body, { childList: true });\n  }\n\n  /**\n   * Inietta l'API AIdeas nell'iframe\n   * @param {Element} iframe - Iframe element\n   * @param {Object} app - Dati dell'app\n   */\n  injectAIdeasAPI(iframe, app) {\n    try {\n      const iframeWindow = iframe.contentWindow;\n      if (!iframeWindow) return;\n\n      // API AIdeas per le app\n      iframeWindow.AIdeas = {\n        // Informazioni app\n        app: {\n          id: app.id,\n          name: app.name,\n          version: app.version\n        },\n\n        // Storage app-specific\n        storage: {\n          get: (key) => localStorage.getItem(`aideas_app_${app.id}_${key}`),\n          set: (key, value) => localStorage.setItem(`aideas_app_${app.id}_${key}`, value),\n          remove: (key) => localStorage.removeItem(`aideas_app_${app.id}_${key}`),\n          clear: () => {\n            const prefix = `aideas_app_${app.id}_`;\n            Object.keys(localStorage).forEach(key => {\n              if (key.startsWith(prefix)) {\n                localStorage.removeItem(key);\n              }\n            });\n          }\n        },\n\n        // Utilities\n        utils: {\n          showNotification: (message, type = 'info') => {\n            showToast(`[${app.name}] ${message}`, type);\n          },\n          \n          getUserPreferences: async () => {\n            return await StorageService.getAllSettings();\n          },\n          \n          openUrl: (url) => {\n            window.open(url, '_blank');\n          },\n\n          closeApp: () => {\n            this.closeApp(app.id);\n          }\n        },\n\n        // Lifecycle hooks\n        lifecycle: {\n          onAppStart: (callback) => {\n            if (typeof callback === 'function') {\n              setTimeout(callback, 100);\n            }\n          },\n          \n          onAppPause: (callback) => {\n            window.addEventListener('blur', callback);\n          },\n          \n          onAppResume: (callback) => {\n            window.addEventListener('focus', callback);\n          }\n        }\n      };\n\n      console.log(`✅ AIdeas API iniettata in ${app.name}`);\n\n    } catch (error) {\n      console.warn('Impossibile iniettare AIdeas API:', error);\n    }\n  }\n\n  /**\n   * Utility methods\n   */\n\n  // Trova entry point nell'app ZIP\n  findEntryPoint(files, specifiedEntry) {\n    if (specifiedEntry) {\n      const specified = files.find(f => f.filename === specifiedEntry);\n      if (specified) return specified;\n    }\n\n    // Fallback: cerca index.html\n    const indexHtml = files.find(f => f.filename === 'index.html');\n    if (indexHtml) return indexHtml;\n\n    // Fallback: primo file HTML\n    const firstHtml = files.find(f => f.filename.endsWith('.html'));\n    if (firstHtml) return firstHtml;\n\n    throw new Error('Entry point HTML non trovato');\n  }\n\n  // Sostituisce TUTTI i percorsi relativi con blob URLs (gestione completa)\n  replaceAllLocalPaths(htmlContent, blobUrls, app) {\n    let modifiedContent = htmlContent;\n\n    // Crea una mappa dei percorsi possibili (con e senza ./)\n    const pathMap = new Map();\n    for (const [filename, blobUrl] of blobUrls) {\n      pathMap.set(filename, blobUrl);\n      pathMap.set('./' + filename, blobUrl);\n      pathMap.set('../' + filename, blobUrl); // Support anche ../\n      \n      // Support per percorsi nelle subdirectory\n      const pathSegments = filename.split('/');\n      if (pathSegments.length > 1) {\n        // es. se filename è \"js/app.js\", aggiungi anche \"app.js\"\n        const justFilename = pathSegments[pathSegments.length - 1];\n        if (!pathMap.has(justFilename)) {\n          pathMap.set(justFilename, blobUrl);\n        }\n      }\n    }\n\n    // 1. Sostituisci attributi src (script, img, iframe, etc.)\n    modifiedContent = modifiedContent.replace(/\\bsrc\\s*=\\s*[\"']([^\"']+)[\"']/gi, (match, path) => {\n      const cleanPath = this.cleanPath(path);\n      if (pathMap.has(cleanPath)) {\n        return match.replace(path, pathMap.get(cleanPath));\n      }\n      return match;\n    });\n\n    // 2. Sostituisci attributi href (link, a)\n    modifiedContent = modifiedContent.replace(/\\bhref\\s*=\\s*[\"']([^\"']+)[\"']/gi, (match, path) => {\n      const cleanPath = this.cleanPath(path);\n      if (pathMap.has(cleanPath) && !path.startsWith('#') && !path.startsWith('mailto:')) {\n        return match.replace(path, pathMap.get(cleanPath));\n      }\n      return match;\n    });\n\n    // 3. Sostituisci import statements JavaScript (ES6 modules)\n    modifiedContent = modifiedContent.replace(/\\bimport\\s+.*?\\s+from\\s+[\"']([^\"']+)[\"']/gi, (match, path) => {\n      const cleanPath = this.cleanPath(path);\n      if (pathMap.has(cleanPath)) {\n        return match.replace(path, pathMap.get(cleanPath));\n      }\n      return match;\n    });\n\n    // 4. Sostituisci require() calls (CommonJS)\n    modifiedContent = modifiedContent.replace(/\\brequire\\s*\\(\\s*[\"']([^\"']+)[\"']\\s*\\)/gi, (match, path) => {\n      const cleanPath = this.cleanPath(path);\n      if (pathMap.has(cleanPath)) {\n        return match.replace(path, pathMap.get(cleanPath));\n      }\n      return match;\n    });\n\n    // 5. Sostituisci CSS url() references\n    modifiedContent = modifiedContent.replace(/\\burl\\s*\\(\\s*[\"']?([^\"')]+)[\"']?\\s*\\)/gi, (match, path) => {\n      const cleanPath = this.cleanPath(path);\n      if (pathMap.has(cleanPath)) {\n        return match.replace(path, pathMap.get(cleanPath));\n      }\n      return match;\n    });\n\n    // 6. Sostituisci fetch() e XMLHttpRequest references\n    modifiedContent = modifiedContent.replace(/\\bfetch\\s*\\(\\s*[\"']([^\"']+)[\"']/gi, (match, path) => {\n      const cleanPath = this.cleanPath(path);\n      if (pathMap.has(cleanPath)) {\n        return match.replace(path, pathMap.get(cleanPath));\n      }\n      return match;\n    });\n\n    // 7. Sostituisci new URL() constructor\n    modifiedContent = modifiedContent.replace(/\\bnew\\s+URL\\s*\\(\\s*[\"']([^\"']+)[\"']/gi, (match, path) => {\n      const cleanPath = this.cleanPath(path);\n      if (pathMap.has(cleanPath)) {\n        return match.replace(path, pathMap.get(cleanPath));\n      }\n      return match;\n    });\n\n    // 8. Sostituisci JSON references e altri possibili pattern\n    modifiedContent = modifiedContent.replace(/[\"']([^\"']*\\.[a-zA-Z0-9]+)[\"']/gi, (match, path) => {\n      // Solo se il path sembra un file locale (ha estensione e non è URL)\n      if (!path.includes('://') && !path.startsWith('data:') && !path.startsWith('#')) {\n        const cleanPath = this.cleanPath(path);\n        if (pathMap.has(cleanPath)) {\n          return match.replace(path, pathMap.get(cleanPath));\n        }\n      }\n      return match;\n    });\n\n    // Aggiungi meta tags per sicurezza e info\n    const metaTags = `\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <meta name=\"aideas-app\" content=\"${escapeHtml(app.name)}\">\n      <meta name=\"aideas-version\" content=\"${app.version || '1.0.0'}\">\n      <meta name=\"aideas-type\" content=\"zip\">\n      <base href=\"blob:\">\n    `;\n\n    if (modifiedContent.includes('<head>')) {\n      modifiedContent = modifiedContent.replace('<head>', '<head>' + metaTags);\n    } else if (modifiedContent.includes('<html>')) {\n      modifiedContent = modifiedContent.replace('<html>', '<html><head>' + metaTags + '</head>');\n    } else {\n      modifiedContent = metaTags + modifiedContent;\n    }\n\n    return modifiedContent;\n  }\n\n  // Pulisce il percorso dai parametri query e hash\n  cleanPath(path) {\n    if (!path) return '';\n    \n    // Rimuovi query parameters e hash\n    let cleanPath = path.split('?')[0].split('#')[0];\n    \n    // Normalizza slashes\n    cleanPath = cleanPath.replace(/\\\\/g, '/');\n    \n    // Rimuovi leading/trailing whitespace\n    cleanPath = cleanPath.trim();\n    \n    return cleanPath;\n  }\n\n  // Controlla compatibilità iframe per URL\n  async checkIframeCompatibility(url) {\n    try {\n      console.log(`🔍 Controllo compatibilità iframe per: ${url}`);\n      \n      // Per app locali (blob URLs), sempre compatibili\n      if (url.startsWith('blob:')) {\n        console.log('✅ Blob URL - compatibile con iframe');\n        return true;\n      }\n\n      // Per app HTML locali, sempre compatibili\n      if (url.startsWith('data:')) {\n        console.log('✅ Data URL - compatibile con iframe');\n        return true;\n      }\n\n      // Per URL esterni, controlla gli header\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 secondi timeout\n\n      try {\n        const response = await fetch(url, { \n          method: 'HEAD',\n          signal: controller.signal,\n          mode: 'cors'\n        });\n        \n        clearTimeout(timeoutId);\n        \n        const xFrameOptions = response.headers.get('X-Frame-Options');\n        const csp = response.headers.get('Content-Security-Policy');\n\n        console.log(`📋 Headers ricevuti:`, {\n          'X-Frame-Options': xFrameOptions,\n          'Content-Security-Policy': csp ? csp.substring(0, 100) + '...' : 'none'\n        });\n\n        // Controlla se il sito blocca iframe\n        if (xFrameOptions) {\n          const xfo = xFrameOptions.toLowerCase();\n          if (xfo === 'deny') {\n            console.log('❌ X-Frame-Options: DENY - iframe non supportato');\n            return false;\n          }\n          if (xfo === 'sameorigin') {\n            console.log('⚠️ X-Frame-Options: SAMEORIGIN - iframe limitato');\n            // Potrebbe funzionare se siamo sulla stessa origine\n            return window.location.origin === new URL(url).origin;\n          }\n        }\n\n        // Controlla CSP frame-ancestors\n        if (csp) {\n          const cspLower = csp.toLowerCase();\n          if (cspLower.includes('frame-ancestors')) {\n            if (cspLower.includes('frame-ancestors \\'none\\'')) {\n              console.log('❌ CSP frame-ancestors: none - iframe non supportato');\n              return false;\n            }\n            if (cspLower.includes('frame-ancestors \\'self\\'')) {\n              console.log('⚠️ CSP frame-ancestors: self - iframe limitato');\n              return window.location.origin === new URL(url).origin;\n            }\n          }\n        }\n\n        console.log('✅ URL compatibile con iframe');\n        return true;\n\n      } catch (fetchError) {\n        clearTimeout(timeoutId);\n        \n        if (fetchError.name === 'AbortError') {\n          console.log('⏰ Timeout durante controllo compatibilità iframe');\n        } else {\n          console.log('⚠️ Errore durante controllo compatibilità iframe:', fetchError.message);\n        }\n        \n        // Se non riusciamo a fare la richiesta, proviamo comunque ma con warning\n        console.log('🔄 Fallback: proveremo iframe comunque');\n        return true;\n      }\n\n    } catch (error) {\n      console.error('❌ Errore generale controllo compatibilità iframe:', error);\n      // In caso di errore, meglio essere sicuri e usare nuova finestra\n      return false;\n    }\n  }\n\n  // Parsing URL GitHub\n  parseGitHubUrl(url) {\n    const patterns = [\n      /github\\.com\\/([^\\/]+)\\/([^\\/]+)/,\n      /([^\\/]+)\\.github\\.io\\/([^\\/]+)/\n    ];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) {\n        return {\n          owner: match[1],\n          repo: match[2].replace('.git', ''),\n          branch: 'main'\n        };\n      }\n    }\n    return null;\n  }\n\n  // Validazione app prima del lancio\n  async validateApp(app) {\n    const validation = { valid: true, error: null };\n\n    if (!app || !app.id) {\n      validation.valid = false;\n      validation.error = 'App non valida';\n      return validation;\n    }\n\n    switch (app.type) {\n    case 'zip':\n      const files = await StorageService.getAppFiles(app.id);\n      if (!files.length) {\n        validation.valid = false;\n        validation.error = 'File dell\\'app non trovati';\n      }\n      break;\n\n    case 'url':\n    case 'github':\n    case 'pwa':\n      if (!app.url && !app.githubUrl) {\n        validation.valid = false;\n        validation.error = 'URL dell\\'app non specificato';\n      }\n      break;\n\n    case 'html':\n      if (!app.content) {\n        validation.valid = false;\n        validation.error = 'Contenuto HTML mancante';\n      }\n      break;\n\n    default:\n      validation.valid = false;\n      validation.error = `Tipo di app non supportato: ${app.type}`;\n    }\n\n    return validation;\n  }\n\n  // Dialog per limite app concorrenti\n  async showConcurrentAppsDialog() {\n    return new Promise((resolve) => {\n      showModal('concurrent-apps-dialog', `\n        <div class=\"modal-header\">\n          <h2>Limite app raggiunto</h2>\n          <button class=\"modal-close\">&times;</button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Hai raggiunto il limite di ${this.maxConcurrentApps} app aperte contemporaneamente.</p>\n          <p>Vuoi chiudere un'app esistente e procedere?</p>\n          <div class=\"concurrent-apps-list\">\n            ${Array.from(this.activeApps.values()).map(activeApp => `\n              <div class=\"concurrent-app-item\">\n                <span>${activeApp.app.name}</span>\n                <button class=\"btn btn-sm btn-secondary\" onclick=\"this.closeApp('${activeApp.app.id}')\">Chiudi</button>\n              </div>\n            `).join('')}\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-secondary\" onclick=\"resolve(false)\">Annulla</button>\n          <button class=\"btn btn-primary\" onclick=\"resolve(true)\">Continua</button>\n        </div>\n      `, { disableBackdropClose: true });\n      \n      // Questo è semplificato - in realtà dovremmo gestire i click sui pulsanti\n      setTimeout(() => resolve(true), 5000); // Auto-resolve dopo 5s per demo\n    });\n  }\n\n  // Chiudi app\n  closeApp(appId) {\n    const activeApp = Array.from(this.activeApps.values()).find(a => a.app.id === appId);\n    if (activeApp) {\n      if (activeApp.window && !activeApp.window.closed) {\n        activeApp.window.close();\n      }\n      if (activeApp.cleanup) {\n        activeApp.cleanup();\n      }\n      this.activeApps.delete(appId);\n    }\n  }\n\n  // Cleanup risorse app\n  cleanupApp(appId) {\n    this.closeApp(appId);\n  }\n\n  // Setup event listeners\n  setupEventListeners() {\n    // Ascolta chiusura finestre esterne\n    window.addEventListener('beforeunload', () => {\n      // Cleanup tutte le app attive\n      for (const [launchId, activeApp] of this.activeApps) {\n        if (activeApp.cleanup) {\n          activeApp.cleanup();\n        }\n      }\n    });\n  }\n\n  // Gestione cronologia\n  async loadLaunchHistory() {\n    const history = await StorageService.getSetting('launchHistory', []);\n    this.launchHistory = history.slice(-50); // Mantieni ultimi 50\n  }\n\n  addToHistory(app, launchId) {\n    this.launchHistory.push({\n      appId: app.id,\n      appName: app.name,\n      launchId,\n      timestamp: new Date().toISOString()\n    });\n\n    // Salva cronologia\n    StorageService.setSetting('launchHistory', this.launchHistory.slice(-50));\n  }\n\n  // Analytics tracking\n  trackLaunch(app, duration) {\n    console.log(`📊 Launch tracked: ${app.name} in ${duration}ms`);\n    // Qui potresti integrare con sistemi di analytics\n  }\n\n  // Prompt installazione PWA\n  promptPWAInstall(app, window) {\n    // Implementazione semplificata per demo\n    console.log(`💡 PWA install prompt for ${app.name}`);\n  }\n\n  // Getter per informazioni stato\n  get activeAppCount() {\n    return this.activeApps.size;\n  }\n\n  get canLaunchMore() {\n    return this.activeApps.size < this.maxConcurrentApps;\n  }\n}","/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n","/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n","import { isTag, isCDATA, isText, hasChildren, isComment, } from \"domhandler\";\nimport renderHTML from \"dom-serializer\";\nimport { ElementType } from \"domelementtype\";\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nexport function getOuterHTML(node, options) {\n    return renderHTML(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nexport function getInnerHTML(node, options) {\n    return hasChildren(node)\n        ? node.children.map((node) => getOuterHTML(node, options)).join(\"\")\n        : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nexport function getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (isCDATA(node))\n        return getText(node.children);\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nexport function textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (hasChildren(node) && !isComment(node)) {\n        return textContent(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nexport function innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n        return innerText(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n//# sourceMappingURL=stringify.js.map","import { isTag, hasChildren, } from \"domhandler\";\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nexport function getChildren(elem) {\n    return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nexport function getParent(elem) {\n    return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nexport function getSiblings(elem) {\n    const parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    const siblings = [elem];\n    let { prev, next } = elem;\n    while (prev != null) {\n        siblings.unshift(prev);\n        ({ prev } = prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        ({ next } = next);\n    }\n    return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nexport function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nexport function hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nexport function getName(elem) {\n    return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nexport function nextElementSibling(elem) {\n    let { next } = elem;\n    while (next !== null && !isTag(next))\n        ({ next } = next);\n    return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nexport function prevElementSibling(elem) {\n    let { prev } = elem;\n    while (prev !== null && !isTag(prev))\n        ({ prev } = prev);\n    return prev;\n}\n//# sourceMappingURL=traversal.js.map","/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nexport function removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) {\n            childs.splice(childsIndex, 1);\n        }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nexport function replaceElement(elem, replacement) {\n    const prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    const next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    const parent = (replacement.parent = elem.parent);\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nexport function appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nexport function append(elem, next) {\n    removeElement(next);\n    const { parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nexport function prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nexport function prepend(elem, prev) {\n    removeElement(prev);\n    const { parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n//# sourceMappingURL=manipulation.js.map","import { isTag, hasChildren } from \"domhandler\";\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function filter(test, node, recurse = true, limit = Infinity) {\n    return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function find(test, nodes, recurse, limit) {\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (indexStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0)\n                return result;\n        }\n        if (recurse && hasChildren(elem) && elem.children.length > 0) {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nexport function findOneChild(test, nodes) {\n    return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nexport function findOne(test, nodes, recurse = true) {\n    const searchedNodes = Array.isArray(nodes) ? nodes : [nodes];\n    for (let i = 0; i < searchedNodes.length; i++) {\n        const node = searchedNodes[i];\n        if (isTag(node) && test(node)) {\n            return node;\n        }\n        if (recurse && hasChildren(node) && node.children.length > 0) {\n            const found = findOne(test, node.children, true);\n            if (found)\n                return found;\n        }\n    }\n    return null;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nexport function existsOne(test, nodes) {\n    return (Array.isArray(nodes) ? nodes : [nodes]).some((node) => (isTag(node) && test(node)) ||\n        (hasChildren(node) && existsOne(test, node.children)));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nexport function findAll(test, nodes) {\n    const result = [];\n    const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n    const indexStack = [0];\n    for (;;) {\n        if (indexStack[0] >= nodeStack[0].length) {\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (isTag(elem) && test(elem))\n            result.push(elem);\n        if (hasChildren(elem) && elem.children.length > 0) {\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n//# sourceMappingURL=querying.js.map","import { isTag, isText } from \"domhandler\";\nimport { filter, findOne } from \"./querying.js\";\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n    tag_name(name) {\n        if (typeof name === \"function\") {\n            return (elem) => isTag(elem) && name(elem.name);\n        }\n        else if (name === \"*\") {\n            return isTag;\n        }\n        return (elem) => isTag(elem) && elem.name === name;\n    },\n    tag_type(type) {\n        if (typeof type === \"function\") {\n            return (elem) => type(elem.type);\n        }\n        return (elem) => elem.type === type;\n    },\n    tag_contains(data) {\n        if (typeof data === \"function\") {\n            return (elem) => isText(elem) && data(elem.data);\n        }\n        return (elem) => isText(elem) && elem.data === data;\n    },\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return (elem) => isTag(elem) && value(elem.attribs[attrib]);\n    }\n    return (elem) => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n    const funcs = Object.keys(options).map((key) => {\n        const value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nexport function testElement(options, node) {\n    const test = compileTest(options);\n    return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nexport function getElements(options, nodes, recurse, limit = Infinity) {\n    const test = compileTest(options);\n    return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nexport function getElementById(id, nodes, recurse = true) {\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return findOne(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nexport function getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `className`.\n *\n * @category Legacy Query Functions\n * @param className Class name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `className`.\n */\nexport function getElementsByClassName(className, nodes, recurse = true, limit = Infinity) {\n    return filter(getAttribCheck(\"class\", className), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nexport function getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n//# sourceMappingURL=legacy.js.map","import { hasChildren } from \"domhandler\";\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nexport function removeSubsets(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nexport var DocumentPosition;\n(function (DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nexport function compareDocumentPosition(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return DocumentPosition.DISCONNECTED;\n    }\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n        }\n        return DocumentPosition.FOLLOWING;\n    }\n    if (sharedParent === nodeA) {\n        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n    }\n    return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nexport function uniqueSort(nodes) {\n    nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n    nodes.sort((a, b) => {\n        const relative = compareDocumentPosition(a, b);\n        if (relative & DocumentPosition.PRECEDING) {\n            return -1;\n        }\n        else if (relative & DocumentPosition.FOLLOWING) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\n//# sourceMappingURL=helpers.js.map","import { textContent } from \"./stringify.js\";\nimport { getElementsByTagName } from \"./legacy.js\";\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nexport function getFeed(doc) {\n    const feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    const childs = feedRoot.children;\n    const feed = {\n        type: \"atom\",\n        items: getElementsByTagName(\"entry\", childs).map((item) => {\n            var _a;\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n            if (href) {\n                entry.link = href;\n            }\n            const description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            const pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    const updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    const feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: getElementsByTagName(\"item\", feedRoot.children).map((item) => {\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    const updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return getElementsByTagName(\"media:content\", where).map((elem) => {\n        const { attribs } = elem;\n        const media = {\n            medium: attribs[\"medium\"],\n            isDefault: !!attribs[\"isDefault\"],\n        };\n        for (const attrib of MEDIA_KEYS_STRING) {\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (const attrib of MEDIA_KEYS_INT) {\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs[\"expression\"]) {\n            media.expression = attribs[\"expression\"];\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n    return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n    const val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n//# sourceMappingURL=feeds.js.map","import { textContent } from 'domutils';\nimport { flattenOptions as flattenOptions, } from './options.js';\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(that, dom, options) {\n    if (!that)\n        return '';\n    return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @param options - Options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(dom, options) {\n    return (!options &&\n        typeof dom === 'object' &&\n        dom != null &&\n        !('length' in dom) &&\n        !('type' in dom));\n}\nexport function html(dom, options) {\n    /*\n     * Be flexible about parameters, sometimes we call html(),\n     * with options as only parameter\n     * check dom argument for dom element specific properties\n     * assume there is no 'length' or 'type' properties in the options object\n     */\n    const toRender = isOptions(dom) ? ((options = dom), undefined) : dom;\n    /*\n     * Sometimes `$.html()` is used without preloading html,\n     * so fallback non-existing options to the default ones.\n     */\n    const opts = {\n        ...this === null || this === void 0 ? void 0 : this._options,\n        ...flattenOptions(options),\n    };\n    return render(this, toRender, opts);\n}\n/**\n * Render the document as XML.\n *\n * @category Static\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nexport function xml(dom) {\n    const options = { ...this._options, xmlMode: true };\n    return render(this, dom, options);\n}\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `<script>` and `<style>` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @category Static\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nexport function text(elements) {\n    const elems = elements !== null && elements !== void 0 ? elements : (this ? this.root() : []);\n    let ret = '';\n    for (let i = 0; i < elems.length; i++) {\n        ret += textContent(elems[i]);\n    }\n    return ret;\n}\nexport function parseHTML(data, context, keepScripts = typeof context === 'boolean' ? context : false) {\n    if (!data || typeof data !== 'string') {\n        return null;\n    }\n    if (typeof context === 'boolean') {\n        keepScripts = context;\n    }\n    const parsed = this.load(data, this._options, false);\n    if (!keepScripts) {\n        parsed('script').remove();\n    }\n    /*\n     * The `children` array is used by Cheerio internally to group elements that\n     * share the same parents. When nodes created through `parseHTML` are\n     * inserted into previously-existing DOM structures, they will be removed\n     * from the `children` array. The results of `parseHTML` should remain\n     * constant across these operations, so a shallow copy should be returned.\n     */\n    return [...parsed.root()[0].children];\n}\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @category Static\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nexport function root() {\n    return this(this._root);\n}\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @category Static\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nexport function contains(container, contained) {\n    // According to the jQuery API, an element does not \"contain\" itself\n    if (contained === container) {\n        return false;\n    }\n    /*\n     * Step up the descendants, stopping when the root element is reached\n     * (signaled by `.parent` returning a reference to the same object)\n     */\n    let next = contained;\n    while (next && next !== next.parent) {\n        next = next.parent;\n        if (next === container) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @category Static\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract(map) {\n    return this.root().extract(map);\n}\n/**\n * $.merge().\n *\n * @category Static\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nexport function merge(arr1, arr2) {\n    if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n        return;\n    }\n    let newLength = arr1.length;\n    const len = +arr2.length;\n    for (let i = 0; i < len; i++) {\n        arr1[newLength++] = arr2[i];\n    }\n    arr1.length = newLength;\n    return arr1;\n}\n/**\n * Checks if an object is array-like.\n *\n * @category Static\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item) {\n    if (Array.isArray(item)) {\n        return true;\n    }\n    if (typeof item !== 'object' ||\n        item === null ||\n        !('length' in item) ||\n        typeof item.length !== 'number' ||\n        item.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < item.length; i++) {\n        if (!(i in item)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=static.js.map","/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio(maybeCheerio) {\n    return maybeCheerio.cheerio != null;\n}\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str) {\n    return str.replace(/[._-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str) {\n    return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n/**\n * Iterate over each DOM element without creating intermediary Cheerio\n * instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach(array, fn) {\n    const len = array.length;\n    for (let i = 0; i < len; i++)\n        fn(array[i], i);\n    return array;\n}\nvar CharacterCode;\n(function (CharacterCode) {\n    CharacterCode[CharacterCode[\"LowerA\"] = 97] = \"LowerA\";\n    CharacterCode[CharacterCode[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharacterCode[CharacterCode[\"UpperA\"] = 65] = \"UpperA\";\n    CharacterCode[CharacterCode[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharacterCode[CharacterCode[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCode || (CharacterCode = {}));\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str) {\n    const tagStart = str.indexOf('<');\n    if (tagStart === -1 || tagStart > str.length - 3)\n        return false;\n    const tagChar = str.charCodeAt(tagStart + 1);\n    return (((tagChar >= CharacterCode.LowerA && tagChar <= CharacterCode.LowerZ) ||\n        (tagChar >= CharacterCode.UpperA && tagChar <= CharacterCode.UpperZ) ||\n        tagChar === CharacterCode.Exclamation) &&\n        str.includes('>', tagStart + 2));\n}\n//# sourceMappingURL=utils.js.map","/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\nvar _a;\nimport { text } from '../static.js';\nimport { domEach, camelCase, cssCase } from '../utils.js';\nimport { isTag } from 'domhandler';\nimport { innerText, textContent } from 'domutils';\nimport { ElementType } from 'htmlparser2';\nconst hasOwn = \n// @ts-expect-error `hasOwn` is a standard object method\n(_a = Object.hasOwn) !== null && _a !== void 0 ? _a : ((object, prop) => Object.prototype.hasOwnProperty.call(object, prop));\nconst rspace = /\\s+/;\nconst dataAttrPrefix = 'data-';\n// Attributes that are booleans\nconst rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n    var _a;\n    if (!elem || !isTag(elem))\n        return undefined;\n    (_a = elem.attribs) !== null && _a !== void 0 ? _a : (elem.attribs = {});\n    // Return the entire attribs object if no attribute specified\n    if (!name) {\n        return elem.attribs;\n    }\n    if (hasOwn(elem.attribs, name)) {\n        // Get the (decoded) attribute\n        return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n    }\n    // Mimic the DOM and return text content as value for `option's`\n    if (elem.name === 'option' && name === 'value') {\n        return text(elem.children);\n    }\n    // Mimic DOM with default value for radios/checkboxes\n    if (elem.name === 'input' &&\n        (elem.attribs['type'] === 'radio' || elem.attribs['type'] === 'checkbox') &&\n        name === 'value') {\n        return 'on';\n    }\n    return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is\n * `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el, name, value) {\n    if (value === null) {\n        removeAttribute(el, name);\n    }\n    else {\n        el.attribs[name] = `${value}`;\n    }\n}\nexport function attr(name, value) {\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name !== 'string') {\n                {\n                    throw new Error('Bad combination of arguments.');\n                }\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el))\n                    setAttr(el, name, value.call(el, i, el.attribs[name]));\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                for (const objName of Object.keys(name)) {\n                    const objValue = name[objName];\n                    setAttr(el, objName, objValue);\n                }\n            }\n            else {\n                setAttr(el, name, value);\n            }\n        });\n    }\n    return arguments.length > 1\n        ? this\n        : getAttr(this[0], name, this.options.xmlMode);\n}\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @param xmlMode - Disable handling of special HTML attributes.\n * @returns The prop's value.\n */\nfunction getProp(el, name, xmlMode) {\n    return name in el\n        ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n            el[name]\n        : !xmlMode && rboolean.test(name)\n            ? getAttr(el, name, false) !== undefined\n            : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n * @param xmlMode - Disable handling of special HTML attributes.\n */\nfunction setProp(el, name, value, xmlMode) {\n    if (name in el) {\n        // @ts-expect-error Overriding value\n        el[name] = value;\n    }\n    else {\n        setAttr(el, name, !xmlMode && rboolean.test(name)\n            ? value\n                ? ''\n                : null\n            : `${value}`);\n    }\n}\nexport function prop(name, value) {\n    var _a;\n    if (typeof name === 'string' && value === undefined) {\n        const el = this[0];\n        if (!el)\n            return undefined;\n        switch (name) {\n            case 'style': {\n                const property = this.css();\n                const keys = Object.keys(property);\n                for (let i = 0; i < keys.length; i++) {\n                    property[i] = keys[i];\n                }\n                property.length = keys.length;\n                return property;\n            }\n            case 'tagName':\n            case 'nodeName': {\n                if (!isTag(el))\n                    return undefined;\n                return el.name.toUpperCase();\n            }\n            case 'href':\n            case 'src': {\n                if (!isTag(el))\n                    return undefined;\n                const prop = (_a = el.attribs) === null || _a === void 0 ? void 0 : _a[name];\n                if (typeof URL !== 'undefined' &&\n                    ((name === 'href' && (el.tagName === 'a' || el.tagName === 'link')) ||\n                        (name === 'src' &&\n                            (el.tagName === 'img' ||\n                                el.tagName === 'iframe' ||\n                                el.tagName === 'audio' ||\n                                el.tagName === 'video' ||\n                                el.tagName === 'source'))) &&\n                    prop !== undefined &&\n                    this.options.baseURI) {\n                    return new URL(prop, this.options.baseURI).href;\n                }\n                return prop;\n            }\n            case 'innerText': {\n                return innerText(el);\n            }\n            case 'textContent': {\n                return textContent(el);\n            }\n            case 'outerHTML': {\n                if (el.type === ElementType.Root)\n                    return this.html();\n                return this.clone().wrap('<container />').parent().html();\n            }\n            case 'innerHTML': {\n                return this.html();\n            }\n            default: {\n                if (!isTag(el))\n                    return undefined;\n                return getProp(el, name, this.options.xmlMode);\n            }\n        }\n    }\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name === 'object') {\n                throw new TypeError('Bad combination of arguments.');\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el)) {\n                    setProp(el, name, value.call(el, i, getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n                }\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                for (const key of Object.keys(name)) {\n                    const val = name[key];\n                    setProp(el, key, val, this.options.xmlMode);\n                }\n            }\n            else {\n                setProp(el, name, value, this.options.xmlMode);\n            }\n        });\n    }\n    return undefined;\n}\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param elem - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(elem, name, value) {\n    var _a;\n    (_a = elem.data) !== null && _a !== void 0 ? _a : (elem.data = {});\n    if (typeof name === 'object')\n        Object.assign(elem.data, name);\n    else if (typeof name === 'string' && value !== undefined) {\n        elem.data[name] = value;\n    }\n}\n/**\n * Read _all_ HTML5 `data-*` attributes from the equivalent HTML5 `data-*`\n * attribute, and cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @returns A map with all of the data attributes.\n */\nfunction readAllData(el) {\n    for (const domName of Object.keys(el.attribs)) {\n        if (!domName.startsWith(dataAttrPrefix)) {\n            continue;\n        }\n        const jsName = camelCase(domName.slice(dataAttrPrefix.length));\n        if (!hasOwn(el.data, jsName)) {\n            el.data[jsName] = parseDataValue(el.attribs[domName]);\n        }\n    }\n    return el.data;\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value.\n */\nfunction readData(el, name) {\n    const domName = dataAttrPrefix + cssCase(name);\n    const data = el.data;\n    if (hasOwn(data, name)) {\n        return data[name];\n    }\n    if (hasOwn(el.attribs, domName)) {\n        return (data[name] = parseDataValue(el.attribs[domName]));\n    }\n    return undefined;\n}\n/**\n * Coerce string data-* attributes to their corresponding JavaScript primitives.\n *\n * @private\n * @category Attributes\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseDataValue(value) {\n    if (value === 'null')\n        return null;\n    if (value === 'true')\n        return true;\n    if (value === 'false')\n        return false;\n    const num = Number(value);\n    if (value === String(num))\n        return num;\n    if (rbrace.test(value)) {\n        try {\n            return JSON.parse(value);\n        }\n        catch {\n            /* Ignore */\n        }\n    }\n    return value;\n}\nexport function data(name, value) {\n    var _a;\n    const elem = this[0];\n    if (!elem || !isTag(elem))\n        return;\n    const dataEl = elem;\n    (_a = dataEl.data) !== null && _a !== void 0 ? _a : (dataEl.data = {});\n    // Return the entire data object if no data specified\n    if (name == null) {\n        return readAllData(dataEl);\n    }\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        domEach(this, (el) => {\n            if (isTag(el)) {\n                if (typeof name === 'object')\n                    setData(el, name);\n                else\n                    setData(el, name, value);\n            }\n        });\n        return this;\n    }\n    return readData(dataEl, name);\n}\nexport function val(value) {\n    const querying = arguments.length === 0;\n    const element = this[0];\n    if (!element || !isTag(element))\n        return querying ? undefined : this;\n    switch (element.name) {\n        case 'textarea': {\n            return this.text(value);\n        }\n        case 'select': {\n            const option = this.find('option:selected');\n            if (!querying) {\n                if (this.attr('multiple') == null && typeof value === 'object') {\n                    return this;\n                }\n                this.find('option').removeAttr('selected');\n                const values = typeof value === 'object' ? value : [value];\n                for (const val of values) {\n                    this.find(`option[value=\"${val}\"]`).attr('selected', '');\n                }\n                return this;\n            }\n            return this.attr('multiple')\n                ? option.toArray().map((el) => text(el.children))\n                : option.attr('value');\n        }\n        case 'input':\n        case 'option': {\n            return querying\n                ? this.attr('value')\n                : this.attr('value', value);\n        }\n    }\n    return undefined;\n}\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem, name) {\n    if (!elem.attribs || !hasOwn(elem.attribs, name))\n        return;\n    delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names) {\n    return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').prop('outerHTML');\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').prop('outerHTML');\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nexport function removeAttr(name) {\n    const attrNames = splitNames(name);\n    for (const attrName of attrNames) {\n        domEach(this, (elem) => {\n            if (isTag(elem))\n                removeAttribute(elem, attrName);\n        });\n    }\n    return this;\n}\n/**\n * Check to see if _any_ of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nexport function hasClass(className) {\n    return this.toArray().some((elem) => {\n        const clazz = isTag(elem) && elem.attribs['class'];\n        let idx = -1;\n        if (clazz && className.length > 0) {\n            while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n                const end = idx + className.length;\n                if ((idx === 0 || rspace.test(clazz[idx - 1])) &&\n                    (end === clazz.length || rspace.test(clazz[end]))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    });\n}\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').prop('outerHTML');\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').prop('outerHTML');\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nexport function addClass(value) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                const className = el.attribs['class'] || '';\n                addClass.call([el], value.call(el, i, className));\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n        const className = getAttr(el, 'class', false);\n        if (className) {\n            let setClass = ` ${className} `;\n            // Check if class already exists\n            for (const cn of classNames) {\n                const appendClass = `${cn} `;\n                if (!setClass.includes(` ${appendClass}`))\n                    setClass += appendClass;\n            }\n            setAttr(el, 'class', setClass.trim());\n        }\n        else {\n            setAttr(el, 'class', classNames.join(' ').trim());\n        }\n    }\n    return this;\n}\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').prop('outerHTML');\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().prop('outerHTML');\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nexport function removeClass(name) {\n    // Handle if value is a function\n    if (typeof name === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n            }\n        });\n    }\n    const classes = splitNames(name);\n    const numClasses = classes.length;\n    const removeAll = arguments.length === 0;\n    return domEach(this, (el) => {\n        if (!isTag(el))\n            return;\n        if (removeAll) {\n            // Short circuit the remove all case as this is the nice one\n            el.attribs['class'] = '';\n        }\n        else {\n            const elClasses = splitNames(el.attribs['class']);\n            let changed = false;\n            for (let j = 0; j < numClasses; j++) {\n                const index = elClasses.indexOf(classes[j]);\n                if (index !== -1) {\n                    elClasses.splice(index, 1);\n                    changed = true;\n                    /*\n                     * We have to do another pass to ensure that there are not duplicate\n                     * classes listed\n                     */\n                    j--;\n                }\n            }\n            if (changed) {\n                el.attribs['class'] = elClasses.join(' ');\n            }\n        }\n    });\n}\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').prop('outerHTML');\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).prop('outerHTML');\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nexport function toggleClass(value, stateVal) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numClasses = classNames.length;\n    const state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        const elementClasses = splitNames(el.attribs['class']);\n        // Check if class already exists\n        for (let j = 0; j < numClasses; j++) {\n            // Check if the class name is currently defined\n            const index = elementClasses.indexOf(classNames[j]);\n            // Add if stateValue === true or we are toggling and there is no value\n            if (state >= 0 && index === -1) {\n                elementClasses.push(classNames[j]);\n            }\n            else if (state <= 0 && index !== -1) {\n                // Otherwise remove but only if the item exists\n                elementClasses.splice(index, 1);\n            }\n        }\n        el.attribs['class'] = elementClasses.join(' ');\n    }\n    return this;\n}\n//# sourceMappingURL=attributes.js.map","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n","import { SelectorType, AttributeAction, } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([\n    [126 /* Tilde */, AttributeAction.Element],\n    [94 /* Circumflex */, AttributeAction.Start],\n    [36 /* Dollar */, AttributeAction.End],\n    [42 /* Asterisk */, AttributeAction.Any],\n    [33 /* ExclamationMark */, AttributeAction.Not],\n    [124 /* Pipe */, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        let sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                const name = getName(1).toLowerCase();\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","import { AttributeAction, SelectorType } from \"css-what\";\nconst procedure = new Map([\n    [SelectorType.Universal, 50],\n    [SelectorType.Tag, 30],\n    [SelectorType.Attribute, 1],\n    [SelectorType.Pseudo, 0],\n]);\nexport function isTraversal(token) {\n    return !procedure.has(token.type);\n}\nconst attributes = new Map([\n    [AttributeAction.Exists, 10],\n    [AttributeAction.Equals, 8],\n    [AttributeAction.Not, 7],\n    [AttributeAction.Start, 6],\n    [AttributeAction.End, 6],\n    [AttributeAction.Any, 5],\n]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nexport default function sortByProcedure(arr) {\n    const procs = arr.map(getProcedure);\n    for (let i = 1; i < arr.length; i++) {\n        const procNew = procs[i];\n        if (procNew < 0)\n            continue;\n        for (let j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            const token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nfunction getProcedure(token) {\n    var _a, _b;\n    let proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n    if (token.type === SelectorType.Attribute) {\n        proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n        if (token.action === AttributeAction.Equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */\n            proc >>= 1;\n        }\n    }\n    else if (token.type === SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        }\n        else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        }\n        else if (Array.isArray(token.data)) {\n            // Eg. :matches, :not\n            proc = Math.min(...token.data.map((d) => Math.min(...d.map(getProcedure))));\n            // If we have traversals, try to avoid executing this selector\n            if (proc < 0) {\n                proc = 0;\n            }\n        }\n        else {\n            proc = 2;\n        }\n    }\n    return proc;\n}\n//# sourceMappingURL=sort.js.map","import boolbase from \"boolbase\";\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\",\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\"\n        ? selector.ignoreCase\n        : selector.ignoreCase === \"quirks\"\n            ? !!options.quirksMode\n            : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nexport const attributeRules = {\n    equals(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length === value.length &&\n                    attr.toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                attr.substr(0, len) === value &&\n                next(elem));\n        };\n    },\n    element(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (/\\s/.test(value)) {\n            return boolbase.falseFunc;\n        }\n        const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                attr.length >= value.length &&\n                regex.test(attr) &&\n                next(elem));\n        };\n    },\n    exists(next, { name }, { adapter }) {\n        return (elem) => adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= len &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) &&\n                next(elem);\n        };\n    },\n    end(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = -value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                var _a;\n                return ((_a = adapter\n                    .getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) &&\n                next(elem);\n        };\n    },\n    any(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (value === \"\") {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            const regex = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= value.length &&\n                    regex.test(attr) &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) &&\n                next(elem);\n        };\n    },\n    not(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (value === \"\") {\n            return (elem) => !!adapter.getAttributeValue(elem, name) && next(elem);\n        }\n        else if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return ((attr == null ||\n                    attr.length !== value.length ||\n                    attr.toLowerCase() !== value) &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) !== value && next(elem);\n    },\n};\n//# sourceMappingURL=attributes.js.map","// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nexport function parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    let idx = 0;\n    let a = 0;\n    let sign = readSign();\n    let number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        const start = idx;\n        let value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\n//# sourceMappingURL=parse.js.map","import boolbase from \"boolbase\";\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nexport function compile(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    const b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return (index) => index <= b;\n    if (a === 0)\n        return (index) => index === b;\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase.trueFunc : (index) => index >= b;\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    const absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    const bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? (index) => index >= b && index % absA === bMod\n        : (index) => index <= b && index % absA === bMod;\n}\n/**\n * Returns a function that produces a monotonously increasing sequence of indices.\n *\n * If the sequence has an end, the returned function will return `null` after\n * the last index in the sequence.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing (2n+3)</caption>\n *\n * ```js\n * const gen = nthCheck.generate([2, 3])\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value (-2n+10)</caption>\n *\n * ```js\n *\n * const gen = nthCheck.generate([-2, 5]);\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function generate(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    let b = parsed[1] - 1;\n    let n = 0;\n    // Make sure to always return an increasing sequence\n    if (a < 0) {\n        const aPos = -a;\n        // Get `b mod a`\n        const minValue = ((b % aPos) + aPos) % aPos;\n        return () => {\n            const val = minValue + aPos * n++;\n            return val > b ? null : val;\n        };\n    }\n    if (a === 0)\n        return b < 0\n            ? // There are no result — always return `null`\n                () => null\n            : // Return `b` exactly once\n                () => (n++ === 0 ? b : null);\n    if (b < 0) {\n        b += a * Math.ceil(-b / a);\n    }\n    return () => a * n++ + b;\n}\n//# sourceMappingURL=compile.js.map","import { parse } from \"./parse.js\";\nimport { compile, generate } from \"./compile.js\";\nexport { parse, compile, generate };\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nexport default function nthCheck(formula) {\n    return compile(parse(formula));\n}\n/**\n * Parses and compiles a formula to a generator that produces a sequence of indices.\n * Combination of {@link parse} and {@link generate}.\n *\n * @param formula The formula to compile.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing</caption>\n *\n * ```js\n * const gen = nthCheck.sequence('2n+3')\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value</caption>\n *\n * ```js\n *\n * const gen = nthCheck.sequence('-2n+5');\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function sequence(formula) {\n    return generate(parse(formula));\n}\n//# sourceMappingURL=index.js.map","import getNCheck from \"nth-check\";\nimport boolbase from \"boolbase\";\nfunction getChildFunc(next, adapter) {\n    return (elem) => {\n        const parent = adapter.getParent(elem);\n        return parent != null && adapter.isTag(parent) && next(elem);\n    };\n}\nexport const filters = {\n    contains(next, text, { adapter }) {\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).includes(text);\n        };\n    },\n    icontains(next, text, { adapter }) {\n        const itext = text.toLowerCase();\n        return function icontains(elem) {\n            return (next(elem) &&\n                adapter.getText(elem).toLowerCase().includes(itext));\n        };\n    },\n    // Location specific methods\n    \"nth-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root(next, _rule, { adapter }) {\n        return (elem) => {\n            const parent = adapter.getParent(elem);\n            return (parent == null || !adapter.isTag(parent)) && next(elem);\n        };\n    },\n    scope(next, rule, options, context) {\n        const { equals } = options;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return filters[\"root\"](next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return (elem) => equals(context[0], elem) && next(elem);\n        }\n        return (elem) => context.includes(elem) && next(elem);\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\"),\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbase.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n//# sourceMappingURL=filters.js.map","// While filters are precompiled, pseudos get called when they are needed\nexport const pseudos = {\n    empty(elem, { adapter }) {\n        return !adapter.getChildren(elem).some((elem) => \n        // FIXME: `getText` call is potentially expensive.\n        adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n    },\n    \"first-child\"(elem, { adapter, equals }) {\n        if (adapter.prevElementSibling) {\n            return adapter.prevElementSibling(elem) == null;\n        }\n        const firstChild = adapter\n            .getSiblings(elem)\n            .find((elem) => adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            if (equals(elem, siblings[i]))\n                return true;\n            if (adapter.isTag(siblings[i]))\n                break;\n        }\n        return false;\n    },\n    \"first-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\"(elem, { adapter, equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) ||\n            !adapter.isTag(sibling) ||\n            adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\"(elem, { adapter, equals }) {\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling));\n    },\n};\nexport function verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) {\n            throw new Error(`Pseudo-class :${name} requires an argument`);\n        }\n    }\n    else if (func.length === argIndex) {\n        throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n    }\n}\n//# sourceMappingURL=pseudos.js.map","/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexport const aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n//# sourceMappingURL=aliases.js.map","import boolbase from \"boolbase\";\nimport { isTraversal } from \"../sort.js\";\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nexport const PLACEHOLDER_ELEMENT = {};\nexport function ensureIsTag(next, adapter) {\n    if (next === boolbase.falseFunc)\n        return boolbase.falseFunc;\n    return (elem) => adapter.isTag(elem) && next(elem);\n}\nexport function getNextSiblings(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1)\n        return [];\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1)\n        return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals,\n    };\n}\nconst is = (next, token, options, context, compileToken) => {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbase.trueFunc\n        ? next\n        : func === boolbase.falseFunc\n            ? boolbase.falseFunc\n            : (elem) => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nexport const subselects = {\n    is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not(next, token, options, context, compileToken) {\n        const func = compileToken(token, copyOptions(options), context);\n        return func === boolbase.falseFunc\n            ? next\n            : func === boolbase.trueFunc\n                ? boolbase.falseFunc\n                : (elem) => !func(elem) && next(elem);\n    },\n    has(next, subselect, options, _context, compileToken) {\n        const { adapter } = options;\n        const opts = copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s) => s.some(isTraversal))\n            ? // Used as a placeholder. Will be replaced with the actual element.\n                [PLACEHOLDER_ELEMENT]\n            : undefined;\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        const hasElement = ensureIsTag(compiled, adapter);\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== boolbase.trueFunc) {\n            /*\n             * `shouldTestNextSiblings` will only be true if the query starts with\n             * a traversal (sibling or adjacent). That means we will always have a context.\n             */\n            const { shouldTestNextSiblings = false } = compiled;\n            return (elem) => {\n                if (!next(elem))\n                    return false;\n                context[0] = elem;\n                const childs = adapter.getChildren(elem);\n                const nextElements = shouldTestNextSiblings\n                    ? [...childs, ...getNextSiblings(elem, adapter)]\n                    : childs;\n                return adapter.existsOne(hasElement, nextElements);\n            };\n        }\n        return (elem) => next(elem) &&\n            adapter.existsOne(hasElement, adapter.getChildren(elem));\n    },\n};\n//# sourceMappingURL=subselects.js.map","import { parse } from \"css-what\";\nimport { filters } from \"./filters.js\";\nimport { pseudos, verifyPseudoArgs } from \"./pseudos.js\";\nimport { aliases } from \"./aliases.js\";\nimport { subselects } from \"./subselects.js\";\nexport { filters, pseudos, aliases };\nexport function compilePseudoSelector(next, selector, options, context, compileToken) {\n    var _a;\n    const { name, data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in subselects)) {\n            throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        }\n        return subselects[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) {\n            throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = parse(stringPseudo);\n        return subselects[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        verifyPseudoArgs(userPseudo, name, data, 1);\n        return (elem) => userPseudo(elem, data) && next(elem);\n    }\n    if (name in filters) {\n        return filters[name](next, data, options, context);\n    }\n    if (name in pseudos) {\n        const pseudo = pseudos[name];\n        verifyPseudoArgs(pseudo, name, data, 2);\n        return (elem) => pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n}\n//# sourceMappingURL=index.js.map","import { attributeRules } from \"./attributes.js\";\nimport { compilePseudoSelector } from \"./pseudo-selectors/index.js\";\nimport { SelectorType } from \"css-what\";\nfunction getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    if (parent && adapter.isTag(parent)) {\n        return parent;\n    }\n    return null;\n}\n/*\n * All available rules\n */\nexport function compileGeneralSelector(next, selector, options, context, compileToken) {\n    const { adapter, equals } = options;\n    switch (selector.type) {\n        case SelectorType.PseudoElement: {\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n        case SelectorType.ColumnCombinator: {\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n        case SelectorType.Attribute: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            }\n            if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                selector.name = selector.name.toLowerCase();\n            }\n            return attributeRules[selector.action](next, selector, options);\n        }\n        case SelectorType.Pseudo: {\n            return compilePseudoSelector(next, selector, options, context, compileToken);\n        }\n        // Tags\n        case SelectorType.Tag: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n            }\n            let { name } = selector;\n            if (!options.xmlMode || options.lowerCaseTags) {\n                name = name.toLowerCase();\n            }\n            return function tag(elem) {\n                return adapter.getName(elem) === name && next(elem);\n            };\n        }\n        // Traversal\n        case SelectorType.Descendant: {\n            if (options.cacheResults === false ||\n                typeof WeakSet === \"undefined\") {\n                return function descendant(elem) {\n                    let current = elem;\n                    while ((current = getElementParent(current, adapter))) {\n                        if (next(current)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n            // @ts-expect-error `ElementNode` is not extending object\n            const isFalseCache = new WeakSet();\n            return function cachedDescendant(elem) {\n                let current = elem;\n                while ((current = getElementParent(current, adapter))) {\n                    if (!isFalseCache.has(current)) {\n                        if (adapter.isTag(current) && next(current)) {\n                            return true;\n                        }\n                        isFalseCache.add(current);\n                    }\n                }\n                return false;\n            };\n        }\n        case \"_flexibleDescendant\": {\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                let current = elem;\n                do {\n                    if (next(current))\n                        return true;\n                } while ((current = getElementParent(current, adapter)));\n                return false;\n            };\n        }\n        case SelectorType.Parent: {\n            return function parent(elem) {\n                return adapter\n                    .getChildren(elem)\n                    .some((elem) => adapter.isTag(elem) && next(elem));\n            };\n        }\n        case SelectorType.Child: {\n            return function child(elem) {\n                const parent = adapter.getParent(elem);\n                return parent != null && adapter.isTag(parent) && next(parent);\n            };\n        }\n        case SelectorType.Sibling: {\n            return function sibling(elem) {\n                const siblings = adapter.getSiblings(elem);\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n        case SelectorType.Adjacent: {\n            if (adapter.prevElementSibling) {\n                return function adjacent(elem) {\n                    const previous = adapter.prevElementSibling(elem);\n                    return previous != null && next(previous);\n                };\n            }\n            return function adjacent(elem) {\n                const siblings = adapter.getSiblings(elem);\n                let lastElement;\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling)) {\n                        lastElement = currentSibling;\n                    }\n                }\n                return !!lastElement && next(lastElement);\n            };\n        }\n        case SelectorType.Universal: {\n            if (selector.namespace != null && selector.namespace !== \"*\") {\n                throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            }\n            return next;\n        }\n    }\n}\n//# sourceMappingURL=general.js.map","import { parse, SelectorType } from \"css-what\";\nimport boolbase from \"boolbase\";\nimport sortRules, { isTraversal } from \"./sort.js\";\nimport { compileGeneralSelector } from \"./general.js\";\nimport { ensureIsTag, PLACEHOLDER_ELEMENT, } from \"./pseudo-selectors/subselects.js\";\n/**\n * Compiles a selector to an executable function.\n *\n * @param selector Selector to compile.\n * @param options Compilation options.\n * @param context Optional context for the selector.\n */\nexport function compile(selector, options, context) {\n    const next = compileUnsafe(selector, options, context);\n    return ensureIsTag(next, options.adapter);\n}\nexport function compileUnsafe(selector, options, context) {\n    const token = typeof selector === \"string\" ? parse(selector) : selector;\n    return compileToken(token, options, context);\n}\nfunction includesScopePseudo(t) {\n    return (t.type === SelectorType.Pseudo &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some((data) => data.some(includesScopePseudo)))));\n}\nconst DESCENDANT_TOKEN = { type: SelectorType.Descendant };\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\",\n};\nconst SCOPE_TOKEN = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, { adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!(context === null || context === void 0 ? void 0 : context.every((e) => {\n        const parent = adapter.isTag(e) && adapter.getParent(e);\n        return e === PLACEHOLDER_ELEMENT || (parent && adapter.isTag(parent));\n    }));\n    for (const t of token) {\n        if (t.length > 0 &&\n            isTraversal(t[0]) &&\n            t[0].type !== SelectorType.Descendant) {\n            // Don't continue in else branch\n        }\n        else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        }\n        else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nexport function compileToken(token, options, context) {\n    var _a;\n    token.forEach(sortRules);\n    context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [context]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) {\n        absolutize(token, options, finalContext);\n    }\n    else if (token.some((t) => t.length > 0 && isTraversal(t[0]))) {\n        throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    }\n    let shouldTestNextSiblings = false;\n    const query = token\n        .map((rules) => {\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== SelectorType.Pseudo ||\n                first.name !== \"scope\") {\n                // Ignore\n            }\n            else if (isArrayContext &&\n                second.type === SelectorType.Descendant) {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            }\n            else if (second.type === SelectorType.Adjacent ||\n                second.type === SelectorType.Sibling) {\n                shouldTestNextSiblings = true;\n            }\n        }\n        return compileRules(rules, options, finalContext);\n    })\n        .reduce(reduceRules, boolbase.falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction compileRules(rules, options, context) {\n    var _a;\n    return rules.reduce((previous, rule) => previous === boolbase.falseFunc\n        ? boolbase.falseFunc\n        : compileGeneralSelector(previous, rule, options, context, compileToken), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase.trueFunc);\n}\nfunction reduceRules(a, b) {\n    if (b === boolbase.falseFunc || a === boolbase.trueFunc) {\n        return a;\n    }\n    if (a === boolbase.falseFunc || b === boolbase.trueFunc) {\n        return b;\n    }\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n}\n//# sourceMappingURL=compile.js.map","import * as DomUtils from \"domutils\";\nimport boolbase from \"boolbase\";\nimport { compile as compileRaw, compileUnsafe, compileToken, } from \"./compile.js\";\nimport { getNextSiblings } from \"./pseudo-selectors/subselects.js\";\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n    adapter: DomUtils,\n    equals: defaultEquals,\n};\nfunction convertOptionFormats(options) {\n    var _a, _b, _c, _d;\n    /*\n     * We force one format of options to the other one.\n     */\n    // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options !== null && options !== void 0 ? options : defaultOptions;\n    // @ts-expect-error Same as above.\n    (_a = opts.adapter) !== null && _a !== void 0 ? _a : (opts.adapter = DomUtils);\n    // @ts-expect-error `equals` does not exist on `Options`\n    (_b = opts.equals) !== null && _b !== void 0 ? _b : (opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals);\n    return opts;\n}\nfunction wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        const opts = convertOptionFormats(options);\n        return func(selector, opts, context);\n    };\n}\n/**\n * Compiles the query, returns a function.\n */\nexport const compile = wrapCompile(compileRaw);\nexport const _compileUnsafe = wrapCompile(compileUnsafe);\nexport const _compileToken = wrapCompile(compileToken);\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = compileUnsafe(query, opts, elements);\n        }\n        const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nexport function prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */\n    if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems)\n        ? adapter.removeSubsets(elems)\n        : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n    const elemsLength = elems.length;\n    for (let i = 0; i < elemsLength; i++) {\n        const nextSiblings = getNextSiblings(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nexport const selectAll = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? []\n    : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nexport const selectOne = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? null\n    : options.adapter.findOne(query, elems));\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */\nexport function is(elem, query, options) {\n    const opts = convertOptionFormats(options);\n    return (typeof query === \"function\" ? query : compileRaw(query, opts))(elem);\n}\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */\nexport default selectAll;\n// Export filters, pseudos and aliases to allow users to supply their own.\n/** @deprecated Use the `pseudos` option instead. */\nexport { filters, pseudos, aliases } from \"./pseudo-selectors/index.js\";\n//# sourceMappingURL=index.js.map","export const filterNames = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\",\n]);\nexport function isFilter(s) {\n    if (s.type !== \"pseudo\")\n        return false;\n    if (filterNames.has(s.name))\n        return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) {\n        // Only consider `:not` with embedded filters\n        return s.data.some((s) => s.some(isFilter));\n    }\n    return false;\n}\nexport function getLimit(filter, data, partLimit) {\n    const num = data != null ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;\n        case \"lt\":\n            return isFinite(num)\n                ? num >= 0\n                    ? Math.min(num, partLimit)\n                    : Infinity\n                : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\n//# sourceMappingURL=positionals.js.map","import { isFilter } from \"./positionals.js\";\nexport function getDocumentRoot(node) {\n    while (node.parent)\n        node = node.parent;\n    return node;\n}\nexport function groupSelectors(selectors) {\n    const filteredSelectors = [];\n    const plainSelectors = [];\n    for (const selector of selectors) {\n        if (selector.some(isFilter)) {\n            filteredSelectors.push(selector);\n        }\n        else {\n            plainSelectors.push(selector);\n        }\n    }\n    return [plainSelectors, filteredSelectors];\n}\n//# sourceMappingURL=helpers.js.map","import { parse, SelectorType, isTraversal } from \"css-what\";\nimport { _compileToken as compileToken, prepareContext, } from \"css-select\";\nimport * as DomUtils from \"domutils\";\nimport * as boolbase from \"boolbase\";\nimport { getDocumentRoot, groupSelectors } from \"./helpers.js\";\nimport { isFilter, getLimit, } from \"./positionals.js\";\n// Re-export pseudo extension points\nexport { filters, pseudos, aliases } from \"css-select\";\nconst UNIVERSAL_SELECTOR = {\n    type: SelectorType.Universal,\n    namespace: null,\n};\nconst SCOPE_PSEUDO = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\nexport function is(element, selector, options = {}) {\n    return some([element], selector, options);\n}\nexport function some(elements, selector, options = {}) {\n    if (typeof selector === \"function\")\n        return elements.some(selector);\n    const [plain, filtered] = groupSelectors(parse(selector));\n    return ((plain.length > 0 && elements.some(compileToken(plain, options))) ||\n        filtered.some((sel) => filterBySelector(sel, elements, options).length > 0));\n}\nfunction filterByPosition(filter, elems, data, options) {\n    const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n        case \"lt\":\n            // Already done in `getLimit`\n            return elems;\n        case \"last\":\n            return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) && Math.abs(num) < elems.length\n                ? [num < 0 ? elems[elems.length + num] : elems[num]]\n                : [];\n        case \"gt\":\n            return isFinite(num) ? elems.slice(num + 1) : [];\n        case \"even\":\n            return elems.filter((_, i) => i % 2 === 0);\n        case \"odd\":\n            return elems.filter((_, i) => i % 2 === 1);\n        case \"not\": {\n            const filtered = new Set(filterParsed(data, elems, options));\n            return elems.filter((e) => !filtered.has(e));\n        }\n    }\n}\nexport function filter(selector, elements, options = {}) {\n    return filterParsed(parse(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\nfunction filterParsed(selector, elements, options) {\n    if (elements.length === 0)\n        return [];\n    const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n    let found;\n    if (plainSelectors.length) {\n        const filtered = filterElements(elements, plainSelectors, options);\n        // If there are no filters, just return\n        if (filteredSelectors.length === 0) {\n            return filtered;\n        }\n        // Otherwise, we have to do some filtering\n        if (filtered.length) {\n            found = new Set(filtered);\n        }\n    }\n    for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n        const filteredSelector = filteredSelectors[i];\n        const missing = found\n            ? elements.filter((e) => DomUtils.isTag(e) && !found.has(e))\n            : elements;\n        if (missing.length === 0)\n            break;\n        const filtered = filterBySelector(filteredSelector, elements, options);\n        if (filtered.length) {\n            if (!found) {\n                /*\n                 * If we haven't found anything before the last selector,\n                 * just return what we found now.\n                 */\n                if (i === filteredSelectors.length - 1) {\n                    return filtered;\n                }\n                found = new Set(filtered);\n            }\n            else {\n                filtered.forEach((el) => found.add(el));\n            }\n        }\n    }\n    return typeof found !== \"undefined\"\n        ? (found.size === elements.length\n            ? elements\n            : // Filter elements to preserve order\n                elements.filter((el) => found.has(el)))\n        : [];\n}\nfunction filterBySelector(selector, elements, options) {\n    var _a;\n    if (selector.some(isTraversal)) {\n        /*\n         * Get root node, run selector with the scope\n         * set to all of our nodes.\n         */\n        const root = (_a = options.root) !== null && _a !== void 0 ? _a : getDocumentRoot(elements[0]);\n        const opts = { ...options, context: elements, relativeSelector: false };\n        selector.push(SCOPE_PSEUDO);\n        return findFilterElements(root, selector, opts, true, elements.length);\n    }\n    // Performance optimization: If we don't have to traverse, just filter set.\n    return findFilterElements(elements, selector, options, false, elements.length);\n}\nexport function select(selector, root, options = {}, limit = Infinity) {\n    if (typeof selector === \"function\") {\n        return find(root, selector);\n    }\n    const [plain, filtered] = groupSelectors(parse(selector));\n    const results = filtered.map((sel) => findFilterElements(root, sel, options, true, limit));\n    // Plain selectors can be queried in a single go\n    if (plain.length) {\n        results.push(findElements(root, plain, options, limit));\n    }\n    if (results.length === 0) {\n        return [];\n    }\n    // If there was only a single selector, just return the result\n    if (results.length === 1) {\n        return results[0];\n    }\n    // Sort results, filtering for duplicates\n    return DomUtils.uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n    const filterIndex = selector.findIndex(isFilter);\n    const sub = selector.slice(0, filterIndex);\n    const filter = selector[filterIndex];\n    // If we are at the end of the selector, we can limit the number of elements to retrieve.\n    const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n    /*\n     * Set the number of elements to retrieve.\n     * Eg. for :first, we only have to get a single element.\n     */\n    const limit = getLimit(filter.name, filter.data, partLimit);\n    if (limit === 0)\n        return [];\n    /*\n     * Skip `findElements` call if our selector starts with a positional\n     * pseudo.\n     */\n    const elemsNoLimit = sub.length === 0 && !Array.isArray(root)\n        ? DomUtils.getChildren(root).filter(DomUtils.isTag)\n        : sub.length === 0\n            ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag)\n            : queryForSelector || sub.some(isTraversal)\n                ? findElements(root, [sub], options, limit)\n                : filterElements(root, [sub], options);\n    const elems = elemsNoLimit.slice(0, limit);\n    let result = filterByPosition(filter.name, elems, filter.data, options);\n    if (result.length === 0 || selector.length === filterIndex + 1) {\n        return result;\n    }\n    const remainingSelector = selector.slice(filterIndex + 1);\n    const remainingHasTraversal = remainingSelector.some(isTraversal);\n    if (remainingHasTraversal) {\n        if (isTraversal(remainingSelector[0])) {\n            const { type } = remainingSelector[0];\n            if (type === SelectorType.Sibling ||\n                type === SelectorType.Adjacent) {\n                // If we have a sibling traversal, we need to also look at the siblings.\n                result = prepareContext(result, DomUtils, true);\n            }\n            // Avoid a traversal-first selector error.\n            remainingSelector.unshift(UNIVERSAL_SELECTOR);\n        }\n        options = {\n            ...options,\n            // Avoid absolutizing the selector\n            relativeSelector: false,\n            /*\n             * Add a custom root func, to make sure traversals don't match elements\n             * that aren't a part of the considered tree.\n             */\n            rootFunc: (el) => result.includes(el),\n        };\n    }\n    else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n        options = { ...options, rootFunc: boolbase.trueFunc };\n    }\n    /*\n     * If we have another filter, recursively call `findFilterElements`,\n     * with the `recursive` flag disabled. We only have to look for more\n     * elements when we see a traversal.\n     *\n     * Otherwise,\n     */\n    return remainingSelector.some(isFilter)\n        ? findFilterElements(result, remainingSelector, options, false, totalLimit)\n        : remainingHasTraversal\n            ? // Query existing elements to resolve traversal.\n                findElements(result, [remainingSelector], options, totalLimit)\n            : // If we don't have any more traversals, simply filter elements.\n                filterElements(result, [remainingSelector], options);\n}\nfunction findElements(root, sel, options, limit) {\n    const query = compileToken(sel, options, root);\n    return find(root, query, limit);\n}\nfunction find(root, query, limit = Infinity) {\n    const elems = prepareContext(root, DomUtils, query.shouldTestNextSiblings);\n    return DomUtils.find((node) => DomUtils.isTag(node) && query(node), elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n    const els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n    if (els.length === 0)\n        return els;\n    const query = compileToken(sel, options);\n    return query === boolbase.trueFunc ? els : els.filter(query);\n}\n//# sourceMappingURL=index.js.map","/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { isTag, hasChildren, isDocument, } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort, } from 'domutils';\nconst reSiblingSelector = /^\\s*[+~]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n    if (!selectorOrHaystack) {\n        return this._make([]);\n    }\n    if (typeof selectorOrHaystack !== 'string') {\n        const haystack = isCheerio(selectorOrHaystack)\n            ? selectorOrHaystack.toArray()\n            : [selectorOrHaystack];\n        const context = this.toArray();\n        return this._make(haystack.filter((elem) => context.some((node) => contains(node, elem))));\n    }\n    return this._findBySelector(selectorOrHaystack, Number.POSITIVE_INFINITY);\n}\n/**\n * Find elements by a specific selector.\n *\n * @private\n * @category Traversing\n * @param selector - Selector to filter by.\n * @param limit - Maximum number of elements to match.\n * @returns The found elements.\n */\nexport function _findBySelector(selector, limit) {\n    var _a;\n    const context = this.toArray();\n    const elems = reSiblingSelector.test(selector)\n        ? context\n        : this.children().toArray();\n    const options = {\n        context,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n        // Pass options that are recognized by `cheerio-select`\n        xmlMode: this.options.xmlMode,\n        lowerCaseTags: this.options.lowerCaseTags,\n        lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n        pseudos: this.options.pseudos,\n        quirksMode: this.options.quirksMode,\n    };\n    return this._make(select.select(selector, elems, options, limit));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting\n * filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n    return function (fn, ...postFns) {\n        return function (selector) {\n            var _a;\n            let matched = matchMap(fn, this);\n            if (selector) {\n                matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n            }\n            return this._make(\n            // Post processing is only necessary if there is more than one element.\n            this.length > 1 && matched.length > 1\n                ? postFns.reduce((elems, fn) => fn(elems), matched)\n                : matched);\n        };\n    };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n    let ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value.length > 0)\n            ret = ret.concat(value);\n    }\n    return ret;\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value !== null) {\n            ret.push(value);\n        }\n    }\n    return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @param nextElem - Function that returns the next element.\n * @param postFns - Post processing functions.\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n    // We use a variable here that is used from within the matcher.\n    let matches = null;\n    const innerMatcher = _getMatcher((nextElem, elems) => {\n        const matched = [];\n        domEach(elems, (elem) => {\n            for (let next; (next = nextElem(elem)); elem = next) {\n                // FIXME: `matched` might contain duplicates here and the index is too large.\n                if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length))\n                    break;\n                matched.push(next);\n            }\n        });\n        return matched;\n    })(nextElem, ...postFns);\n    return function (selector, filterSelector) {\n        // Override `matches` variable with the new target.\n        matches =\n            typeof selector === 'string'\n                ? (elem) => select.is(elem, selector, this.options)\n                : selector\n                    ? getFilterFn(selector)\n                    : null;\n        const ret = innerMatcher.call(this, filterSelector);\n        // Set `matches` to `null`, so we don't waste memory.\n        matches = null;\n        return ret;\n    };\n}\nfunction _removeDuplicates(elems) {\n    return elems.length > 1 ? Array.from(new Set(elems)) : elems;\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({ parent }) => (parent && !isDocument(parent) ? parent : null), _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher((elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n        matched.push(elem.parent);\n        elem = elem.parent;\n    }\n    return matched;\n}, uniqueSort, (elems) => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or\n * cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({ parent }) => (parent && !isDocument(parent) ? parent : null), uniqueSort, (elems) => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the\n * DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n    var _a;\n    const set = [];\n    if (!selector) {\n        return this._make(set);\n    }\n    const selectOpts = {\n        xmlMode: this.options.xmlMode,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    };\n    const selectFn = typeof selector === 'string'\n        ? (elem) => select.is(elem, selector, selectOpts)\n        : getFilterFn(selector);\n    domEach(this, (elem) => {\n        if (elem && !isDocument(elem) && !isTag(elem)) {\n            elem = elem.parent;\n        }\n        while (elem && isTag(elem)) {\n            if (selectFn(elem, 0)) {\n                // Do not add duplicate elements to the set\n                if (!set.includes(elem)) {\n                    set.push(elem);\n                }\n                break;\n            }\n            elem = elem.parent;\n        }\n    });\n    return this._make(set);\n}\n/**\n * Gets the next sibling of each selected element, optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher((elem) => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the each selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.next) {\n        elem = elem.next;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil((el) => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of each selected element optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher((elem) => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of each selected element, optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.prev) {\n        elem = elem.prev;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil((el) => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher((elem) => getSiblings(elem).filter((el) => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher((elem) => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n    const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n    return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n    let i = 0;\n    const len = this.length;\n    while (i < len && fn.call(this[i], i, this[i]) !== false)\n        ++i;\n    return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n    let elems = [];\n    for (let i = 0; i < this.length; i++) {\n        const el = this[i];\n        const val = fn.call(el, i, el);\n        if (val != null) {\n            elems = elems.concat(val);\n        }\n    }\n    return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n    if (typeof match === 'function') {\n        return (el, i) => match.call(el, i, el);\n    }\n    if (isCheerio(match)) {\n        return (el) => Array.prototype.includes.call(match, el);\n    }\n    return function (el) {\n        return match === el;\n    };\n}\nexport function filter(match) {\n    var _a;\n    return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n    return typeof match === 'string'\n        ? select.filter(match, nodes, { xmlMode, root })\n        : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Traversing\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n    const nodes = this.toArray();\n    return typeof selector === 'string'\n        ? select.some(nodes.filter(isTag), selector, this.options)\n        : selector\n            ? nodes.some(getFilterFn(selector))\n            : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n    let nodes = this.toArray();\n    if (typeof match === 'string') {\n        const matches = new Set(select.filter(match, nodes, this.options));\n        nodes = nodes.filter((el) => !matches.has(el));\n    }\n    else {\n        const filterFn = getFilterFn(match);\n        nodes = nodes.filter((el, i) => !filterFn(el, i));\n    }\n    return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n    return this.filter(typeof selectorOrHaystack === 'string'\n        ? // Using the `:has` selector here short-circuits searches.\n            `:has(${selectorOrHaystack})`\n        : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1)\n        return this;\n    if (i < 0)\n        i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n    if (i == null) {\n        return this.toArray();\n    }\n    return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n    return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n    let $haystack;\n    let needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    }\n    else if (typeof selectorOrNeedle === 'string') {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias, unicorn/no-this-assignment\n        $haystack = this;\n        needle = isCheerio(selectorOrNeedle)\n            ? selectorOrNeedle[0]\n            : selectorOrNeedle;\n    }\n    return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n    const selection = this._make(other, context);\n    const contents = uniqueSort([...this.get(), ...selection.get()]);\n    return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n    return this.prevObject\n        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n        : this;\n}\n//# sourceMappingURL=traversing.js.map","import { removeElement } from 'domutils';\nimport { Document, isDocument as checkIsDocument, } from 'domhandler';\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\nexport function getParse(parser) {\n    /**\n     * Parse a HTML string or a node.\n     *\n     * @param content - The HTML string or node.\n     * @param options - The parser options.\n     * @param isDocument - If `content` is a document.\n     * @param context - The context node in the DOM tree.\n     * @returns The parsed document node.\n     */\n    return function parse(content, options, isDocument, context) {\n        if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n            content = content.toString();\n        }\n        if (typeof content === 'string') {\n            return parser(content, options, isDocument, context);\n        }\n        const doc = content;\n        if (!Array.isArray(doc) && checkIsDocument(doc)) {\n            // If `doc` is already a root, just return it\n            return doc;\n        }\n        // Add conent to new root element\n        const root = new Document([]);\n        // Update the DOM using the root\n        update(doc, root);\n        return root;\n    };\n}\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\nexport function update(newChilds, parent) {\n    // Normalize\n    const arr = Array.isArray(newChilds) ? newChilds : [newChilds];\n    // Update parent\n    if (parent) {\n        parent.children = arr;\n    }\n    else {\n        parent = null;\n    }\n    // Update neighbors\n    for (let i = 0; i < arr.length; i++) {\n        const node = arr[i];\n        // Cleanly remove existing nodes from their previous structures.\n        if (node.parent && node.parent.children !== arr) {\n            removeElement(node);\n        }\n        if (parent) {\n            node.prev = arr[i - 1] || null;\n            node.next = arr[i + 1] || null;\n        }\n        else {\n            node.prev = node.next = null;\n        }\n        node.parent = parent;\n    }\n    return parent;\n}\n//# sourceMappingURL=parse.js.map","/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nimport { isTag, Text, hasChildren, cloneNode, Document, } from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\nimport { ElementType } from 'htmlparser2';\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if\n * necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nexport function _makeDomArray(elem, clone) {\n    if (elem == null) {\n        return [];\n    }\n    if (typeof elem === 'string') {\n        return this._parse(elem, this.options, false, null).children.slice(0);\n    }\n    if ('length' in elem) {\n        if (elem.length === 1) {\n            return this._makeDomArray(elem[0], clone);\n        }\n        const result = [];\n        for (let i = 0; i < elem.length; i++) {\n            const el = elem[i];\n            if (typeof el === 'object') {\n                if (el == null) {\n                    continue;\n                }\n                if (!('length' in el)) {\n                    result.push(clone ? cloneNode(el, true) : el);\n                    continue;\n                }\n            }\n            result.push(...this._makeDomArray(el, clone));\n        }\n        return result;\n    }\n    return [clone ? cloneNode(elem, true) : elem];\n}\nfunction _insert(concatenator) {\n    return function (...elems) {\n        const lastIdx = this.length - 1;\n        return domEach(this, (el, i) => {\n            if (!hasChildren(el))\n                return;\n            const domSrc = typeof elems[0] === 'function'\n                ? elems[0].call(el, i, this._render(el.children))\n                : elems;\n            const dom = this._makeDomArray(domSrc, i < lastIdx);\n            concatenator(dom, el.children, el);\n        });\n    };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n    var _a, _b;\n    const spliceArgs = [\n        spliceIdx,\n        spliceCount,\n        ...newElems,\n    ];\n    const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n    const next = spliceIdx + spliceCount >= array.length\n        ? null\n        : array[spliceIdx + spliceCount];\n    /*\n     * Before splicing in new elements, ensure they do not already appear in the\n     * current array.\n     */\n    for (let idx = 0; idx < newElems.length; ++idx) {\n        const node = newElems[idx];\n        const oldParent = node.parent;\n        if (oldParent) {\n            const oldSiblings = oldParent.children;\n            const prevIdx = oldSiblings.indexOf(node);\n            if (prevIdx !== -1) {\n                oldParent.children.splice(prevIdx, 1);\n                if (parent === oldParent && spliceIdx > prevIdx) {\n                    spliceArgs[0]--;\n                }\n            }\n        }\n        node.parent = parent;\n        if (node.prev) {\n            node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n        }\n        if (node.next) {\n            node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n        }\n        node.prev = idx === 0 ? prev : newElems[idx - 1];\n        node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n    }\n    if (prev) {\n        prev.next = newElems[0];\n    }\n    if (next) {\n        next.prev = newElems[newElems.length - 1];\n    }\n    return array.splice(...spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nexport function appendTo(target) {\n    const appendTarget = isCheerio(target) ? target : this._make(target);\n    appendTarget.append(this);\n    return this;\n}\n/**\n * Insert every element in the set of matched elements to the beginning of the\n * target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nexport function prependTo(target) {\n    const prependTarget = isCheerio(target) ? target : this._make(target);\n    prependTarget.prepend(this);\n    return this;\n}\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexport const append = _insert((dom, children, parent) => {\n    uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexport const prepend = _insert((dom, children, parent) => {\n    uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n    return function (wrapper) {\n        const lastIdx = this.length - 1;\n        const lastParent = this.parents().last();\n        for (let i = 0; i < this.length; i++) {\n            const el = this[i];\n            const wrap = typeof wrapper === 'function'\n                ? wrapper.call(el, i, el)\n                : typeof wrapper === 'string' && !isHtml(wrapper)\n                    ? lastParent.find(wrapper).clone()\n                    : wrapper;\n            const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n            if (!wrapperDom || !hasChildren(wrapperDom))\n                continue;\n            let elInsertLocation = wrapperDom;\n            /*\n             * Find the deepest child. Only consider the first tag child of each node\n             * (ignore text); stop if no children are found.\n             */\n            let j = 0;\n            while (j < elInsertLocation.children.length) {\n                const child = elInsertLocation.children[j];\n                if (isTag(child)) {\n                    elInsertLocation = child;\n                    j = 0;\n                }\n                else {\n                    j++;\n                }\n            }\n            insert(el, elInsertLocation, [wrapperDom]);\n        }\n        return this;\n    };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the\n *   selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexport const wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n    const { parent } = el;\n    if (!parent)\n        return;\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    updateDOM([el], elInsertLocation);\n    /*\n     * The previous operation removed the current element from the `siblings`\n     * array, so the `dom` array can be inserted without removing any\n     * additional elements.\n     */\n    uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexport const wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n    if (!hasChildren(el))\n        return;\n    updateDOM(el.children, elInsertLocation);\n    updateDOM(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>',\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>',\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be\n *   unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nexport function unwrap(selector) {\n    this.parent(selector)\n        .not('body')\n        .each((_, el) => {\n        this._make(el).replaceWith(el.children);\n    });\n    return this;\n}\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>',\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>',\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nexport function wrapAll(wrapper) {\n    const el = this[0];\n    if (el) {\n        const wrap = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n        // If html is given as wrapper, wrap may contain text elements\n        let elInsertLocation;\n        for (let i = 0; i < wrap.length; i++) {\n            if (wrap[i].type === ElementType.Tag) {\n                elInsertLocation = wrap[i];\n            }\n        }\n        let j = 0;\n        /*\n         * Find the deepest child. Only consider the first tag child of each node\n         * (ignore text); stop if no children are found.\n         */\n        while (elInsertLocation && j < elInsertLocation.children.length) {\n            const child = elInsertLocation.children[j];\n            if (child.type === ElementType.Tag) {\n                elInsertLocation = child;\n                j = 0;\n            }\n            else {\n                j++;\n            }\n        }\n        if (elInsertLocation)\n            this._make(elInsertLocation).append(this);\n    }\n    return this;\n}\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nexport function after(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        if (!hasChildren(el) || !el.parent) {\n            return;\n        }\n        const siblings = el.parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index === -1)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element after `this` element\n        uniqueSplice(siblings, index + 1, 0, dom, el.parent);\n    });\n}\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nexport function insertAfter(target) {\n    if (typeof target === 'string') {\n        target = this._make(target);\n    }\n    this.remove();\n    const clones = [];\n    for (const el of this._makeDomArray(target)) {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            continue;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index === -1)\n            continue;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    }\n    return this._make(clones);\n}\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nexport function before(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        if (!hasChildren(el) || !el.parent) {\n            return;\n        }\n        const siblings = el.parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index === -1)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element before `el` element\n        uniqueSplice(siblings, index, 0, dom, el.parent);\n    });\n}\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nexport function insertBefore(target) {\n    const targetArr = this._make(target);\n    this.remove();\n    const clones = [];\n    domEach(targetArr, (el) => {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index === -1)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nexport function remove(selector) {\n    // Filter if we have selector\n    const elems = selector ? this.filter(selector) : this;\n    domEach(elems, (el) => {\n        removeElement(el);\n        el.prev = el.next = el.parent = null;\n    });\n    return this;\n}\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nexport function replaceWith(content) {\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const cont = typeof content === 'function' ? content.call(el, i, el) : content;\n        const dom = this._makeDomArray(cont);\n        /*\n         * In the case that `dom` contains nodes that already exist in other\n         * structures, ensure those nodes are properly removed.\n         */\n        updateDOM(dom, null);\n        const index = siblings.indexOf(el);\n        // Completely remove old element\n        uniqueSplice(siblings, index, 1, dom, parent);\n        if (!dom.includes(el)) {\n            el.parent = el.prev = el.next = null;\n        }\n    });\n}\n/**\n * Removes all children from each item in the selection. Text nodes and comment\n * nodes are left as is.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nexport function empty() {\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        for (const child of el.children) {\n            child.next = child.prev = child.parent = null;\n        }\n        el.children.length = 0;\n    });\n}\nexport function html(str) {\n    if (str === undefined) {\n        const el = this[0];\n        if (!el || !hasChildren(el))\n            return null;\n        return this._render(el.children);\n    }\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        for (const child of el.children) {\n            child.next = child.prev = child.parent = null;\n        }\n        const content = isCheerio(str)\n            ? str.toArray()\n            : this._parse(`${str}`, this.options, false, el).children;\n        updateDOM(content, el);\n    });\n}\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nexport function toString() {\n    return this._render(this);\n}\nexport function text(str) {\n    // If `str` is undefined, act as a \"getter\"\n    if (str === undefined) {\n        return staticText(this);\n    }\n    if (typeof str === 'function') {\n        // Function support\n        return domEach(this, (el, i) => this._make(el).text(str.call(el, i, staticText([el]))));\n    }\n    // Append text node to each selected elements\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        for (const child of el.children) {\n            child.next = child.prev = child.parent = null;\n        }\n        const textNode = new Text(`${str}`);\n        updateDOM(textNode, el);\n    });\n}\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nexport function clone() {\n    const clone = Array.prototype.map.call(this.get(), (el) => cloneNode(el, true));\n    // Add a root node around the cloned nodes\n    const root = new Document(clone);\n    for (const node of clone) {\n        node.parent = root;\n    }\n    return this._make(clone);\n}\n//# sourceMappingURL=manipulation.js.map","import { domEach } from '../utils.js';\nimport { isTag } from 'domhandler';\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css(prop, val) {\n    if ((prop != null && val != null) ||\n        // When `prop` is a \"plain\" object\n        (typeof prop === 'object' && !Array.isArray(prop))) {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                // `prop` can't be an array here anymore.\n                setCss(el, prop, val, i);\n            }\n        });\n    }\n    if (this.length === 0) {\n        return undefined;\n    }\n    return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n    if (typeof prop === 'string') {\n        const styles = getCss(el);\n        const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n        if (val === '') {\n            delete styles[prop];\n        }\n        else if (val != null) {\n            styles[prop] = val;\n        }\n        el.attribs['style'] = stringify(styles);\n    }\n    else if (typeof prop === 'object') {\n        const keys = Object.keys(prop);\n        for (let i = 0; i < keys.length; i++) {\n            const k = keys[i];\n            setCss(el, k, prop[k], i);\n        }\n    }\n}\nfunction getCss(el, prop) {\n    if (!el || !isTag(el))\n        return;\n    const styles = parse(el.attribs['style']);\n    if (typeof prop === 'string') {\n        return styles[prop];\n    }\n    if (Array.isArray(prop)) {\n        const newStyles = {};\n        for (const item of prop) {\n            if (styles[item] != null) {\n                newStyles[item] = styles[item];\n            }\n        }\n        return newStyles;\n    }\n    return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n    return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n    styles = (styles || '').trim();\n    if (!styles)\n        return {};\n    const obj = {};\n    let key;\n    for (const str of styles.split(';')) {\n        const n = str.indexOf(':');\n        // If there is no :, or if it is the first/last character, add to the previous item's value\n        if (n < 1 || n === str.length - 1) {\n            const trimmed = str.trimEnd();\n            if (trimmed.length > 0 && key !== undefined) {\n                obj[key] += `;${trimmed}`;\n            }\n        }\n        else {\n            key = str.slice(0, n).trim();\n            obj[key] = str.slice(n + 1).trim();\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=css.js.map","import { isTag } from 'domhandler';\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nconst submittableSelector = 'input,select,textarea,keygen';\nconst r20 = /%20/g;\nconst rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nexport function serialize() {\n    // Convert form elements into name/value objects\n    const arr = this.serializeArray();\n    // Serialize each element into a key/value string\n    const retArr = arr.map((data) => `${encodeURIComponent(data.name)}=${encodeURIComponent(data.value)}`);\n    // Return the resulting serialization\n    return retArr.join('&').replace(r20, '+');\n}\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nexport function serializeArray() {\n    // Resolve all form elements from either forms or collections of form elements\n    return this.map((_, elem) => {\n        const $elem = this._make(elem);\n        if (isTag(elem) && elem.name === 'form') {\n            return $elem.find(submittableSelector).toArray();\n        }\n        return $elem.filter(submittableSelector).toArray();\n    })\n        .filter(\n    // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n    '[name!=\"\"]:enabled' +\n        // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        ':not(:submit, :button, :image, :reset, :file)' +\n        // And are either checked/don't have a checkable state\n        ':matches([checked], :not(:checkbox, :radio))')\n        .map((_, elem) => {\n        var _a;\n        const $elem = this._make(elem);\n        const name = $elem.attr('name'); // We have filtered for elements with a name before.\n        // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n        const value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(value)) {\n            return value.map((val) => \n            /*\n             * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n             * These can occur inside of `<textarea>'s`\n             */\n            ({ name, value: val.replace(rCRLF, '\\r\\n') }));\n        }\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        return { name, value: value.replace(rCRLF, '\\r\\n') };\n    })\n        .toArray();\n}\n//# sourceMappingURL=forms.js.map","function getExtractDescr(descr) {\n    var _a;\n    if (typeof descr === 'string') {\n        return { selector: descr, value: 'textContent' };\n    }\n    return {\n        selector: descr.selector,\n        value: (_a = descr.value) !== null && _a !== void 0 ? _a : 'textContent',\n    };\n}\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract(map) {\n    const ret = {};\n    for (const key in map) {\n        const descr = map[key];\n        const isArray = Array.isArray(descr);\n        const { selector, value } = getExtractDescr(isArray ? descr[0] : descr);\n        const fn = typeof value === 'function'\n            ? value\n            : typeof value === 'string'\n                ? (el) => this._make(el).prop(value)\n                : (el) => this._make(el).extract(value);\n        if (isArray) {\n            ret[key] = this._findBySelector(selector, Number.POSITIVE_INFINITY)\n                .map((_, el) => fn(el, key, ret))\n                .get();\n        }\n        else {\n            const $ = this._findBySelector(selector, 1);\n            ret[key] = $.length > 0 ? fn($[0], key, ret) : undefined;\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=extract.js.map","import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nimport * as Extract from './api/extract.js';\n/**\n * The cheerio class is the central class of the library. It wraps a set of\n * elements and provides an API for traversing, modifying, and interacting with\n * the set.\n *\n * Loading a document will return the Cheerio class bound to the root element of\n * the document. The class will be instantiated when querying the document (when\n * calling `$('selector')`).\n *\n * @example This is the HTML markup we will be using in all of the API examples:\n *\n * ```html\n * <ul id=\"fruits\">\n *   <li class=\"apple\">Apple</li>\n *   <li class=\"orange\">Orange</li>\n *   <li class=\"pear\">Pear</li>\n * </ul>\n * ```\n */\nexport class Cheerio {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use `$.load` instead.\n     *\n     * @private\n     * @param elements - The new selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */\n    constructor(elements, root, options) {\n        this.length = 0;\n        this.options = options;\n        this._root = root;\n        if (elements) {\n            for (let idx = 0; idx < elements.length; idx++) {\n                this[idx] = elements[idx];\n            }\n            this.length = elements.length;\n        }\n    }\n}\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms, Extract);\n//# sourceMappingURL=cheerio.js.map","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","/**\n * AIdeas - Proxy Service\n * Gestisce le richieste proxy per estrazione metadati\n */\n\nimport * as cheerio from 'cheerio';\n\nexport default class ProxyService {\n  constructor() {\n    // Lista di proxy pubblici disponibili (più robusta)\n    this.proxies = [\n      'https://api.allorigins.win/raw?url=',\n      'https://cors-anywhere.herokuapp.com/',\n      'https://thingproxy.freeboard.io/fetch/',\n      'https://cors.bridged.cc/',\n      'https://api.codetabs.com/v1/proxy?quest=',\n      'https://corsproxy.io/?',\n      'https://cors-anywhere.1d4s.me/',\n      'https://cors-anywhere.herokuapp.com/'\n    ];\n    \n    this.currentProxyIndex = 0;\n  }\n\n  /**\n   * Recupera contenuto usando proxy rotanti\n   */\n  async fetchWithFallback(url, options = {}) {\n    return this.fetchWithProxy(url);\n  }\n\n  /**\n   * Recupera contenuto HTML usando proxy rotanti\n   */\n  async fetchWithProxy(url) {\n    let lastError = null;\n\n    // Prova tutti i proxy disponibili\n    for (let i = 0; i < this.proxies.length; i++) {\n      const proxyIndex = (this.currentProxyIndex + i) % this.proxies.length;\n      const proxy = this.proxies[proxyIndex];\n\n      try {\n        const response = await fetch(proxy + encodeURIComponent(url), {\n          method: 'GET',\n          headers: {\n            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n            'Accept-Language': 'en-US,en;q=0.5',\n            'Accept-Encoding': 'gzip, deflate',\n            'DNT': '1',\n            'Connection': 'keep-alive',\n            'Upgrade-Insecure-Requests': '1',\n            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'\n          },\n          timeout: 10000\n        });\n\n        if (response.ok) {\n          const content = await response.text();\n          \n          // Verifica che sia HTML valido\n          if (content.includes('<html') || content.includes('<head') || content.includes('<body')) {\n            this.currentProxyIndex = proxyIndex; // Aggiorna proxy di successo\n            return content;\n          }\n        }\n      } catch (error) {\n        console.log(`Proxy ${proxyIndex} fallito:`, error.message);\n        lastError = error;\n      }\n    }\n\n    // Se tutti i proxy falliscono, prova approccio diretto\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n          'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'\n        }\n      });\n\n      if (response.ok) {\n        return await response.text();\n      }\n    } catch (error) {\n      console.log('Anche l\\'approccio diretto è fallito:', error);\n    }\n\n    throw lastError || new Error('Impossibile recuperare il contenuto');\n  }\n\n  /**\n   * Estrae metadati da una URL usando il proxy locale\n   */\n  async extractMetadata(url) {\n    try {\n      // Ottieni la lingua dalle impostazioni o usa italiano di default\n      const userLang = localStorage.getItem('aideas-language') || 'it';\n      const response = await fetch(`http://localhost:4000/extract?url=${encodeURIComponent(url)}&lang=${userLang}`);\n      if (!response.ok) throw new Error('Proxy meta fallito');\n      return await response.json();\n    } catch (error) {\n      // Fallback: solo dominio e favicon\n      const domain = new URL(url).hostname;\n      return {\n        title: domain,\n        description: `App web da ${domain}`,\n        icon: `https://www.google.com/s2/favicons?domain=${domain}&sz=64`\n      };\n    }\n  }\n\n  /**\n   * Estrae la migliore icona disponibile\n   */\n  extractBestIcon($, baseUrl) {\n    // Priorità delle icone\n    const iconSelectors = [\n      'link[rel=\"apple-touch-icon\"][sizes=\"180x180\"]',\n      'link[rel=\"apple-touch-icon\"][sizes=\"152x152\"]',\n      'link[rel=\"apple-touch-icon\"][sizes=\"144x144\"]',\n      'link[rel=\"apple-touch-icon\"][sizes=\"120x120\"]',\n      'link[rel=\"apple-touch-icon\"]',\n      'link[rel=\"icon\"][type=\"image/png\"][sizes=\"32x32\"]',\n      'link[rel=\"icon\"][type=\"image/png\"][sizes=\"16x16\"]',\n      'link[rel=\"icon\"][type=\"image/svg+xml\"]',\n      'link[rel=\"shortcut icon\"]',\n      'link[rel=\"icon\"]'\n    ];\n\n    for (const selector of iconSelectors) {\n      const icon = $(selector).attr('href');\n      if (icon) {\n        return new URL(icon, baseUrl).href;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Estrae il titolo della pagina\n   */\n  extractTitle(html) {\n    const patterns = [\n      /<title[^>]*>([^<]+)<\\/title>/i,\n      /<meta[^>]*property=[\"']og:title[\"'][^>]*content=[\"']([^\"']+)[\"']/i,\n      /<meta[^>]*content=[\"']([^\"']+)[\"'][^>]*property=[\"']og:title[\"']/i\n    ];\n    \n    for (const pattern of patterns) {\n      const match = html.match(pattern);\n      if (match) {\n        const title = match[1].trim();\n        if (title && title.length > 0) {\n          return title;\n        }\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Estrae la descrizione dai meta tag\n   */\n  extractDescription(html) {\n    const patterns = [\n      /<meta[^>]*name=[\"']description[\"'][^>]*content=[\"']([^\"']+)[\"']/i,\n      /<meta[^>]*content=[\"']([^\"']+)[\"'][^>]*name=[\"']description[\"']/i,\n      /<meta[^>]*property=[\"']og:description[\"'][^>]*content=[\"']([^\"']+)[\"']/i,\n      /<meta[^>]*content=[\"']([^\"']+)[\"'][^>]*property=[\"']og:description[\"']/i\n    ];\n    \n    for (const pattern of patterns) {\n      const match = html.match(pattern);\n      if (match) {\n        const desc = match[1].trim();\n        if (desc && desc.length > 0) {\n          return desc;\n        }\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Estrae l'icona/favicon\n   */\n  extractIcon(html, baseUrl) {\n    const patterns = [\n      /<link[^>]*rel=[\"'](?:icon|shortcut icon)[\"'][^>]*href=[\"']([^\"']+)[\"']/i,\n      /<link[^>]*href=[\"']([^\"']+)[\"'][^>]*rel=[\"'](?:icon|shortcut icon)[\"']/i,\n      /<link[^>]*rel=[\"']apple-touch-icon[\"'][^>]*href=[\"']([^\"']+)[\"']/i,\n      /<link[^>]*href=[\"']([^\"']+)[\"'][^>]*rel=[\"']apple-touch-icon[\"']/i\n    ];\n    \n    for (const pattern of patterns) {\n      const match = html.match(pattern);\n      if (match) {\n        try {\n          const iconUrl = new URL(match[1], baseUrl).href;\n          console.log('Icona trovata:', iconUrl);\n          return iconUrl;\n        } catch (e) {\n          console.log('URL icona non valido:', match[1]);\n        }\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Estrae specificamente l'apple-touch-icon\n   */\n  extractAppleTouchIcon(html, baseUrl) {\n    const patterns = [\n      /<link[^>]*rel=[\"']apple-touch-icon[\"'][^>]*href=[\"']([^\"']+)[\"']/i,\n      /<link[^>]*href=[\"']([^\"']+)[\"'][^>]*rel=[\"']apple-touch-icon[\"']/i,\n      /<link[^>]*rel=[\"']apple-touch-icon-precomposed[\"'][^>]*href=[\"']([^\"']+)[\"']/i,\n      /<link[^>]*href=[\"']([^\"']+)[\"'][^>]*rel=[\"']apple-touch-icon-precomposed[\"']/i\n    ];\n    \n    for (const pattern of patterns) {\n      const match = html.match(pattern);\n      if (match) {\n        try {\n          const iconUrl = new URL(match[1], baseUrl).href;\n          console.log('Apple Touch Icon trovata:', iconUrl);\n          return iconUrl;\n        } catch (e) {\n          console.log('URL apple-touch-icon non valido:', match[1]);\n        }\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Estrae le keywords\n   */\n  extractKeywords(html) {\n    const match = html.match(/<meta[^>]*name=[\"']keywords[\"'][^>]*content=[\"']([^\"']+)[\"']/i);\n    return match ? match[1].trim() : null;\n  }\n\n  /**\n   * Estrae l'autore\n   */\n  extractAuthor(html) {\n    const match = html.match(/<meta[^>]*name=[\"']author[\"'][^>]*content=[\"']([^\"']+)[\"']/i);\n    return match ? match[1].trim() : null;\n  }\n\n  /**\n   * Estrae l'immagine Open Graph\n   */\n  extractOGImage(html) {\n    const match = html.match(/<meta[^>]*property=[\"']og:image[\"'][^>]*content=[\"']([^\"']+)[\"']/i);\n    return match ? match[1].trim() : null;\n  }\n\n  /**\n   * Estrae il titolo Open Graph\n   */\n  extractOGTitle(html) {\n    const match = html.match(/<meta[^>]*property=[\"']og:title[\"'][^>]*content=[\"']([^\"']+)[\"']/i);\n    return match ? match[1].trim() : null;\n  }\n\n  /**\n   * Estrae la descrizione Open Graph\n   */\n  extractOGDescription(html) {\n    const match = html.match(/<meta[^>]*property=[\"']og:description[\"'][^>]*content=[\"']([^\"']+)[\"']/i);\n    return match ? match[1].trim() : null;\n  }\n\n  /**\n   * Testa la connettività di un proxy\n   */\n  async testProxy(proxyUrl) {\n    try {\n      const response = await fetch(proxyUrl + encodeURIComponent('https://httpbin.org/ip'), {\n        method: 'GET',\n        timeout: 5000\n      });\n      return response.ok;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Ottiene informazioni sui proxy disponibili\n   */\n  async getProxyStatus() {\n    const status = {};\n    \n    for (let i = 0; i < this.proxies.length; i++) {\n      const proxy = this.proxies[i];\n      status[proxy] = await this.testProxy(proxy);\n    }\n    \n    return status;\n  }\n} ","/**\n * AIdeas - App Importer Component\n * Gestisce l'importazione di applicazioni da vari formati\n */\n\nimport StorageService from '../services/StorageService.js';\nimport ProxyService from '../services/ProxyService.js';\nimport { showToast, showModal, hideModal, escapeHtml, generateId, isValidUrl, extractDomain, formatFileSize } from '../utils/helpers.js';\nimport JSZip from 'jszip';\n\n/**\n * Classe per gestire l'importazione delle applicazioni\n */\nexport default class AppImporter {\n  constructor() {\n    this.maxFileSize = 50 * 1024 * 1024; // 50MB\n    this.supportedFormats = ['zip'];\n    this.categories = [\n      'productivity', 'entertainment', 'communication', 'development', \n      'design', 'finance', 'health', 'news', 'shopping', 'travel',\n      'ai', 'social', 'education', 'business', 'utility', 'pwa'\n    ];\n\n    // Inizializza il proxy service\n    this.proxyService = new ProxyService();\n\n    // Bind methods - solo se esistono\n    if (this.init) this.init = this.init.bind(this);\n    if (this.showModal) this.showModal = this.showModal.bind(this);\n    if (this.importFromZip) this.importFromZip = this.importFromZip.bind(this);\n    if (this.importFromUrl) this.importFromUrl = this.importFromUrl.bind(this);\n    if (this.importFromGitHub) this.importFromGitHub = this.importFromGitHub.bind(this);\n    if (this.validateAppData) this.validateAppData = this.validateAppData.bind(this);\n    if (this.extractAppMetadata) this.extractAppMetadata = this.extractAppMetadata.bind(this);\n    if (this.setupDropZone) this.setupDropZone = this.setupDropZone.bind(this);\n  }\n\n  /**\n   * Inizializza l'importatore\n   */\n  async init() {\n    console.log('🔧 Inizializzazione AppImporter...');\n    this.setupDropZone();\n    this.setupKeyboardShortcuts();\n  }\n\n  /**\n   * Mostra il modal di importazione\n   */\n  showModal() {\n    const modalContent = this.createImportModal();\n    showModal('app-import-modal', modalContent, {\n      size: 'modal-xl',\n      disableBackdropClose: false\n    });\n\n    // Setup event listeners dopo che il modal è stato creato\n    setTimeout(() => {\n      this.setupModalEventListeners();\n      \n      // Imposta il form HTML come attivo di default\n      const htmlForm = document.getElementById('form-html');\n      if (htmlForm) {\n        htmlForm.classList.add('active');\n      }\n      \n      // Imposta il pulsante HTML come attivo di default\n      const htmlBtn = document.querySelector('[data-section=\"html\"]');\n      if (htmlBtn) {\n        htmlBtn.classList.add('active');\n      }\n    }, 100);\n  }\n\n  /**\n   * Crea il contenuto del modal di importazione\n   */\n  createImportModal() {\n    return `\n      <div class=\"modal-header\">\n        <h2>\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"header-icon\">\n            <path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"/>\n          </svg>\n          Aggiungi Nuova App\n        </h2>\n        <button class=\"modal-close\">&times;</button>\n      </div>\n      \n      <div class=\"modal-body\">\n        <!-- Import Layout (come settings) -->\n        <div class=\"settings-layout\">\n          <!-- Import Navigation -->\n          <nav class=\"settings-nav\">\n            <ul class=\"settings-nav-list\">\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary active\" type=\"button\" data-section=\"html\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\n                  </svg>\n                  File HTML\n                </button>\n              </li>\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary\" type=\"button\" data-section=\"url\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M3.9,12C3.9,10.29 5.29,8.9 7,8.9H11V7H7C4.24,7 2,9.24 2,12C2,14.76 4.24,17 7,17H11V15.1H7C5.29,15.1 3.9,13.71 3.9,12M8,13H16V11H8V13M17,7H13V8.9H17C18.71,8.9 20.1,10.29 20.1,12C20.1,13.71 18.71,15.1 17,15.1H13V17H17C19.76,17 22,14.76 22,12C22,9.24 19.76,7 17,7Z\"/>\n                  </svg>\n                  Importa da URL\n                </button>\n              </li>\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary\" type=\"button\" data-section=\"github\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"/>\n                  </svg>\n                  Repository GitHub\n                </button>\n              </li>\n            </ul>\n          </nav>\n\n          <!-- Import Content -->\n          <div class=\"settings-content\">\n          \n            <!-- HTML Import Section -->\n            <div class=\"settings-section active\" id=\"section-html\">\n              <h3>Importa da File HTML</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Carica File</h4>\n                \n                <div class=\"setting-item\">\n                  <label for=\"html-file-input\">File HTML</label>\n                  <input type=\"file\" id=\"html-file-input\" accept=\".html,text/html\" class=\"form-input\">\n                  <p class=\"setting-description\">Carica un file HTML standalone (senza risorse esterne)</p>\n                </div>\n              </div>\n            </div>\n\n            <!-- URL Import Section -->\n            <div class=\"settings-section\" id=\"section-url\">\n              <h3>Importa da URL</h3>\n              \n              <div class=\"settings-group\">\n                <h4>URL dell'Applicazione</h4>\n              \n                <div class=\"setting-item\">\n                  <label for=\"url-input\">URL</label>\n                  <div class=\"input-with-button\">\n                    <input \n                      type=\"url\" \n                      id=\"url-input\" \n                      class=\"form-input\" \n                      placeholder=\"https://esempio.com/app\"\n                      required\n                    >\n                    <button class=\"btn btn-secondary\" id=\"test-url-btn\">Test</button>\n                  </div>\n                  <p class=\"setting-description\">Inserisci l'URL dell'applicazione web. Il sistema rileverà automaticamente se è una PWA o un sito normale.</p>\n                </div>\n              \n                <div class=\"setting-item\" id=\"url-preview-container\" style=\"display: none;\">\n                  <label>Anteprima del sito</label>\n                  <div class=\"url-preview\" id=\"url-preview\">\n                    <div class=\"preview-content\">\n                      <div class=\"preview-info\">\n                        <h5>Anteprima del sito:</h5>\n                        <div class=\"preview-details\">\n                          <div class=\"preview-favicon\">🌐</div>\n                          <div class=\"preview-text\">\n                            <p class=\"preview-title\">Caricamento...</p>\n                            <p class=\"preview-url\"></p>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"preview-status\">\n                        <span class=\"status-badge\">Verificando...</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- GitHub Import Section -->\n            <div class=\"settings-section\" id=\"section-github\">\n              <h3>Importa da GitHub</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Repository GitHub</h4>\n              \n                <div class=\"setting-item\">\n                  <label for=\"github-url-input\">URL del Repository</label>\n                  <input \n                    type=\"url\" \n                    id=\"github-url-input\" \n                    class=\"form-input\" \n                    placeholder=\"https://github.com/username/repository\"\n                    required\n                  >\n                  <p class=\"setting-description\">Inserisci l'URL di un repository GitHub. Il sistema cercherà automaticamente i file di build o demo.</p>\n                </div>\n              \n                <div class=\"setting-item\" id=\"github-preview-container\" style=\"display: none;\">\n                  <label>Anteprima del Repository</label>\n                  <div class=\"github-preview\" id=\"github-preview\">\n                    <div class=\"preview-content\">\n                      <div class=\"preview-info\">\n                        <h5>Repository GitHub:</h5>\n                        <div class=\"preview-details\">\n                          <div class=\"preview-favicon\">📦</div>\n                          <div class=\"preview-text\">\n                            <p class=\"preview-title\">Caricamento...</p>\n                            <p class=\"preview-description\"></p>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"preview-status\">\n                        <span class=\"status-badge\">Verificando...</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- App Metadata Section (Comune per tutti i tipi) -->\n            <div class=\"settings-section\" id=\"section-metadata\" style=\"display: none;\">\n              <h3>Informazioni App</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Dettagli Base</h4>\n              \n                <div class=\"setting-item\">\n                  <label for=\"app-name\">Nome App *</label>\n                  <input \n                    type=\"text\" \n                    id=\"app-name\" \n                    class=\"form-input\" \n                    placeholder=\"Il mio Tool Fantastico\"\n                    required\n                    maxlength=\"50\"\n                  >\n                  <p class=\"setting-description\">Nome dell'applicazione che verrà visualizzato</p>\n                </div>\n              \n                <div class=\"setting-item\">\n                  <label for=\"app-version\">Versione</label>\n                  <input \n                    type=\"text\" \n                    id=\"app-version\" \n                    class=\"form-input\" \n                    placeholder=\"1.0.0\"\n                    value=\"1.0.0\"\n                  >\n                  <p class=\"setting-description\">Versione dell'applicazione</p>\n                </div>\n              \n                <div class=\"setting-item\">\n                  <label for=\"app-description\">Descrizione</label>\n                  <textarea \n                    id=\"app-description\" \n                    class=\"form-input\" \n                    rows=\"3\"\n                    placeholder=\"Descrivi cosa fa questa app...\"\n                    maxlength=\"200\"\n                  ></textarea>\n                  <div class=\"char-count\">\n                    <span id=\"desc-char-count\">0</span>/200\n                  </div>\n                  <p class=\"setting-description\">Breve descrizione dell'applicazione</p>\n                </div>\n              </div>\n              \n              <div class=\"settings-group\">\n                <h4>Categorizzazione</h4>\n                \n                <div class=\"setting-item\">\n                  <label for=\"app-category\">Categoria</label>\n                  <select id=\"app-category\" class=\"form-input\">\n                    <option value=\"\">Seleziona categoria...</option>\n                    ${this.categories.map(cat => \n                      `<option value=\"${cat}\">${this.getCategoryLabel(cat)}</option>`\n                    ).join('')}\n                  </select>\n                  <p class=\"setting-description\">Categoria per organizzare le app</p>\n                </div>\n              \n                <div class=\"setting-item\">\n                  <label for=\"app-tags\">Tag (separati da virgola)</label>\n                  <input \n                    type=\"text\" \n                    id=\"app-tags\" \n                    class=\"form-input\" \n                    placeholder=\"ai, produttività, strumento\"\n                  >\n                  <p class=\"setting-description\">Tag per facilitare la ricerca</p>\n                </div>\n              </div>\n\n              <div class=\"settings-group\">\n                <h4>Personalizzazione</h4>\n                \n                <div class=\"setting-item\">\n                  <label for=\"app-icon\">Icona App (URL o carica file)</label>\n                  <div class=\"icon-input-group\">\n                    <input \n                      type=\"url\" \n                      id=\"app-icon\" \n                      class=\"form-input\" \n                      placeholder=\"https://esempio.com/icon.png\"\n                    >\n                    <button class=\"btn btn-secondary\" id=\"upload-icon-btn\">Carica</button>\n                    <input type=\"file\" id=\"icon-file-input\" accept=\"image/*\" style=\"display: none;\">\n                  </div>\n                  <div class=\"icon-preview\" id=\"icon-preview\" style=\"display: none;\">\n                    <img src=\"\" alt=\"Preview icona\" id=\"icon-preview-img\">\n                  </div>\n                  <p class=\"setting-description\">Icona personalizzata per l'app</p>\n                </div>\n              \n                <div class=\"setting-item\">\n                  <label for=\"app-launch-mode\">Modalità di apertura</label>\n                  <select id=\"app-launch-mode\" class=\"form-input\">\n                    <option value=\"\">Usa impostazione globale</option>\n                    <option value=\"iframe\">Sempre in finestra modale</option>\n                    <option value=\"newpage\">Sempre in nuova pagina</option>\n                  </select>\n                  <p class=\"setting-description\">\n                    Scegli come questa app dovrebbe aprirsi di default. \n                    <span id=\"current-default-mode\" style=\"font-weight: bold; color: #2563eb;\"></span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"modal-footer\">\n        <div class=\"import-progress\" id=\"import-progress\" style=\"display: none;\">\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" id=\"progress-fill\"></div>\n          </div>\n          <p class=\"progress-text\" id=\"progress-text\">Importazione in corso...</p>\n        </div>\n        \n        <div class=\"modal-actions\" id=\"modal-actions\">\n          <button class=\"btn btn-secondary\" id=\"cancel-import\" type=\"button\">Annulla</button>\n          <button class=\"btn btn-primary\" id=\"start-import\" type=\"button\" disabled>\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"/>\n            </svg>\n            Importa App\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Setup event listeners per il modal\n   */\n  setupModalEventListeners() {\n    const modal = document.getElementById('app-import-modal');\n    if (!modal) return;\n\n    // Import section navigation (come settings)\n    const navButtons = modal.querySelectorAll('.settings-nav-btn');\n    const sections = modal.querySelectorAll('.settings-section');\n\n    navButtons.forEach(btn => {\n      btn.addEventListener('click', () => {\n        const sectionName = btn.dataset.section;\n        \n        // Aggiorna UI buttons\n        navButtons.forEach(b => b.classList.remove('active'));\n        btn.classList.add('active');\n        \n        // Mostra sezione corrispondente\n        sections.forEach(section => {\n          section.style.display = 'none';\n          section.classList.remove('active');\n          if (section.id === `section-${sectionName}`) {\n            section.style.display = 'block';\n            section.classList.add('active');\n          }\n        });\n      });\n    });\n\n    // Setup form specifici\n    this.setupHtmlImport(modal);\n    this.setupUrlImport(modal);\n    this.setupGitHubImport(modal);\n    this.setupMetadataForm(modal);\n\n    // Start import button\n    const startImportBtn = modal.querySelector('#start-import');\n    startImportBtn?.addEventListener('click', () => {\n      this.startImport();\n    });\n\n    // Cancel button\n    const cancelBtn = modal.querySelector('#cancel-import');\n    cancelBtn?.addEventListener('click', () => {\n      hideModal('app-import-modal');\n    });\n\n    // Close button\n    const closeBtn = modal.querySelector('.modal-close');\n    closeBtn?.addEventListener('click', () => {\n      hideModal('app-import-modal');\n    });\n\n    // Keyboard shortcuts\n    modal.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        hideModal('app-import-modal');\n      }\n    });\n  }\n\n  /**\n   * Setup ZIP import\n   */\n  setupZipImport(modal) {\n    const dropZone = modal.querySelector('#zip-drop-zone');\n    const fileInput = modal.querySelector('#zip-file-input');\n    const selectBtn = modal.querySelector('#select-zip-btn');\n\n    // Click su pulsante selezione\n    selectBtn?.addEventListener('click', () => {\n      fileInput?.click();\n    });\n\n    // File selection\n    fileInput?.addEventListener('change', (e) => {\n      const file = e.target.files[0];\n      if (file) {\n        this.handleZipFile(file);\n      }\n    });\n\n    // Drag & Drop\n    dropZone?.addEventListener('dragover', (e) => {\n      e.preventDefault();\n      dropZone.classList.add('drag-over');\n    });\n\n    dropZone?.addEventListener('dragleave', (e) => {\n      e.preventDefault();\n      dropZone.classList.remove('drag-over');\n    });\n\n    dropZone?.addEventListener('drop', (e) => {\n      e.preventDefault();\n      dropZone.classList.remove('drag-over');\n      \n      const file = e.dataTransfer.files[0];\n      if (file && file.name.endsWith('.zip')) {\n        this.handleZipFile(file);\n      } else {\n        showToast('Per favore seleziona un file ZIP valido', 'error');\n      }\n    });\n  }\n\n  /**\n   * Setup URL import\n   */\n  setupUrlImport(modal) {\n    const urlInput = modal.querySelector('#url-input');\n    const testBtn = modal.querySelector('#test-url-btn');\n    const previewContainer = modal.querySelector('#url-preview-container');\n\n    // Test URL button\n    testBtn?.addEventListener('click', async () => {\n      const url = urlInput?.value.trim();\n      if (!url) {\n        showToast('Inserisci un URL valido', 'error');\n        return;\n      }\n\n      if (!isValidUrl(url)) {\n        showToast('URL non valido', 'error');\n        return;\n      }\n\n      try {\n        testBtn.disabled = true;\n        testBtn.textContent = 'Testando...';\n        \n        await this.testUrl(url, previewContainer);\n        \n        testBtn.textContent = 'Test';\n        testBtn.disabled = false;\n      } catch (error) {\n        console.error('Errore test URL:', error);\n        showToast('Errore durante il test dell\\'URL', 'error');\n        testBtn.textContent = 'Test';\n        testBtn.disabled = false;\n      }\n    });\n\n    // URL input change\n    urlInput?.addEventListener('input', () => {\n      const url = urlInput.value.trim();\n      if (url && isValidUrl(url)) {\n        this.enableImportButton();\n      } else {\n        this.disableImportButton();\n      }\n    });\n  }\n\n  /**\n   * Setup GitHub import\n   */\n  setupGitHubImport(modal) {\n    const githubInput = modal.querySelector('#github-url-input');\n    const previewContainer = modal.querySelector('#github-preview-container');\n\n    // GitHub URL input change\n    githubInput?.addEventListener('input', async () => {\n      const url = githubInput.value.trim();\n      if (url && this.isGitHubUrl(url)) {\n        try {\n          await this.fetchGitHubInfo(url, previewContainer);\n          this.enableImportButton();\n        } catch (error) {\n          console.error('Errore fetch GitHub:', error);\n          showToast('Errore durante il recupero delle informazioni GitHub', 'error');\n        }\n      } else {\n        this.disableImportButton();\n        if (previewContainer) {\n          previewContainer.style.display = 'none';\n        }\n      }\n    });\n  }\n\n  /**\n   * Setup metadata form\n   */\n  setupMetadataForm(modal) {\n    // Popola modalità di default corrente\n    this.updateDefaultModeIndicator();\n    \n    // Icon upload\n    const iconInput = modal.querySelector('#app-icon');\n    const uploadBtn = modal.querySelector('#upload-icon-btn');\n    const fileInput = modal.querySelector('#icon-file-input');\n    const preview = modal.querySelector('#icon-preview');\n    const previewImg = modal.querySelector('#icon-preview-img');\n\n    uploadBtn?.addEventListener('click', () => {\n      fileInput?.click();\n    });\n\n    fileInput?.addEventListener('change', (e) => {\n      const file = e.target.files[0];\n      if (file) {\n        this.handleIconUpload(file, iconInput, preview);\n      }\n    });\n\n    // Icon preview on URL change\n    iconInput?.addEventListener('input', () => {\n      const url = iconInput.value.trim();\n      if (url) {\n        this.showIconPreview(url, preview);\n      } else {\n        preview.style.display = 'none';\n      }\n    });\n\n    // Form validation\n    const nameInput = modal.querySelector('#app-name');\n    nameInput?.addEventListener('input', () => {\n      this.validateForm();\n    });\n  }\n\n  /**\n   * Aggiorna l'indicazione della modalità di default corrente\n   */\n  async updateDefaultModeIndicator() {\n    try {\n      const currentMode = await StorageService.getSetting('defaultLaunchMode', 'newpage');\n      const indicator = document.getElementById('current-default-mode');\n      \n      if (indicator) {\n        const modeLabel = currentMode === 'newpage' ? 'Nuova pagina' : 'Finestra modale';\n        indicator.textContent = `(Impostazione globale corrente: ${modeLabel})`;\n      }\n    } catch (error) {\n      console.warn('Impossibile caricare modalità di default:', error);\n    }\n  }\n\n  /**\n   * Valida il form di importazione\n   */\n  validateForm() {\n    const nameInput = document.getElementById('app-name');\n    const startImportBtn = document.getElementById('start-import');\n    \n    if (nameInput && startImportBtn) {\n      const isValid = nameInput.value.trim().length > 0;\n      startImportBtn.disabled = !isValid;\n    }\n  }\n\n  /**\n   * Setup HTML import\n   */\n  setupHtmlImport(modal) {\n    const fileInput = modal.querySelector('#html-file-input');\n\n    // File selection\n    fileInput?.addEventListener('change', (e) => {\n      const file = e.target.files[0];\n      if (file) {\n        this.handleHtmlFile(file);\n      }\n    });\n  }\n\n  /**\n   * Gestisce il file ZIP caricato\n   */\n  async handleZipFile(file) {\n    try {\n      // Validazione dimensione\n      if (file.size > this.maxFileSize) {\n        showToast(`File troppo grande. Massimo: ${formatFileSize(this.maxFileSize)}`, 'error');\n        return;\n      }\n\n      showToast('Analizzando file ZIP...', 'info');\n\n      // Leggi ZIP\n      const zip = new JSZip();\n      const contents = await zip.loadAsync(file);\n\n      // Estrai file\n      const files = [];\n      let manifest = null;\n\n      for (const [filename, fileObj] of Object.entries(contents.files)) {\n        if (fileObj.dir) continue;\n\n        const content = await fileObj.async('text');\n        const fileData = {\n          filename,\n          content,\n          size: content.length,\n          mimeType: this.getMimeType(filename)\n        };\n\n        files.push(fileData);\n\n        // Cerca manifest AIdeas\n        if (filename === 'aideas.json') {\n          try {\n            manifest = JSON.parse(content);\n          } catch (e) {\n            console.warn('Manifest aideas.json non valido:', e);\n          }\n        }\n      }\n\n      // Validazione contenuto\n      const hasHTML = files.some(f => f.filename.endsWith('.html'));\n      if (!hasHTML) {\n        showToast('Il ZIP deve contenere almeno un file HTML', 'error');\n        return;\n      }\n\n      // Estrai metadati\n      const metadata = this.extractZipMetadata(files, manifest);\n      \n      // Popola form con metadati estratti\n      this.populateMetadataForm(metadata);\n      \n      // Mostra form metadata\n      const metadataSection = document.getElementById('section-metadata');\n      if (metadataSection) {\n        metadataSection.style.display = 'block';\n      }\n\n      // Salva dati per l'importazione\n      this.currentImportData = {\n        type: 'zip',\n        files,\n        manifest,\n        metadata,\n        originalFile: file\n      };\n\n      // Abilita pulsante importazione\n      const importBtn = document.getElementById('start-import');\n      if (importBtn) {\n        importBtn.disabled = false;\n      }\n\n      showToast('ZIP analizzato con successo!', 'success');\n\n    } catch (error) {\n      console.error('Errore durante l\\'analisi del ZIP:', error);\n      showToast('Errore durante l\\'analisi del file ZIP', 'error');\n    }\n  }\n\n  /**\n   * Testa un URL e mostra anteprima\n   */\n  async testUrl(url, previewElement) {\n    if (!previewElement) return;\n\n    previewElement.style.display = 'block';\n    const statusBadge = previewElement.querySelector('.status-badge');\n    const titleEl = previewElement.querySelector('.preview-title');\n    const urlEl = previewElement.querySelector('.preview-url');\n\n    // Reset stato\n    statusBadge.textContent = 'Verificando...';\n    statusBadge.className = 'status-badge';\n    titleEl.textContent = 'Caricamento...';\n    urlEl.textContent = url;\n\n    try {\n      // Estrai metadati avanzati\n      const metadata = await this.extractUrlMetadata(url);\n      \n      // Aggiorna preview\n      titleEl.textContent = metadata.title || metadata.name || extractDomain(url);\n      statusBadge.textContent = metadata.isPWA ? '✓ PWA Rilevata' : '✓ Sito Web';\n      statusBadge.className = metadata.isPWA ? 'status-badge badge-success' : 'status-badge badge-info';\n\n      // Popola form metadata\n      this.populateMetadataForm(metadata);\n      \n      // Mostra form metadata\n      const metadataSection = document.getElementById('section-metadata');\n      if (metadataSection) {\n        metadataSection.style.display = 'block';\n      }\n\n      // Salva dati per importazione\n      this.currentImportData = {\n        type: metadata.isPWA ? 'pwa' : 'url',\n        url,\n        metadata\n      };\n\n      // Abilita importazione\n      const importBtn = document.getElementById('start-import');\n      if (importBtn) {\n        importBtn.disabled = false;\n      }\n\n    } catch (error) {\n      console.error('Errore test URL:', error);\n      statusBadge.textContent = '⚠ Errore';\n      statusBadge.className = 'status-badge badge-error';\n      titleEl.textContent = 'Impossibile verificare il sito';\n    }\n  }\n\n  /**\n   * Fetch informazioni repository GitHub\n   */\n  async fetchGitHubInfo(url, previewElement) {\n    if (!previewElement) return;\n\n    const repoInfo = this.parseGitHubUrl(url);\n    if (!repoInfo) {\n      showToast('URL GitHub non valido', 'error');\n      return;\n    }\n\n    try {\n      // Chiamata API GitHub\n      const apiUrl = `https://api.github.com/repos/${repoInfo.owner}/${repoInfo.repo}`;\n      const response = await fetch(apiUrl);\n      \n      if (!response.ok) {\n        throw new Error('Repository non trovato o non accessibile');\n      }\n\n      const repoData = await response.json();\n\n      // Mostra info repository\n      previewElement.style.display = 'block';\n      previewElement.querySelector('#repo-avatar').src = repoData.owner.avatar_url;\n      previewElement.querySelector('#repo-name').textContent = repoData.full_name;\n      previewElement.querySelector('#repo-description').textContent = repoData.description || 'Nessuna descrizione';\n      previewElement.querySelector('#repo-stars').textContent = repoData.stargazers_count;\n      previewElement.querySelector('#repo-forks').textContent = repoData.forks_count;\n      previewElement.querySelector('#repo-updated').textContent = new Date(repoData.updated_at).toLocaleDateString();\n\n      // Popola metadata form\n      const metadata = {\n        name: repoData.name,\n        description: repoData.description,\n        category: 'tools',\n        version: '1.0.0',\n        githubUrl: url\n      };\n\n      this.populateMetadataForm(metadata);\n\n      // Mostra form metadata\n      const metadataSection = document.getElementById('section-metadata');\n      if (metadataSection) {\n        metadataSection.style.display = 'block';\n      }\n\n      // Salva dati\n      this.currentImportData = {\n        type: 'github',\n        url,\n        githubUrl: url,\n        repoData,\n        metadata\n      };\n\n      // Abilita importazione\n      const importBtn = document.getElementById('start-import');\n      if (importBtn) {\n        importBtn.disabled = false;\n      }\n\n    } catch (error) {\n      console.error('Errore fetch GitHub:', error);\n      showToast(`Errore: ${error.message}`, 'error');\n    }\n  }\n\n  /**\n   * Avvia il processo di importazione\n   */\n  async startImport() {\n    if (!this.currentImportData) {\n      showToast('Nessun dato da importare', 'error');\n      return;\n    }\n\n    try {\n      // Mostra progress\n      this.showImportProgress(true);\n\n      // Raccogli dati dal form\n      const formData = this.collectFormData();\n      \n      // Valida dati\n      const validation = this.validateAppData(formData);\n      if (!validation.valid) {\n        throw new Error(validation.error);\n      }\n\n      // Combina dati\n      const appData = {\n        ...this.currentImportData.metadata,\n        ...formData,\n        type: this.currentImportData.type,\n        url: this.currentImportData.url,\n        githubUrl: this.currentImportData.githubUrl,\n        files: this.currentImportData.files,\n        content: this.currentImportData.content\n      };\n\n      // Log modalità di lancio\n      console.log(`🚀 Installazione app: ${appData.name}`);\n      console.log(`📋 Modalità di lancio app-specifica: ${appData.metadata?.launchMode || 'non specificata'}`);\n      \n      // Verifica modalità di default globale\n      const globalLaunchMode = await StorageService.getSetting('defaultLaunchMode', 'newpage');\n      console.log(`🌐 Modalità di lancio globale: ${globalLaunchMode}`);\n      \n      // Determina modalità finale che verrà usata\n      const finalLaunchMode = appData.metadata?.launchMode || globalLaunchMode;\n      console.log(`✅ Modalità finale per questa app: ${finalLaunchMode}`);\n\n      // Aggiorna progress\n      this.updateImportProgress(50, 'Salvando app...');\n\n      // Salva nel database\n      const appId = await StorageService.installApp(appData);\n\n      // Aggiorna progress\n      this.updateImportProgress(100, 'Importazione completata!');\n\n      // Successo\n      setTimeout(() => {\n        hideModal('app-import-modal');\n        showToast(`App \"${appData.name}\" importata con successo!`, 'success');\n        \n        // Ricarica la lista app (se disponibile)\n        if (window.aideasApp && window.aideasApp.loadApps) {\n          window.aideasApp.loadApps();\n        }\n      }, 1000);\n\n    } catch (error) {\n      console.error('Errore durante l\\'importazione:', error);\n      showToast(`Errore importazione: ${error.message}`, 'error');\n      this.showImportProgress(false);\n    }\n  }\n\n  /**\n   * Utility methods\n   */\n\n  // Estrai metadati da ZIP\n  extractZipMetadata(files, manifest) {\n    const metadata = {\n      name: manifest?.name || 'App Importata',\n      description: manifest?.description || '',\n      version: manifest?.version || '1.0.0',\n      category: manifest?.category || 'tools',\n      tags: manifest?.tags || [],\n      icon: manifest?.icon || null,\n      permissions: manifest?.permissions || []\n    };\n\n    // Cerca icona nei file se non specificata nel manifest\n    if (!metadata.icon) {\n      const iconFile = files.find(f => \n        f.filename.match(/^(icon|logo|app-icon)\\.(png|jpg|jpeg|svg)$/i)\n      );\n      if (iconFile) {\n        const blob = new Blob([iconFile.content], { type: iconFile.mimeType });\n        metadata.icon = URL.createObjectURL(blob);\n      }\n    }\n\n    return metadata;\n  }\n\n  // Estrai metadati da URL\n  async extractUrlMetadata(url) {\n    const domain = extractDomain(url);\n    const baseUrl = new URL(url).origin;\n    \n    try {\n      // Prima prova a ottenere il manifest per verificare se è una PWA\n      const manifestData = await this.fetchManifest(url);\n      \n      if (manifestData) {\n        // È una PWA - usa i dati del manifest\n        return {\n          name: manifestData.name || manifestData.short_name || domain,\n          title: manifestData.name || manifestData.short_name || domain,\n          description: manifestData.description || `Progressive Web App da ${domain}`,\n          category: 'pwa',\n          url: url,\n          icon: this.getBestIcon(manifestData.icons, baseUrl),\n          isPWA: true,\n          manifest: manifestData,\n          version: manifestData.version || '1.0.0',\n          theme_color: manifestData.theme_color,\n          background_color: manifestData.background_color\n        };\n      }\n      \n      // Non è una PWA - prova a estrarre metadati dalla pagina HTML\n      const htmlMetadata = await this.fetchHtmlMetadata(url);\n      \n      if (htmlMetadata) {\n        // Usa apple-touch-icon come fallback se disponibile\n        const icon = htmlMetadata.icon || htmlMetadata.appleTouchIcon || `https://www.google.com/s2/favicons?domain=${domain}&sz=64`;\n        \n        return {\n          name: htmlMetadata.title || htmlMetadata.ogTitle || domain,\n          title: htmlMetadata.title || htmlMetadata.ogTitle || domain,\n          description: htmlMetadata.description || htmlMetadata.ogDescription || `App web da ${domain}`,\n          category: 'tools',\n          url: url,\n          icon: icon,\n          isPWA: false,\n          version: '1.0.0'\n        };\n      }\n      \n      // Fallback - usa solo il dominio\n      return {\n        name: domain,\n        title: domain,\n        description: `App web da ${domain}`,\n        category: 'tools',\n        url: url,\n        icon: `https://www.google.com/s2/favicons?domain=${domain}&sz=64`,\n        isPWA: false,\n        version: '1.0.0'\n      };\n      \n    } catch (error) {\n      console.error('Errore estrazione metadati:', error);\n      // Fallback in caso di errore\n      return {\n        name: domain,\n        title: domain,\n        description: `App web da ${domain}`,\n        category: 'tools',\n        url: url,\n        icon: `https://www.google.com/s2/favicons?domain=${domain}&sz=64`,\n        isPWA: false,\n        version: '1.0.0'\n      };\n    }\n  }\n\n  /**\n   * Prova a ottenere il manifest.json di una PWA\n   */\n  async fetchManifest(url) {\n    try {\n      const baseUrl = new URL(url).origin;\n      const manifestUrl = `${baseUrl}/manifest.json`;\n      \n      const response = await fetch(manifestUrl, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      \n      if (response.ok) {\n        const manifest = await response.json();\n        \n        // Valida che sia un manifest valido\n        if (manifest.name || manifest.short_name) {\n          return manifest;\n        }\n      }\n      \n      return null;\n    } catch (error) {\n      console.log('Manifest non trovato:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Estrae metadati da una pagina HTML\n   */\n  async fetchHtmlMetadata(url) {\n    try {\n      // Usa il proxy service per estrarre metadati\n      const metadata = await this.proxyService.extractMetadata(url);\n      \n      return {\n        title: metadata.title || metadata.ogTitle,\n        description: metadata.description || metadata.ogDescription,\n        icon: metadata.icon,\n        appleTouchIcon: metadata.appleTouchIcon,\n        keywords: metadata.keywords,\n        author: metadata.author,\n        ogImage: metadata.ogImage,\n        ogTitle: metadata.ogTitle,\n        ogDescription: metadata.ogDescription\n      };\n      \n    } catch (error) {\n      console.log('Impossibile estrarre metadati HTML con proxy, provo approccio diretto:', error);\n      \n      // Fallback: prova approccio diretto\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Accept': 'text/html'\n          }\n        });\n        \n        if (!response.ok) {\n          throw new Error('Pagina non accessibile');\n        }\n        \n        const html = await response.text();\n        \n        // Estrai metadati usando regex (approccio semplificato)\n        const titleMatch = html.match(/<title[^>]*>([^<]+)<\\/title>/i);\n        const descriptionMatch = html.match(/<meta[^>]*name=[\"']description[\"'][^>]*content=[\"']([^\"']+)[\"']/i);\n        const iconMatch = html.match(/<link[^>]*rel=[\"'](?:icon|shortcut icon)[\"'][^>]*href=[\"']([^\"']+)[\"']/i);\n        const appleIconMatch = html.match(/<link[^>]*rel=[\"']apple-touch-icon[\"'][^>]*href=[\"']([^\"']+)[\"']/i);\n        \n        const baseUrl = new URL(url).origin;\n        \n        return {\n          title: titleMatch ? titleMatch[1].trim() : null,\n          description: descriptionMatch ? descriptionMatch[1].trim() : null,\n          icon: iconMatch ? new URL(iconMatch[1], baseUrl).href : null,\n          appleTouchIcon: appleIconMatch ? new URL(appleIconMatch[1], baseUrl).href : null\n        };\n        \n      } catch (fallbackError) {\n        console.log('Anche l\\'approccio diretto è fallito:', fallbackError);\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Seleziona la migliore icona dal manifest\n   */\n  getBestIcon(icons, baseUrl) {\n    if (!icons || !Array.isArray(icons)) {\n      return null;\n    }\n    \n    // Cerca un'icona di dimensioni adeguate (preferibilmente 192x192 o 512x512)\n    const preferredSizes = ['512x512', '192x192', '144x144', '96x96'];\n    \n    for (const size of preferredSizes) {\n      const icon = icons.find(icon => \n        icon.sizes === size || \n        (icon.sizes && icon.sizes.includes(size))\n      );\n      \n      if (icon) {\n        return new URL(icon.src, baseUrl).href;\n      }\n    }\n    \n    // Fallback alla prima icona disponibile\n    if (icons.length > 0) {\n      return new URL(icons[0].src, baseUrl).href;\n    }\n    \n    return null;\n  }\n\n  // Parsing URL GitHub\n  parseGitHubUrl(url) {\n    const patterns = [\n      /github\\.com\\/([^\\/]+)\\/([^\\/]+)/,\n      /([^\\/]+)\\.github\\.io\\/([^\\/]+)/\n    ];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) {\n        return {\n          owner: match[1],\n          repo: match[2].replace('.git', '')\n        };\n      }\n    }\n    return null;\n  }\n\n  // Validazione URL GitHub\n  isGitHubUrl(url) {\n    return url.includes('github.com') || url.includes('github.io');\n  }\n\n  // Get MIME type\n  getMimeType(filename) {\n    const ext = filename.split('.').pop().toLowerCase();\n    const mimeTypes = {\n      'html': 'text/html',\n      'css': 'text/css',\n      'js': 'application/javascript',\n      'json': 'application/json',\n      'png': 'image/png',\n      'jpg': 'image/jpeg',\n      'jpeg': 'image/jpeg',\n      'gif': 'image/gif',\n      'svg': 'image/svg+xml',\n      'txt': 'text/plain'\n    };\n    return mimeTypes[ext] || 'application/octet-stream';\n  }\n\n  // Get category label\n  getCategoryLabel(category) {\n    const labels = {\n      'productivity': 'Produttività',\n      'entertainment': 'Intrattenimento',\n      'tools': 'Strumenti',\n      'games': 'Giochi',\n      'ai': 'Intelligenza Artificiale',\n      'social': 'Social',\n      'education': 'Educazione',\n      'business': 'Business',\n      'utility': 'Utilità',\n      'pwa': 'Progressive Web App'\n    };\n    return labels[category] || category;\n  }\n\n  // Popola form metadata\n  populateMetadataForm(metadata) {\n    const fields = {\n      'app-name': metadata.name || metadata.title,\n      'app-description': metadata.description,\n      'app-version': metadata.version,\n      'app-category': metadata.category,\n      'app-tags': Array.isArray(metadata.tags) ? metadata.tags.join(', ') : metadata.tags,\n      'app-icon': metadata.icon\n    };\n\n    for (const [fieldId, value] of Object.entries(fields)) {\n      const field = document.getElementById(fieldId);\n      if (field && value) {\n        field.value = value;\n        \n        // Trigger events\n        field.dispatchEvent(new Event('input'));\n        field.dispatchEvent(new Event('change'));\n      }\n    }\n\n    // Gestione speciale per PWA\n    if (metadata.isPWA && metadata.manifest) {\n      // Aggiungi informazioni PWA specifiche se disponibili\n      if (metadata.theme_color) {\n        const themeColorField = document.getElementById('app-theme-color');\n        if (themeColorField) {\n          themeColorField.value = metadata.theme_color;\n        }\n      }\n      \n      if (metadata.background_color) {\n        const bgColorField = document.getElementById('app-bg-color');\n        if (bgColorField) {\n          bgColorField.value = metadata.background_color;\n        }\n      }\n    }\n  }\n\n  // Raccogli dati dal form\n  collectFormData() {\n    const nameEl = document.getElementById('app-name');\n    const descEl = document.getElementById('app-description');\n    const versionEl = document.getElementById('app-version');\n    const categoryEl = document.getElementById('app-category');\n    const launchModeEl = document.getElementById('app-launch-mode');\n    const tagsEl = document.getElementById('app-tags');\n    const iconEl = document.getElementById('app-icon');\n\n    const tags = tagsEl?.value ? \n      tagsEl.value.split(',').map(tag => tag.trim()).filter(tag => tag) : \n      [];\n\n    const formData = {\n      name: nameEl?.value.trim() || '',\n      description: descEl?.value.trim() || '',\n      version: versionEl?.value.trim() || '1.0.0',\n      category: categoryEl?.value || 'tools',\n      tags,\n      icon: iconEl?.value.trim() || null\n    };\n\n    // Aggiungi modalità di lancio ai metadata se specificata\n    if (launchModeEl && launchModeEl.value) {\n      formData.metadata = formData.metadata || {};\n      formData.metadata.launchMode = launchModeEl.value;\n      console.log(`📝 Modalità di lancio specificata per app: ${launchModeEl.value}`);\n    } else {\n      console.log(`📝 Nessuna modalità specifica, userà impostazione globale`);\n    }\n\n    return formData;\n  }\n\n  // Validazione dati app\n  validateAppData(data) {\n    if (!data.name) {\n      return { valid: false, error: 'Nome app richiesto' };\n    }\n\n    if (data.name.length > 50) {\n      return { valid: false, error: 'Nome app troppo lungo (max 50 caratteri)' };\n    }\n\n    if (data.description && data.description.length > 200) {\n      return { valid: false, error: 'Descrizione troppo lunga (max 200 caratteri)' };\n    }\n\n    return { valid: true };\n  }\n\n  // Gestione progress importazione\n  showImportProgress(show) {\n    const progress = document.getElementById('import-progress');\n    const actions = document.getElementById('modal-actions');\n    \n    if (progress && actions) {\n      progress.style.display = show ? 'block' : 'none';\n      actions.style.display = show ? 'none' : 'flex';\n    }\n  }\n\n  updateImportProgress(percent, text) {\n    const fill = document.getElementById('progress-fill');\n    const textEl = document.getElementById('progress-text');\n    \n    if (fill) fill.style.width = `${percent}%`;\n    if (textEl) textEl.textContent = text;\n  }\n\n  // Abilita/disabilita pulsante importazione\n  enableImportButton() {\n    const importBtn = document.getElementById('start-import');\n    if (importBtn) {\n      importBtn.disabled = false;\n    }\n  }\n\n  disableImportButton() {\n    const importBtn = document.getElementById('start-import');\n    if (importBtn) {\n      importBtn.disabled = true;\n    }\n  }\n\n  // Setup drag & drop globale\n  setupDropZone() {\n    // Previeni drop su tutta la pagina\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n      document.addEventListener(eventName, (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }, false);\n    });\n\n    // Mostra modal su drop globale\n    document.addEventListener('drop', (e) => {\n      const file = e.dataTransfer.files[0];\n      if (file && file.name.endsWith('.zip')) {\n        this.showModal();\n        setTimeout(() => {\n          this.handleZipFile(file);\n        }, 200);\n      }\n    });\n  }\n\n  // Setup keyboard shortcuts\n  setupKeyboardShortcuts() {\n    document.addEventListener('keydown', (e) => {\n      // Ctrl/Cmd + I per importare\n      if ((e.ctrlKey || e.metaKey) && e.key === 'i') {\n        e.preventDefault();\n        this.showModal();\n      }\n    });\n  }\n\n  // Handle icon upload\n  async handleIconUpload(file, iconInput, iconPreview) {\n    if (!file.type.startsWith('image/')) {\n      showToast('Per favore seleziona un file immagine', 'error');\n      return;\n    }\n\n    if (file.size > 2 * 1024 * 1024) { // 2MB\n      showToast('Immagine troppo grande (max 2MB)', 'error');\n      return;\n    }\n\n    try {\n      // Converti in base64\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const dataUrl = e.target.result;\n        iconInput.value = dataUrl;\n        this.showIconPreview(dataUrl, iconPreview);\n      };\n      reader.readAsDataURL(file);\n    } catch (error) {\n      console.error('Errore upload icona:', error);\n      showToast('Errore durante l\\'upload dell\\'icona', 'error');\n    }\n  }\n\n  // Mostra preview icona\n  showIconPreview(url, previewElement) {\n    if (!previewElement) return;\n    \n    const img = previewElement.querySelector('#icon-preview-img');\n    if (img) {\n      img.src = url;\n      img.onload = () => {\n        previewElement.style.display = 'block';\n      };\n      img.onerror = () => {\n        previewElement.style.display = 'none';\n        showToast('Impossibile caricare l\\'icona', 'warning');\n      };\n    }\n  }\n\n  // Handle HTML file\n  async handleHtmlFile(file) {\n    if (!file.type.startsWith('text/html')) {\n      showToast('Per favore seleziona un file HTML', 'error');\n      return;\n    }\n\n    if (file.size > 2 * 1024 * 1024) { // 2MB\n      showToast('File troppo grande (max 2MB)', 'error');\n      return;\n    }\n\n    try {\n      const content = await file.text();\n      \n      // Estrai metadati dal contenuto HTML\n      const metadata = this.extractHtmlMetadata(content, file.name);\n      \n      // Popola il form con i metadati estratti\n      this.populateMetadataForm(metadata);\n\n      // Mostra sezione metadata\n      const metadataSection = document.getElementById('section-metadata');\n      if (metadataSection) {\n        metadataSection.style.display = 'block';\n        metadataSection.classList.add('active');\n      }\n\n      // Salva dati\n      this.currentImportData = {\n        type: 'html',\n        content: content,\n        metadata: metadata\n      };\n\n      // Abilita importazione\n      this.enableImportButton();\n\n      showToast('File HTML analizzato con successo!', 'success');\n\n    } catch (error) {\n      console.error('Errore durante l\\'importazione del file HTML:', error);\n      showToast('Errore durante l\\'importazione del file HTML', 'error');\n    }\n  }\n\n  /**\n   * Estrae metadati da un file HTML\n   * @param {string} htmlContent - Contenuto HTML\n   * @param {string} filename - Nome del file\n   * @returns {Object} Metadati estratti\n   */\n  extractHtmlMetadata(htmlContent, filename) {\n    // Crea un DOM parser temporaneo\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(htmlContent, 'text/html');\n    \n    // Estrai titolo\n    const title = doc.querySelector('title')?.textContent?.trim() || \n                  doc.querySelector('meta[property=\"og:title\"]')?.getAttribute('content') ||\n                  filename.replace('.html', '').replace(/[-_]/g, ' ');\n    \n    // Estrai descrizione\n    const description = doc.querySelector('meta[name=\"description\"]')?.getAttribute('content') ||\n                       doc.querySelector('meta[property=\"og:description\"]')?.getAttribute('content') ||\n                       'App web standalone';\n    \n    // Estrai favicon/icona\n    let icon = null;\n    const favicon = doc.querySelector('link[rel=\"icon\"]')?.getAttribute('href') ||\n                   doc.querySelector('link[rel=\"shortcut icon\"]')?.getAttribute('href') ||\n                   doc.querySelector('link[rel=\"apple-touch-icon\"]')?.getAttribute('href');\n    \n    if (favicon) {\n      // Se è un URL relativo, convertilo in data URL se possibile\n      if (favicon.startsWith('data:')) {\n        icon = favicon;\n      } else if (favicon.startsWith('http')) {\n        icon = favicon;\n      } else {\n        // Per URL relativi, usa un'icona di default per ora\n        icon = null;\n      }\n    }\n    \n    // Estrai keywords/tags\n    const keywords = doc.querySelector('meta[name=\"keywords\"]')?.getAttribute('content') || '';\n    const tags = keywords.split(',').map(k => k.trim()).filter(k => k.length > 0);\n    \n    // Determina categoria basata su contenuto\n    let category = 'tools';\n    const bodyText = doc.body?.textContent?.toLowerCase() || '';\n    if (bodyText.includes('calcolatric') || bodyText.includes('calculator')) {\n      category = 'utilities';\n    } else if (bodyText.includes('game') || bodyText.includes('gioco')) {\n      category = 'games';\n    } else if (bodyText.includes('editor') || bodyText.includes('text')) {\n      category = 'productivity';\n    }\n    \n    return {\n      name: title,\n      description: description,\n      category: category,\n      type: 'html',\n      content: htmlContent,\n      icon: icon,\n      tags: tags,\n      version: '1.0.0'\n    };\n  }\n}","/**\n * AIdeas - App Card Component\n * Componente per la visualizzazione delle card delle applicazioni\n */\n\nimport { formatRelativeDate, formatFileSize, escapeHtml } from '../utils/helpers.js';\n\n/**\n * Classe per gestire il rendering e l'interazione delle app cards\n */\nexport default class AppCard {\n  \n  /**\n   * Renderizza una singola app card\n   * @param {Object} app - Dati dell'app\n   * @param {string} viewMode - Modalità vista: 'grid' o 'list'\n   * @returns {string} HTML della card\n   */\n  static render(app, viewMode = 'grid') {\n    if (viewMode === 'list') {\n      return this.renderListView(app);\n    }\n    return this.renderGridView(app);\n  }\n\n  /**\n   * Renderizza app card in vista griglia\n   * @param {Object} app - Dati dell'app\n   * @returns {string} HTML della card\n   */\n  static renderGridView(app) {\n    const {\n      id,\n      name,\n      description,\n      category,\n      version,\n      type,\n      lastUsed,\n      installDate,\n      favorite,\n      tags,\n      icon,\n      url,\n      githubUrl,\n      metadata\n    } = app;\n\n    const displayName = escapeHtml(name || 'App Senza Nome');\n    const displayDescription = escapeHtml(description || 'Nessuna descrizione disponibile');\n    const displayCategory = this.getCategoryInfo(category);\n    const appIcon = this.getAppIcon(app);\n    const typeInfo = this.getTypeInfo(type);\n    const lastUsedFormatted = formatRelativeDate(lastUsed);\n\n    return `\n      <div class=\"app-card\" data-app-id=\"${id}\" data-category=\"${category}\" data-type=\"${type}\">\n        <!-- App Icon & Status -->\n        <div class=\"app-card-header\">\n          <div class=\"app-icon-container\">\n            ${appIcon}\n            <div class=\"app-type-badge\" title=\"${typeInfo.label}\">\n              ${typeInfo.icon}\n            </div>\n          </div>\n          \n          <!-- Favorite Button -->\n          <button \n            class=\"app-card-favorite ${favorite ? 'is-favorite' : ''}\" \n            data-app-id=\"${id}\"\n            aria-label=\"${favorite ? 'Rimuovi dai preferiti' : 'Aggiungi ai preferiti'}\"\n            title=\"${favorite ? 'Rimuovi dai preferiti' : 'Aggiungi ai preferiti'}\"\n          >\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\"/>\n            </svg>\n          </button>\n        </div>\n\n        <!-- App Info -->\n        <div class=\"app-card-body\">\n          <!-- App Name -->\n          <div class=\"app-card-title\">\n            <div class=\"app-name\" title=\"${displayName}\">${displayName}</div>\n          </div>\n\n          <!-- Tags -->\n          ${tags && tags.length > 0 ? `\n            <div class=\"app-tags\">\n              ${tags.slice(0, 3).map(tag => `\n                <span class=\"app-tag\">${escapeHtml(tag)}</span>\n              `).join('')}\n              ${tags.length > 3 ? `<span class=\"app-tag-more\">+${tags.length - 3}</span>` : ''}\n            </div>\n          ` : ''}\n\n          <!-- Metadata -->\n          <div class=\"app-metadata\">\n            <div class=\"app-category\" title=\"Categoria\">\n              ${displayCategory.icon}\n              <span>${displayCategory.name}</span>\n            </div>\n            <div class=\"app-last-used\" title=\"Ultimo utilizzo: ${new Date(lastUsed).toLocaleString()}\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.2,16.2L11,13V7H12.5V12.2L17,14.7L16.2,16.2Z\"/>\n              </svg>\n              <span>${lastUsedFormatted}</span>\n            </div>\n          </div>\n\n          <!-- App Description -->\n          <div class=\"app-description-container\">\n            <p class=\"app-description\" title=\"${displayDescription}\">\n              ${this.truncateText(displayDescription, 100)}\n            </p>\n          </div>\n        </div>\n\n        <!-- App Actions -->\n        <div class=\"app-card-actions\">\n          <button \n            class=\"app-card-launch btn btn-primary\" \n            data-app-id=\"${id}\"\n            aria-label=\"Avvia ${displayName}\"\n          >\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M8,5.14V19.14L19,12.14L8,5.14Z\"/>\n            </svg>\n            Avvia\n          </button>\n          \n          <div class=\"app-card-menu-container\">\n            <button \n              class=\"app-card-menu btn btn-secondary\" \n              data-app-id=\"${id}\"\n              aria-label=\"Menu ${displayName}\"\n              title=\"Opzioni app\"\n            >\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <!-- Hover Overlay -->\n        <div class=\"app-card-overlay\">\n          <div class=\"app-card-overlay-content\">\n            <div class=\"app-overlay-stats\">\n              <div class=\"stat\">\n                <span class=\"stat-label\">Installata:</span>\n                <span class=\"stat-value\">${formatRelativeDate(installDate)}</span>\n              </div>\n              <div class=\"stat\">\n                <span class=\"stat-label\">Tipo:</span>\n                <span class=\"stat-value\">${typeInfo.label}</span>\n              </div>\n              ${metadata?.size ? `\n                <div class=\"stat\">\n                  <span class=\"stat-label\">Dimensione:</span>\n                  <span class=\"stat-value\">${formatFileSize(metadata.size)}</span>\n                </div>\n              ` : ''}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Renderizza app card in vista lista\n   * @param {Object} app - Dati dell'app\n   * @returns {string} HTML della card\n   */\n  static renderListView(app) {\n    const {\n      id,\n      name,\n      description,\n      category,\n      version,\n      type,\n      lastUsed,\n      installDate,\n      favorite,\n      tags,\n      metadata\n    } = app;\n\n    const displayName = escapeHtml(name || 'App Senza Nome');\n    const displayDescription = escapeHtml(description || 'Nessuna descrizione disponibile');\n    const displayCategory = this.getCategoryInfo(category);\n    const appIcon = this.getAppIcon(app);\n    const typeInfo = this.getTypeInfo(type);\n    const lastUsedFormatted = formatRelativeDate(lastUsed);\n    const installDateFormatted = formatRelativeDate(installDate);\n\n    return `\n      <div class=\"app-card app-card-list\" data-app-id=\"${id}\" data-category=\"${category}\" data-type=\"${type}\">\n        <!-- App Icon -->\n        <div class=\"app-list-icon\">\n          ${appIcon}\n          <div class=\"app-type-badge-mini\" title=\"${typeInfo.label}\">\n            ${typeInfo.icon}\n          </div>\n        </div>\n\n        <!-- App Info -->\n        <div class=\"app-list-info\">\n          <div class=\"app-list-header\">\n            <h3 class=\"app-list-name\">${displayName}</h3>\n            <span class=\"app-list-version\">v${version || '1.0.0'}</span>\n            <div class=\"app-list-category\" title=\"Categoria\">\n              ${displayCategory.icon}\n              <span>${displayCategory.name}</span>\n            </div>\n          </div>\n          \n          <!-- Tags in list view -->\n          ${tags && tags.length > 0 ? `\n            <div class=\"app-list-tags\">\n              ${tags.slice(0, 5).map(tag => `\n                <span class=\"app-tag app-tag-small\">${escapeHtml(tag)}</span>\n              `).join('')}\n              ${tags.length > 5 ? `<span class=\"app-tag-more app-tag-small\">+${tags.length - 5}</span>` : ''}\n            </div>\n          ` : ''}\n        </div>\n\n        <!-- App Metadata -->\n        <div class=\"app-list-metadata\">\n          <div class=\"app-list-stat\">\n            <span class=\"stat-label\">Ultimo utilizzo:</span>\n            <span class=\"stat-value\">${lastUsedFormatted}</span>\n          </div>\n          <div class=\"app-list-stat\">\n            <span class=\"stat-label\">Installata:</span>\n            <span class=\"stat-value\">${installDateFormatted}</span>\n          </div>\n          ${metadata?.size ? `\n            <div class=\"app-list-stat\">\n              <span class=\"stat-label\">Dimensione:</span>\n              <span class=\"stat-value\">${formatFileSize(metadata.size)}</span>\n            </div>\n          ` : ''}\n        </div>\n\n        <!-- App Actions -->\n        <div class=\"app-list-actions\">\n          <button \n            class=\"app-card-favorite ${favorite ? 'is-favorite' : ''}\" \n            data-app-id=\"${id}\"\n            aria-label=\"${favorite ? 'Rimuovi dai preferiti' : 'Aggiungi ai preferiti'}\"\n            title=\"${favorite ? 'Rimuovi dai preferiti' : 'Aggiungi ai preferiti'}\"\n          >\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\"/>\n            </svg>\n          </button>\n          \n          <button \n            class=\"app-card-launch btn btn-primary\" \n            data-app-id=\"${id}\"\n            aria-label=\"Avvia ${displayName}\"\n          >\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M8,5.14V19.14L19,12.14L8,5.14Z\"/>\n            </svg>\n            Avvia\n          </button>\n          \n          <button \n            class=\"app-card-menu btn btn-secondary\" \n            data-app-id=\"${id}\"\n            aria-label=\"Menu ${displayName}\"\n            title=\"Opzioni app\"\n          >\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Ottiene l'icona dell'app\n   * @param {Object} app - Dati dell'app\n   * @returns {string} HTML dell'icona\n   */\n  static getAppIcon(app) {\n    if (app.icon) {\n      // Se è un'icona custom (base64, URL, etc.)\n      if (app.icon.startsWith('data:') || app.icon.startsWith('http')) {\n        return `<img src=\"${app.icon}\" alt=\"${app.name}\" class=\"app-icon\" loading=\"lazy\" onerror=\"this.style.display='none'; this.nextElementSibling.style.display='flex';\">\n                <div class=\"app-icon-fallback\" style=\"display: none;\">${this.getDefaultIcon(app.type)}</div>`;\n      }\n      // Se è un'icona SVG inline\n      if (app.icon.includes('<svg')) {\n        return `<div class=\"app-icon app-icon-svg\">${app.icon}</div>`;\n      }\n    }\n\n    // Fallback: icona basata sul tipo di app\n    return `<div class=\"app-icon app-icon-default\">${this.getDefaultIcon(app.type)}</div>`;\n  }\n\n  /**\n   * Ottiene l'icona di default basata sul tipo\n   * @param {string} type - Tipo di app\n   * @returns {string} SVG icon\n   */\n  static getDefaultIcon(type) {\n    const icons = {\n      zip: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\n      </svg>`,\n      url: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M16.36,14C16.44,13.34 16.5,12.68 16.5,12C16.5,11.32 16.44,10.66 16.36,10H19.74C19.9,10.64 20,11.31 20,12C20,12.69 19.9,13.36 19.74,14M14.59,19.56C15.19,18.45 15.65,17.25 15.97,16H18.92C17.96,17.65 16.43,18.93 14.59,19.56M14.34,14H9.66C9.56,13.34 9.5,12.68 9.5,12C9.5,11.32 9.56,10.65 9.66,10H14.34C14.43,10.65 14.5,11.32 14.5,12C14.5,12.68 14.43,13.34 14.34,14M12,19.96C11.17,18.76 10.5,17.43 10.09,16H13.91C13.5,17.43 12.83,18.76 12,19.96M8,8H5.08C6.03,6.34 7.57,5.06 9.4,4.44C8.8,5.55 8.35,6.75 8,8M5.08,16H8C8.35,17.25 8.8,18.45 9.4,19.56C7.57,18.93 6.03,17.65 5.08,16M4.26,14C4.1,13.36 4,12.69 4,12C4,11.31 4.1,10.64 4.26,10H7.64C7.56,10.66 7.5,11.32 7.5,12C7.5,12.68 7.56,13.34 7.64,14M12,4.03C12.83,5.23 13.5,6.57 13.91,8H10.09C10.5,6.57 11.17,5.23 12,4.03M18.92,8H15.97C15.65,6.75 15.19,5.55 14.59,4.44C16.43,5.07 17.96,6.34 18.92,8Z\"/>\n      </svg>`,\n      github: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"/>\n      </svg>`,\n      pwa: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M17,8C8,10 5.9,16.17 3.82,21.34L5.71,22L6.66,19.7C7.14,19.87 7.64,20 8,20C9,20 10,19 11,17H12C14,15 16,13 17,8M18.5,2C16.7,2 15.14,2.9 14.22,4.22L15.63,5.63C16.07,5 16.72,4.5 17.5,4.5C18.61,4.5 19.5,5.39 19.5,6.5C19.5,7.28 19,7.93 18.37,8.37L19.78,9.78C21.1,8.86 22,7.3 22,5.5C22,3.57 20.43,2 18.5,2Z\"/>\n      </svg>`\n    };\n\n    return icons[type] || icons.url;\n  }\n\n  /**\n   * Ottiene informazioni sul tipo di app\n   * @param {string} type - Tipo di app\n   * @returns {Object} Info tipo con label e icona\n   */\n  static getTypeInfo(type) {\n    const types = {\n      zip: {\n        label: 'App ZIP',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\n        </svg>`\n      },\n      url: {\n        label: 'Web App',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M10.59,13.41C11,13.8 11,14.4 10.59,14.81C10.2,15.2 9.6,15.2 9.19,14.81L7.77,13.39L6.36,14.81C5.95,15.22 5.34,15.22 4.93,14.81C4.53,14.4 4.53,13.8 4.93,13.39L6.34,12L4.93,10.59C4.53,10.2 4.53,9.59 4.93,9.18C5.34,8.78 5.95,8.78 6.36,9.18L7.77,10.6L9.19,9.19C9.6,8.78 10.2,8.78 10.59,9.19C11,9.6 11,10.2 10.59,10.61L9.17,12L10.59,13.41M19.07,4.93C19.47,5.34 19.47,5.95 19.07,6.36L17.65,7.77L19.07,9.19C19.47,9.6 19.47,10.2 19.07,10.61C18.66,11 18.05,11 17.64,10.61L16.23,9.19L14.81,10.61C14.4,11 13.8,11 13.39,10.61C13,10.2 13,9.6 13.39,9.19L14.81,7.77L13.39,6.36C13,5.95 13,5.34 13.39,4.93C13.8,4.53 14.4,4.53 14.81,4.93L16.23,6.34L17.64,4.93C18.05,4.53 18.66,4.53 19.07,4.93Z\"/>\n        </svg>`\n      },\n      github: {\n        label: 'GitHub App',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"/>\n        </svg>`\n      },\n      pwa: {\n        label: 'PWA',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4M12,6A6,6 0 0,1 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6M12,8A4,4 0 0,0 8,12A4,4 0 0,0 12,16A4,4 0 0,0 16,12A4,4 0 0,0 12,8Z\"/>\n        </svg>`\n      }\n    };\n\n    return types[type] || types.url;\n  }\n\n  /**\n   * Ottiene informazioni sulla categoria\n   * @param {string} category - Categoria dell'app\n   * @returns {Object} Info categoria con nome e icona\n   */\n  static getCategoryInfo(category) {\n    const categories = {\n      productivity: {\n        name: 'Produttività',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M16,6L18.29,8.29L13.41,13.17L9.41,9.17L2,16.59L3.41,18L9.41,12L13.41,16L19.71,9.71L22,12V6H16Z\"/>\n        </svg>`\n      },\n      entertainment: {\n        name: 'Intrattenimento',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M13,2.05V5.08C16.39,5.57 19,8.47 19,12C19,12.9 18.82,13.75 18.5,14.54L21.12,16.07C21.68,14.83 22,13.45 22,12C22,6.82 18.05,2.55 13,2.05M12,19A7,7 0 0,1 5,12C5,8.47 7.61,5.57 11,5.08V2.05C5.94,2.55 2,6.81 2,12A10,10 0 0,0 12,22C15.3,22 18.23,20.39 20.05,17.91L17.45,16.38C16.17,18 14.21,19 12,19Z\"/>\n        </svg>`\n      },\n      tools: {\n        name: 'Strumenti',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M22.7,19L13.6,9.9C14.5,7.6 14,4.9 12.1,3C10.1,1 7.1,0.6 4.7,1.7L9,6L6,9L1.6,4.7C0.4,7.1 0.9,10.1 2.9,12.1C4.8,14 7.5,14.5 9.8,13.6L18.9,22.7C19.3,23.1 19.9,23.1 20.3,22.7L22.6,20.4C23.1,20 23.1,19.3 22.7,19Z\"/>\n        </svg>`\n      },\n      games: {\n        name: 'Giochi',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M7.97,16L5,19C4.67,19.3 4.23,19.5 3.75,19.5A1.75,1.75 0 0,1 2,17.75V17.5L3,10.12C3.21,7.81 5.14,6 7.5,6H16.5C18.86,6 20.79,7.81 21,10.12L22,17.5V17.75A1.75,1.75 0 0,1 20.25,19.5C19.77,19.5 19.33,19.3 19,19L16.03,16H7.97M9.5,8A1.5,1.5 0 0,0 8,9.5A1.5,1.5 0 0,0 9.5,11A1.5,1.5 0 0,0 11,9.5A1.5,1.5 0 0,0 9.5,8M14.5,8A1.5,1.5 0 0,0 13,9.5A1.5,1.5 0 0,0 14.5,11A1.5,1.5 0 0,0 16,9.5A1.5,1.5 0 0,0 14.5,8Z\"/>\n        </svg>`\n      },\n      ai: {\n        name: 'Intelligenza Artificiale',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12,2A2,2 0 0,1 14,4C14,4.74 13.6,5.39 13,5.73V7.27C13.6,7.61 14,8.26 14,9A2,2 0 0,1 12,11A2,2 0 0,1 10,9A2,2 0 0,1 12,7A2,2 0 0,1 14,9A2,2 0 0,1 12,11A2,2 0 0,1 10,9C10,8.26 10.4,7.61 11,7.27V5.73C10.4,5.39 10,4.74 10,4A2,2 0 0,1 12,2M9,9A2,2 0 0,1 11,11A2,2 0 0,1 9,13A2,2 0 0,1 7,11A2,2 0 0,1 9,9M15,9A2,2 0 0,1 17,11A2,2 0 0,1 15,13A2,2 0 0,1 13,11A2,2 0 0,1 15,9M12,12A2,2 0 0,1 14,14C14,14.74 13.6,15.39 13,15.73V17.27C13.6,17.61 14,18.26 14,19A2,2 0 0,1 12,21A2,2 0 0,1 10,19A2,2 0 0,1 12,17A2,2 0 0,1 14,19A2,2 0 0,1 12,21A2,2 0 0,1 10,19C10,18.26 10.4,17.61 11,17.27V15.73C10.4,15.39 10,14.74 10,14A2,2 0 0,1 12,12Z\"/>\n        </svg>`\n      },\n      social: {\n        name: 'Social',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"/>\n        </svg>`\n      },\n      uncategorized: {\n        name: 'Altro',\n        icon: `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"/>\n        </svg>`\n      }\n    };\n\n    return categories[category] || categories.uncategorized;\n  }\n\n  /**\n   * Tronca testo a lunghezza specificata\n   * @param {string} text - Testo da troncare\n   * @param {number} maxLength - Lunghezza massima\n   * @returns {string} Testo troncato\n   */\n  static truncateText(text, maxLength) {\n    if (!text || text.length <= maxLength) return text;\n    return text.substring(0, maxLength).trim() + '...';\n  }\n\n  /**\n   * Genera il menu di contesto per un'app\n   * @param {Object} app - Dati dell'app\n   * @returns {string} HTML del menu\n   */\n  static generateContextMenu(app) {\n    const { id, name, type, favorite, githubUrl, url } = app;\n\n    return `\n      <div class=\"app-context-menu\" data-app-id=\"${id}\">\n        <div class=\"context-menu-item\" data-action=\"launch\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M8,5.14V19.14L19,12.14L8,5.14Z\"/>\n          </svg>\n          Avvia\n        </div>\n        \n        <div class=\"context-menu-item\" data-action=\"favorite\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\"/>\n          </svg>\n          ${favorite ? 'Rimuovi dai preferiti' : 'Aggiungi ai preferiti'}\n        </div>\n        \n        <div class=\"context-menu-separator\"></div>\n        \n        <div class=\"context-menu-item\" data-action=\"edit\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"/>\n          </svg>\n          Modifica\n        </div>\n        \n        <div class=\"context-menu-item\" data-action=\"duplicate\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"/>\n          </svg>\n          Duplica\n        </div>\n        \n        <div class=\"context-menu-item\" data-action=\"export\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\n          </svg>\n          Esporta\n        </div>\n        \n        ${(githubUrl || url) ? `\n          <div class=\"context-menu-separator\"></div>\n          ${githubUrl ? `\n            <div class=\"context-menu-item\" data-action=\"open-github\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"/>\n              </svg>\n              Apri GitHub\n            </div>\n          ` : ''}\n          ${url && type === 'url' ? `\n            <div class=\"context-menu-item\" data-action=\"open-original\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"/>\n              </svg>\n              Apri originale\n            </div>\n          ` : ''}\n        ` : ''}\n        \n        <div class=\"context-menu-separator\"></div>\n        \n        <div class=\"context-menu-item context-menu-danger\" data-action=\"delete\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\"/>\n          </svg>\n          Elimina\n        </div>\n      </div>\n    `;\n  }\n}","/**\n * AIdeas - Settings Panel Component\n * Gestisce le impostazioni dell'applicazione\n */\n\nimport StorageService from '../services/StorageService.js';\nimport { \n  showToast, \n  showModal, \n  hideModal,\n  showConfirmPopup,\n  showDeleteAppConfirm,\n  showImportAppConfirm,\n  showResetSettingsConfirm,\n  escapeHtml, \n  formatFileSize, \n  getDeviceInfo\n} from '../utils/helpers.js';\n\n/**\n * Classe per gestire il pannello delle impostazioni\n */\nexport default class SettingsPanel {\n  constructor() {\n    this.currentSettings = {};\n    this.defaultSettings = {\n      // Generali\n      language: 'it',\n      theme: 'auto', // 'light', 'dark', 'auto'\n      \n      // UI/UX\n      uiMode: 'auto', // 'vanilla', 'material', 'auto' - nuova impostazione\n      viewMode: 'grid', // 'grid', 'list'\n      sortBy: 'lastUsed', // 'lastUsed', 'name', 'installDate', 'category'\n      showWelcomeMessage: true,\n      enableAnimations: true,\n      compactMode: false,\n      \n      // Launcher\n      defaultLaunchMode: 'newpage', // Cambiato da 'iframe' a 'newpage' per evitare problemi di sicurezza\n      maxConcurrentApps: 5,\n      showAppTooltips: true,\n      enableKeyboardShortcuts: true,\n      autoUpdateApps: false,\n      \n      // Sync & Backup\n      syncEnabled: false,\n      syncProvider: 'github', // 'github', 'googledrive'\n      autoSyncInterval: 60, // minuti\n      backupBeforeSync: true,\n      \n      // Privacy & Security\n      analyticsEnabled: false,\n      crashReportingEnabled: true,\n      allowTelemetry: false,\n      validateAppsOnLaunch: true,\n      sandboxMode: 'strict', // 'strict', 'moderate', 'permissive'\n      \n      // Performance\n      enableServiceWorker: true,\n      cacheStrategy: 'aggressive', // 'aggressive', 'moderate', 'minimal'\n      preloadApps: false,\n      lazyLoadImages: true,\n      \n      // Developer\n      enableDebugMode: false,\n      showConsoleErrors: false,\n      enableExperimentalFeatures: false\n    };\n\n    // Funzionalità disabilitate\n    this.disabledFeatures = {\n      syncEnabled: true, // SyncManager disabilitato\n      autoUpdateApps: true, // Non implementato\n      analyticsEnabled: true, // Non implementato\n      crashReportingEnabled: true, // Non implementato\n      allowTelemetry: true, // Non implementato\n      enableServiceWorker: true, // PWA disabilitato\n      preloadApps: true, // Non implementato\n      enableExperimentalFeatures: true // Non implementato\n    };\n\n    // Bind methods\n    this.init = this.init.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.loadSettings = this.loadSettings.bind(this);\n    this.saveSettings = this.saveSettings.bind(this);\n    this.resetSettings = this.resetSettings.bind(this);\n    this.exportSettings = this.exportSettings.bind(this);\n    this.importSettings = this.importSettings.bind(this);\n  }\n\n  /**\n   * Inizializza il pannello impostazioni\n   */\n  async init() {\n    try {\n      console.log('⚙️ Inizializzazione pannello impostazioni...');\n      \n      // Carica impostazioni esistenti\n      await this.loadSettings();\n      \n      // Verifica e correggi impostazioni\n      await this.validateAndFixSettings();\n      \n      // Applica impostazioni\n      this.applySettings();\n      \n      console.log('✅ Pannello impostazioni inizializzato');\n    } catch (error) {\n      console.error('❌ Errore inizializzazione pannello impostazioni:', error);\n    }\n  }\n\n  /**\n   * Verifica e correggi le impostazioni per assicurarsi che siano valide\n   */\n  async validateAndFixSettings() {\n    console.log('🔍 Verifica impostazioni...');\n    \n    let needsUpdate = false;\n    const currentSettings = { ...this.currentSettings };\n    \n    // Verifica defaultLaunchMode\n    if (!currentSettings.defaultLaunchMode || \n        !['iframe', 'newpage'].includes(currentSettings.defaultLaunchMode)) {\n      console.log('⚠️ defaultLaunchMode non valido, correzione a \"newpage\"');\n      currentSettings.defaultLaunchMode = 'newpage';\n      needsUpdate = true;\n    }\n    \n    // Verifica altre impostazioni critiche\n    const criticalSettings = {\n      maxConcurrentApps: { min: 1, max: 10, default: 5 },\n      autoSyncInterval: { min: 5, max: 1440, default: 60 },\n      language: { valid: ['it', 'en'], default: 'it' },\n      theme: { valid: ['light', 'dark', 'auto'], default: 'auto' },\n      uiMode: { valid: ['vanilla', 'material', 'auto'], default: 'auto' }\n    };\n    \n    for (const [key, validation] of Object.entries(criticalSettings)) {\n      const value = currentSettings[key];\n      \n      if (validation.min !== undefined && validation.max !== undefined) {\n        // Validazione numerica\n        if (typeof value !== 'number' || value < validation.min || value > validation.max) {\n          console.log(`⚠️ ${key} non valido (${value}), correzione a ${validation.default}`);\n          currentSettings[key] = validation.default;\n          needsUpdate = true;\n        }\n      } else if (validation.valid) {\n        // Validazione enum\n        if (!validation.valid.includes(value)) {\n          console.log(`⚠️ ${key} non valido (${value}), correzione a ${validation.default}`);\n          currentSettings[key] = validation.default;\n          needsUpdate = true;\n        }\n      }\n    }\n    \n    // Salva correzioni se necessarie\n    if (needsUpdate) {\n      console.log('💾 Salvataggio correzioni impostazioni...');\n      this.currentSettings = currentSettings;\n      \n      for (const [key, value] of Object.entries(currentSettings)) {\n        await StorageService.setSetting(key, value);\n      }\n      \n      console.log('✅ Impostazioni corrette salvate');\n    } else {\n      console.log('✅ Tutte le impostazioni sono valide');\n    }\n  }\n\n  /**\n   * Carica le impostazioni dal database\n   */\n  async loadSettings() {\n    try {\n      const savedSettings = await StorageService.getAllSettings();\n      this.currentSettings = { ...this.defaultSettings, ...savedSettings };\n    } catch (error) {\n      console.error('Errore caricamento impostazioni:', error);\n      this.currentSettings = { ...this.defaultSettings };\n    }\n  }\n\n  /**\n   * Applica le impostazioni all'interfaccia\n   */\n  applySettings() {\n    // Tema\n    this.applyTheme(this.currentSettings.theme);\n    \n    // Lingua\n    this.applyLanguage(this.currentSettings.language);\n    \n    // Animazioni\n    this.applyAnimations(this.currentSettings.enableAnimations);\n    \n    // Modalità compatta\n    this.applyCompactMode(this.currentSettings.compactMode);\n    \n    // Debug mode\n    this.applyDebugMode(this.currentSettings.enableDebugMode);\n  }\n\n  /**\n   * Mostra il modal delle impostazioni\n   */\n  showModal() {\n    const modalContent = this.createSettingsModal();\n    showModal('settings-modal', modalContent, {\n      size: 'modal-xl',\n      disableBackdropClose: false\n    });\n\n    // Setup event listeners dopo che il modal è stato creato\n    setTimeout(() => {\n      this.setupModalEventListeners();\n      this.populateForm();\n      this.markDisabledFeatures();\n      \n      // Inizializza la prima sezione\n      this.showSection('general');\n    }, 100);\n  }\n\n  /**\n   * Crea il contenuto del modal delle impostazioni\n   */\n  createSettingsModal() {\n    return `\n      <div class=\"modal-header\">\n        <h2>\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"header-icon\">\n            <path d=\"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z\"/>\n          </svg>\n          Impostazioni AIdeas\n        </h2>\n        <button class=\"modal-close\">&times;</button>\n      </div>\n      \n      <div class=\"modal-body\">\n        <!-- Settings Navigation -->\n        <div class=\"settings-layout\">\n          <nav class=\"settings-nav\">\n            <ul class=\"settings-nav-list\">\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary active\" type=\"button\" data-section=\"general\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4Z\"/>\n                  </svg>\n                  Generale\n                </button>\n              </li>\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary\" type=\"button\" data-section=\"launcher\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M8,5.14V19.14L19,12.14L8,5.14Z\"/>\n                  </svg>\n                  Launcher\n                </button>\n              </li>\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary\" type=\"button\" data-section=\"interface\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M21,16.5C21,16.88 20.79,17.21 20.47,17.38L12.57,21.82C12.41,21.94 12.21,22 12,22C11.79,22 11.59,21.94 11.43,21.82L3.53,17.38C3.21,17.21 3,16.88 3,16.5V7.5C3,7.12 3.21,6.79 3.53,6.62L11.43,2.18C11.59,2.06 11.79,2 12,2C12.21,2 12.41,2.06 12.57,2.18L20.47,6.62C20.79,6.79 21,7.12 21,7.5V16.5M12,4.15L6.04,7.5L12,10.85L17.96,7.5L12,4.15Z\"/>\n                  </svg>\n                  Interfaccia\n                </button>\n              </li>\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary\" type=\"button\" data-section=\"sync\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M12,18A6,6 0 0,1 6,12C6,11 6.25,10.03 6.7,9.2L5.24,7.74C4.46,8.97 4,10.43 4,12A8,8 0 0,0 12,20V23L16,19L12,15M12,4V1L8,5L12,9V6A6,6 0 0,1 18,12C18,13 17.75,13.97 17.3,14.8L18.76,16.26C19.54,15.03 20,13.57 20,12A8,8 0 0,0 12,4Z\"/>\n                  </svg>\n                  Sincronizzazione\n                </button>\n              </li>\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary\" type=\"button\" data-section=\"privacy\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.6 14.8,10V11H16V18H8V11H9.2V10C9.2,8.6 10.6,7 12,7M12,8.2C11.2,8.2 10.4,8.7 10.4,10V11H13.6V10C13.6,8.7 12.8,8.2 12,8.2Z\"/>\n                  </svg>\n                  Privacy & Sicurezza\n                </button>\n              </li>\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary\" type=\"button\" data-section=\"performance\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4M12,6A6,6 0 0,1 18,12H16A4,4 0 0,0 12,8V6Z\"/>\n                  </svg>\n                  Performance\n                </button>\n              </li>\n              <li class=\"settings-nav-item\">\n                <button class=\"settings-nav-btn btn btn-secondary\" type=\"button\" data-section=\"advanced\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M17,8C8,10 5.9,16.17 3.82,21.34L5.71,22L6.66,19.7C7.14,19.87 7.64,20 8,20C9,20 10,19 11,17H12C14,15 16,13 17,8M18.5,2C16.7,2 15.14,2.9 14.22,4.22L15.63,5.63C16.07,5 16.72,4.5 17.5,4.5C18.61,4.5 19.5,5.39 19.5,6.5C19.5,7.28 19,7.93 18.37,8.37L19.78,9.78C21.1,8.86 22,7.3 22,5.5C22,3.57 20.43,2 18.5,2Z\"/>\n                  </svg>\n                  Avanzate\n                </button>\n              </li>\n            </ul>\n          </nav>\n\n          <!-- Settings Content -->\n          <div class=\"settings-content\">\n            \n            <!-- General Section -->\n            <div class=\"settings-section active\" id=\"section-general\">\n              <h3>Impostazioni Generali</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Localizzazione</h4>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-language\">Lingua</label>\n                  <select id=\"setting-language\" class=\"form-input\">\n                    <option value=\"it\">Italiano</option>\n                    <option value=\"en\">English</option>\n                    <option value=\"es\">Español</option>\n                    <option value=\"fr\">Français</option>\n                    <option value=\"de\">Deutsch</option>\n                  </select>\n                  <p class=\"setting-description\">Lingua dell'interfaccia utente</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-uiMode\">Interfaccia Utente</label>\n                  <select id=\"setting-uiMode\" class=\"form-input\">\n                    <option value=\"auto\">Automatico (rileva e fallback)</option>\n                    <option value=\"vanilla\">Vanilla (classica)</option>\n                    <option value=\"material\">Material UI (moderna)</option>\n                  </select>\n                  <p class=\"setting-description\">Tipo di interfaccia da utilizzare</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-theme\">Tema</label>\n                  <select id=\"setting-theme\" class=\"form-input\">\n                    <option value=\"auto\">Automatico (segue sistema)</option>\n                    <option value=\"light\">Chiaro</option>\n                    <option value=\"dark\">Scuro</option>\n                  </select>\n                  <p class=\"setting-description\">Aspetto dell'interfaccia</p>\n                </div>\n              </div>\n              \n              <div class=\"settings-group\">\n                <h4>Comportamento</h4>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-showWelcomeMessage\">\n                    <span class=\"checkmark\"></span>\n                    Mostra messaggio di benvenuto\n                  </label>\n                  <p class=\"setting-description\">Visualizza il messaggio al primo avvio</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-enableKeyboardShortcuts\">\n                    <span class=\"checkmark\"></span>\n                    Abilita scorciatoie da tastiera\n                  </label>\n                  <p class=\"setting-description\">Ctrl+K per ricerca, Ctrl+N per nuova app, etc.</p>\n                </div>\n              </div>\n            </div>\n\n            <!-- Launcher Section -->\n            <div class=\"settings-section\" id=\"section-launcher\">\n              <h3>Configurazione Launcher</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Modalità di Apertura App</h4>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-defaultLaunchMode\">Modalità predefinita</label>\n                  <select id=\"setting-defaultLaunchMode\" class=\"form-input\">\n                    <option value=\"iframe\">Finestra modale (sicura)</option>\n                    <option value=\"newpage\">Nuova pagina del browser</option>\n                  </select>\n                  <p class=\"setting-description\">Come aprire le app per default</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-maxConcurrentApps\">App concorrenti massime</label>\n                  <input type=\"number\" id=\"setting-maxConcurrentApps\" class=\"form-input\" min=\"1\" max=\"20\" value=\"5\">\n                  <p class=\"setting-description\">Numero massimo di app aperte contemporaneamente</p>\n                </div>\n                \n                <div class=\"setting-item\" id=\"setting-autoUpdateApps-container\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-autoUpdateApps\">\n                    <span class=\"checkmark\"></span>\n                    Aggiornamento automatico app\n                  </label>\n                  <p class=\"setting-description\">Controlla automaticamente aggiornamenti da GitHub</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-validateAppsOnLaunch\">\n                    <span class=\"checkmark\"></span>\n                    Valida app al lancio\n                  </label>\n                  <p class=\"setting-description\">Controlla integrità delle app prima dell'esecuzione</p>\n                </div>\n              </div>\n              \n              <div class=\"settings-group\">\n                <h4>Sandbox e Sicurezza</h4>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-sandboxMode\">Modalità sandbox</label>\n                  <select id=\"setting-sandboxMode\" class=\"form-input\">\n                    <option value=\"strict\">Rigorosa (massima sicurezza)</option>\n                    <option value=\"moderate\">Moderata (bilanciata)</option>\n                    <option value=\"permissive\">Permissiva (più libertà)</option>\n                  </select>\n                  <p class=\"setting-description\">Livello di restrizioni per l'esecuzione delle app</p>\n                </div>\n              </div>\n            </div>\n\n            <!-- Interface Section -->\n            <div class=\"settings-section\" id=\"section-interface\">\n              <h3>Configurazione Interfaccia</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Visualizzazione</h4>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-viewMode\">Vista predefinita</label>\n                  <select id=\"setting-viewMode\" class=\"form-input\">\n                    <option value=\"grid\">Griglia</option>\n                    <option value=\"list\">Lista</option>\n                  </select>\n                  <p class=\"setting-description\">Come visualizzare le app nella dashboard</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-sortBy\">Ordinamento predefinito</label>\n                  <select id=\"setting-sortBy\" class=\"form-input\">\n                    <option value=\"lastUsed\">Ultimo utilizzo</option>\n                    <option value=\"name\">Nome A-Z</option>\n                    <option value=\"installDate\">Data installazione</option>\n                    <option value=\"category\">Categoria</option>\n                  </select>\n                  <p class=\"setting-description\">Criterio di ordinamento delle app</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-compactMode\">\n                    <span class=\"checkmark\"></span>\n                    Modalità compatta\n                  </label>\n                  <p class=\"setting-description\">Interfaccia più densa con meno spazi</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-enableAnimations\">\n                    <span class=\"checkmark\"></span>\n                    Abilita animazioni\n                  </label>\n                  <p class=\"setting-description\">Transizioni ed effetti animati</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-showAppTooltips\">\n                    <span class=\"checkmark\"></span>\n                    Mostra tooltip\n                  </label>\n                  <p class=\"setting-description\">Suggerimenti al passaggio del mouse</p>\n                </div>\n              </div>\n            </div>\n\n            <!-- Sync Section -->\n            <div class=\"settings-section\" id=\"section-sync\">\n              <h3>Sincronizzazione e Backup</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Configurazione Cloud</h4>\n                \n                <div class=\"setting-item\" id=\"setting-syncEnabled-container\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-syncEnabled\">\n                    <span class=\"checkmark\"></span>\n                    Abilita sincronizzazione\n                  </label>\n                  <p class=\"setting-description\">Sincronizza app e impostazioni su cloud</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-syncProvider\">Provider di sincronizzazione</label>\n                  <select id=\"setting-syncProvider\" class=\"form-input\">\n                    <option value=\"github\">GitHub Gist</option>\n                    <option value=\"googledrive\">Google Drive</option>\n                  </select>\n                  <p class=\"setting-description\">Servizio cloud per la sincronizzazione</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-autoSyncInterval\">Intervallo auto-sync (minuti)</label>\n                  <input type=\"number\" id=\"setting-autoSyncInterval\" class=\"form-input\" min=\"5\" max=\"1440\" value=\"60\">\n                  <p class=\"setting-description\">Frequenza di sincronizzazione automatica</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-backupBeforeSync\">\n                    <span class=\"checkmark\"></span>\n                    Backup prima della sincronizzazione\n                  </label>\n                  <p class=\"setting-description\">Crea backup locale prima di ogni sync</p>\n                </div>\n              </div>\n              \n              <div class=\"settings-group\">\n                <h4>Gestione Dati</h4>\n                \n                <div class=\"setting-actions\">\n                  <button class=\"btn btn-primary\" id=\"test-ui-change-btn\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6A6,6 0 0,1 18,12A6,6 0 0,1 12,18M20,8.69V4H15.31L12,0.69L8.69,4H4V8.69L0.69,12L4,15.31V20H8.69L12,23.31L15.31,20H20V15.31L23.31,12L20,8.69Z\"/>\n                    </svg>\n                    Testa Cambio UI\n                  </button>\n                  \n                  <button class=\"btn btn-secondary\" id=\"export-settings-btn\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\n                    </svg>\n                    Esporta Impostazioni\n                  </button>\n                  \n                  <button class=\"btn btn-secondary\" id=\"import-settings-btn\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\n                    </svg>\n                    Importa Impostazioni\n                  </button>\n                  \n                  <button class=\"btn btn-warning\" id=\"reset-settings-btn\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M12,4C14.1,4 16.1,4.8 17.6,6.3C20.7,9.4 20.7,14.5 17.6,17.6C15.8,19.5 13.3,20.2 10.9,19.9L11.4,17.9C13.1,18.1 14.9,17.5 16.2,16.2C18.5,13.9 18.5,10.1 16.2,7.7C15.1,6.6 13.5,6 12,6V10.6L7,5.6L12,0.6V4M6.3,17.6C3.7,15 3.3,11 5.1,7.9L6.6,9.4C5.5,11.6 5.9,14.4 7.8,16.2C8.3,16.7 8.9,17.1 9.6,17.4L9,19.4C8,19 7.1,18.4 6.3,17.6Z\"/>\n                    </svg>\n                    Ripristina Predefinite\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Privacy Section -->\n            <div class=\"settings-section\" id=\"section-privacy\">\n              <h3>Privacy e Sicurezza</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Raccolta Dati</h4>\n                \n                <div class=\"setting-item\" id=\"setting-analyticsEnabled-container\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-analyticsEnabled\">\n                    <span class=\"checkmark\"></span>\n                    Abilita analytics\n                  </label>\n                  <p class=\"setting-description\">Raccolta dati anonimi per migliorare l'app</p>\n                </div>\n                \n                <div class=\"setting-item\" id=\"setting-crashReportingEnabled-container\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-crashReportingEnabled\">\n                    <span class=\"checkmark\"></span>\n                    Report errori automatici\n                  </label>\n                  <p class=\"setting-description\">Invia automaticamente report degli errori</p>\n                </div>\n                \n                <div class=\"setting-item\" id=\"setting-allowTelemetry-container\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-allowTelemetry\">\n                    <span class=\"checkmark\"></span>\n                    Telemetria di utilizzo\n                  </label>\n                  <p class=\"setting-description\">Condividi statistiche d'uso anonime</p>\n                </div>\n              </div>\n              \n              <div class=\"settings-group\">\n                <h4>Gestione Privacy</h4>\n                \n                <div class=\"setting-actions\">\n                  <button class=\"btn btn-secondary\" id=\"clear-cache-btn\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\"/>\n                    </svg>\n                    Svuota Cache\n                  </button>\n                  \n                  <button class=\"btn btn-warning\" id=\"clear-all-data-btn\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\"/>\n                    </svg>\n                    Elimina Tutti i Dati\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Performance Section -->\n            <div class=\"settings-section\" id=\"section-performance\">\n              <h3>Performance e Cache</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Ottimizzazioni</h4>\n                \n                <div class=\"setting-item\" id=\"setting-enableServiceWorker-container\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-enableServiceWorker\">\n                    <span class=\"checkmark\"></span>\n                    Abilita Service Worker\n                  </label>\n                  <p class=\"setting-description\">Cache intelligente e funzionalità offline</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label for=\"setting-cacheStrategy\">Strategia cache</label>\n                  <select id=\"setting-cacheStrategy\" class=\"form-input\">\n                    <option value=\"aggressive\">Aggressiva (più veloce, più spazio)</option>\n                    <option value=\"moderate\">Moderata (bilanciata)</option>\n                    <option value=\"minimal\">Minimale (meno spazio)</option>\n                  </select>\n                  <p class=\"setting-description\">Quanto contenuto cachare per l'offline</p>\n                </div>\n                \n                <div class=\"setting-item\" id=\"setting-preloadApps-container\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-preloadApps\">\n                    <span class=\"checkmark\"></span>\n                    Precarica app frequenti\n                  </label>\n                  <p class=\"setting-description\">Carica in background le app più usate</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-lazyLoadImages\">\n                    <span class=\"checkmark\"></span>\n                    Caricamento lazy delle immagini\n                  </label>\n                  <p class=\"setting-description\">Carica le immagini solo quando necessario</p>\n                </div>\n              </div>\n              \n              <div class=\"settings-group\">\n                <h4>Statistiche Storage</h4>\n                <div class=\"storage-stats\" id=\"storage-stats\">\n                  <div class=\"stat-item\">\n                    <span class=\"stat-label\">Spazio utilizzato:</span>\n                    <span class=\"stat-value\" id=\"storage-used\">Caricamento...</span>\n                  </div>\n                  <div class=\"stat-item\">\n                    <span class=\"stat-label\">App installate:</span>\n                    <span class=\"stat-value\" id=\"apps-count\">Caricamento...</span>\n                  </div>\n                  <div class=\"stat-item\">\n                    <span class=\"stat-label\">Cache size:</span>\n                    <span class=\"stat-value\" id=\"cache-size\">Caricamento...</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Advanced Section -->\n            <div class=\"settings-section\" id=\"section-advanced\">\n              <h3>Impostazioni Avanzate</h3>\n              \n              <div class=\"settings-group\">\n                <h4>Developer Options</h4>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-enableDebugMode\">\n                    <span class=\"checkmark\"></span>\n                    Modalità debug\n                  </label>\n                  <p class=\"setting-description\">Mostra informazioni di debug nell'interfaccia</p>\n                </div>\n                \n                <div class=\"setting-item\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-showConsoleErrors\">\n                    <span class=\"checkmark\"></span>\n                    Mostra errori console\n                  </label>\n                  <p class=\"setting-description\">Visualizza errori JavaScript nell'interfaccia</p>\n                </div>\n                \n                <div class=\"setting-item\" id=\"setting-enableExperimentalFeatures-container\">\n                  <label class=\"setting-checkbox\">\n                    <input type=\"checkbox\" id=\"setting-enableExperimentalFeatures\">\n                    <span class=\"checkmark\"></span>\n                    Funzionalità sperimentali\n                  </label>\n                  <p class=\"setting-description\">Abilita features in fase di test</p>\n                </div>\n              </div>\n              \n              <div class=\"settings-group\">\n                <h4>Informazioni Sistema</h4>\n                <div class=\"system-info\" id=\"system-info\">\n                  <div class=\"info-item\">\n                    <span class=\"info-label\">Versione SAKAI:</span>\n                    <span class=\"info-value\">1.0.0</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <span class=\"info-label\">User Agent:</span>\n                    <span class=\"info-value\" id=\"user-agent\">Caricamento...</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <span class=\"info-label\">Platform:</span>\n                    <span class=\"info-value\" id=\"platform\">Caricamento...</span>\n                  </div>\n                  <div class=\"info-item\">\n                    <span class=\"info-label\">PWA Support:</span>\n                    <span class=\"info-value\" id=\"pwa-support\">Caricamento...</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"modal-footer\">\n        <button class=\"btn btn-secondary\" id=\"cancel-settings\" type=\"button\">Annulla</button>\n        <button class=\"btn btn-primary\" id=\"save-settings\" type=\"button\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\"/>\n          </svg>\n          Salva Impostazioni\n        </button>\n      </div>\n    `;\n  }\n\n  /**\n   * Marca le funzionalità disabilitate\n   */\n  markDisabledFeatures() {\n    const modal = document.getElementById('settings-modal');\n    if (!modal) return;\n\n    Object.entries(this.disabledFeatures).forEach(([feature, isDisabled]) => {\n      if (isDisabled) {\n        const container = modal.querySelector(`#setting-${this.camelToKebab(feature)}-container`);\n        const input = modal.querySelector(`#setting-${this.camelToKebab(feature)}`);\n        \n        if (container) {\n          container.classList.add('disabled');\n        }\n        \n        if (input) {\n          input.disabled = true;\n          input.checked = false;\n        }\n      }\n    });\n  }\n\n  /**\n   * Setup event listeners per il modal\n   */\n  setupModalEventListeners() {\n    const modal = document.getElementById('settings-modal');\n    if (!modal) return;\n\n    // Navigation between sections\n    const navButtons = modal.querySelectorAll('.settings-nav-btn');\n    navButtons.forEach(btn => {\n      btn.addEventListener('click', () => {\n        const section = btn.dataset.section;\n        this.showSection(section);\n      });\n    });\n\n    // Settings actions\n    modal.querySelector('#export-settings-btn')?.addEventListener('click', () => {\n      this.exportSettings();\n    });\n\n    modal.querySelector('#import-settings-btn')?.addEventListener('click', () => {\n      this.importSettings();\n    });\n\n    modal.querySelector('#reset-settings-btn')?.addEventListener('click', () => {\n      this.resetSettings();\n    });\n\n    modal.querySelector('#clear-cache-btn')?.addEventListener('click', () => {\n      this.clearCache();\n    });\n\n    modal.querySelector('#clear-all-data-btn')?.addEventListener('click', () => {\n      this.clearAllData();\n    });\n\n    modal.querySelector('#test-ui-change-btn')?.addEventListener('click', () => {\n      this.testUIChange();\n    });\n\n    // Modal actions\n    modal.querySelector('#cancel-settings')?.addEventListener('click', () => {\n      hideModal('settings-modal');\n    });\n\n    modal.querySelector('#save-settings')?.addEventListener('click', () => {\n      this.saveSettings();\n    });\n\n    // Real-time theme preview\n    modal.querySelector('#setting-theme')?.addEventListener('change', (e) => {\n      this.applyTheme(e.target.value);\n    });\n\n    // Real-time animation preview\n    modal.querySelector('#setting-enableAnimations')?.addEventListener('change', (e) => {\n      this.applyAnimations(e.target.checked);\n    });\n\n    // Real-time compact mode preview\n    modal.querySelector('#setting-compactMode')?.addEventListener('change', (e) => {\n      this.applyCompactMode(e.target.checked);\n    });\n\n    // Load statistics\n    this.loadStorageStats();\n    this.loadSystemInfo();\n  }\n\n  /**\n   * Mostra una sezione specifica\n   */\n  showSection(sectionName) {\n    const modal = document.getElementById('settings-modal');\n    if (!modal) return;\n\n    // Nascondi tutte le sezioni\n    const sections = modal.querySelectorAll('.settings-section');\n    sections.forEach(section => {\n      section.style.display = 'none';\n      section.classList.remove('active');\n    });\n\n    // Mostra la sezione selezionata\n    const targetSection = modal.querySelector(`#section-${sectionName}`);\n    if (targetSection) {\n      targetSection.style.display = 'block';\n      targetSection.classList.add('active');\n    }\n\n    // Aggiorna i pulsanti di navigazione\n    const navButtons = modal.querySelectorAll('.settings-nav-btn');\n    navButtons.forEach(btn => {\n      btn.classList.remove('active');\n      if (btn.dataset.section === sectionName) {\n        btn.classList.add('active');\n      }\n    });\n  }\n\n  /**\n   * Popola il form con le impostazioni correnti\n   */\n  populateForm() {\n    const modal = document.getElementById('settings-modal');\n    if (!modal) return;\n\n    // Mappa inversa dei campi\n    const fieldMapping = {\n      'language': 'setting-language',\n      'theme': 'setting-theme',\n      'uiMode': 'setting-uiMode',\n      'showWelcomeMessage': 'setting-showWelcomeMessage',\n      'enableKeyboardShortcuts': 'setting-enableKeyboardShortcuts',\n      'defaultLaunchMode': 'setting-defaultLaunchMode',\n      'maxConcurrentApps': 'setting-maxConcurrentApps',\n      'autoUpdateApps': 'setting-autoUpdateApps',\n      'validateAppsOnLaunch': 'setting-validateAppsOnLaunch',\n      'sandboxMode': 'setting-sandboxMode',\n      'viewMode': 'setting-viewMode',\n      'sortBy': 'setting-sortBy',\n      'compactMode': 'setting-compactMode',\n      'enableAnimations': 'setting-enableAnimations',\n      'showAppTooltips': 'setting-showAppTooltips',\n      'syncEnabled': 'setting-syncEnabled',\n      'syncProvider': 'setting-syncProvider',\n      'autoSyncInterval': 'setting-autoSyncInterval',\n      'backupBeforeSync': 'setting-backupBeforeSync',\n      'analyticsEnabled': 'setting-analyticsEnabled',\n      'crashReportingEnabled': 'setting-crashReportingEnabled',\n      'allowTelemetry': 'setting-allowTelemetry',\n      'enableServiceWorker': 'setting-enableServiceWorker',\n      'cacheStrategy': 'setting-cacheStrategy',\n      'preloadApps': 'setting-preloadApps',\n      'lazyLoadImages': 'setting-lazyLoadImages',\n      'enableDebugMode': 'setting-enableDebugMode',\n      'showConsoleErrors': 'setting-showConsoleErrors',\n      'enableExperimentalFeatures': 'setting-enableExperimentalFeatures'\n    };\n\n    // Itera su tutte le impostazioni e popola i campi\n    for (const [key, value] of Object.entries(this.currentSettings)) {\n      const fieldId = fieldMapping[key];\n      if (fieldId) {\n        const field = modal.querySelector(`#${fieldId}`);\n        if (field && !field.disabled) {\n          if (field.type === 'checkbox') {\n            field.checked = Boolean(value);\n          } else {\n            field.value = value;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Salva le impostazioni\n   */\n  async saveSettings() {\n    try {\n      // Raccogli dati dal form\n      const formData = this.collectFormData();\n      \n      // Aggiorna impostazioni correnti\n      this.currentSettings = { ...this.currentSettings, ...formData };\n      \n      // Salva nel database\n      for (const [key, value] of Object.entries(this.currentSettings)) {\n        await StorageService.setSetting(key, value);\n      }\n      \n      // Applica le impostazioni\n      this.applySettings();\n      \n      // Chiudi modal\n      hideModal('settings-modal');\n      \n      // Mostra conferma\n      showToast('Impostazioni salvate con successo', 'success');\n      \n      // Ricarica pagina se necessario\n      if (this.requiresReload(formData)) {\n        const confirmed = await showConfirmPopup({\n          title: 'Ricarica Pagina',\n          message: 'Alcune modifiche richiedono il ricaricamento della pagina. Ricaricare ora?',\n          icon: 'info',\n          confirmText: 'Ricarica',\n          cancelText: 'Più tardi',\n          type: 'default'\n        });\n        \n        if (confirmed) {\n          window.location.reload();\n        }\n      }\n      \n    } catch (error) {\n      console.error('Errore salvataggio impostazioni:', error);\n      showToast('Errore durante il salvataggio delle impostazioni', 'error');\n    }\n  }\n\n  /**\n   * Raccogli dati dal form\n   */\n  collectFormData() {\n    const formData = {};\n    const modal = document.getElementById('settings-modal');\n    if (!modal) return formData;\n\n    // Mappa dei campi per gestire le differenze tra ID e chiavi\n    const fieldMapping = {\n      'setting-language': 'language',\n      'setting-theme': 'theme',\n      'setting-uiMode': 'uiMode',\n      'setting-showWelcomeMessage': 'showWelcomeMessage',\n      'setting-enableKeyboardShortcuts': 'enableKeyboardShortcuts',\n      'setting-defaultLaunchMode': 'defaultLaunchMode',\n      'setting-maxConcurrentApps': 'maxConcurrentApps',\n      'setting-autoUpdateApps': 'autoUpdateApps',\n      'setting-validateAppsOnLaunch': 'validateAppsOnLaunch',\n      'setting-sandboxMode': 'sandboxMode',\n      'setting-viewMode': 'viewMode',\n      'setting-sortBy': 'sortBy',\n      'setting-compactMode': 'compactMode',\n      'setting-enableAnimations': 'enableAnimations',\n      'setting-showAppTooltips': 'showAppTooltips',\n      'setting-syncEnabled': 'syncEnabled',\n      'setting-syncProvider': 'syncProvider',\n      'setting-autoSyncInterval': 'autoSyncInterval',\n      'setting-backupBeforeSync': 'backupBeforeSync',\n      'setting-analyticsEnabled': 'analyticsEnabled',\n      'setting-crashReportingEnabled': 'crashReportingEnabled',\n      'setting-allowTelemetry': 'allowTelemetry',\n      'setting-enableServiceWorker': 'enableServiceWorker',\n      'setting-cacheStrategy': 'cacheStrategy',\n      'setting-preloadApps': 'preloadApps',\n      'setting-lazyLoadImages': 'lazyLoadImages',\n      'setting-enableDebugMode': 'enableDebugMode',\n      'setting-showConsoleErrors': 'showConsoleErrors',\n      'setting-enableExperimentalFeatures': 'enableExperimentalFeatures'\n    };\n\n    const inputs = modal.querySelectorAll('input[id^=\"setting-\"], select[id^=\"setting-\"], textarea[id^=\"setting-\"]');\n    inputs.forEach(input => {\n      const fieldId = input.id;\n      const key = fieldMapping[fieldId];\n      \n      if (key && !input.disabled) {\n        if (input.type === 'checkbox') {\n          formData[key] = input.checked;\n        } else if (input.type === 'number') {\n          formData[key] = parseInt(input.value) || 0;\n        } else {\n          formData[key] = input.value;\n        }\n      }\n    });\n\n    return formData;\n  }\n\n  /**\n   * Applica le impostazioni all'interfaccia\n   */\n  applyTheme(theme) {\n    const root = document.documentElement;\n    \n    if (theme === 'auto') {\n      // Segui preferenza sistema\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      root.setAttribute('data-theme', prefersDark ? 'dark' : 'light');\n    } else {\n      root.setAttribute('data-theme', theme);\n    }\n  }\n\n  applyLanguage(language) {\n    document.documentElement.setAttribute('lang', language);\n    // Qui si potrebbe implementare l'i18n completo\n  }\n\n  applyAnimations(enabled) {\n    const root = document.documentElement;\n    if (enabled) {\n      root.classList.remove('no-animations');\n    } else {\n      root.classList.add('no-animations');\n    }\n  }\n\n  applyCompactMode(enabled) {\n    const root = document.documentElement;\n    if (enabled) {\n      root.classList.add('compact-mode');\n    } else {\n      root.classList.remove('compact-mode');\n    }\n  }\n\n  applyDebugMode(enabled) {\n    const root = document.documentElement;\n    if (enabled) {\n      root.classList.add('debug-mode');\n    } else {\n      root.classList.remove('debug-mode');\n    }\n  }\n\n  /**\n   * Reset alle impostazioni predefinite\n   */\n  async resetSettings() {\n    const confirmed = await showConfirmPopup({\n      title: 'Reset Impostazioni',\n      message: 'Sei sicuro di voler ripristinare tutte le impostazioni ai valori predefiniti?',\n      icon: 'warning',\n      confirmText: 'Reset',\n      cancelText: 'Annulla',\n      type: 'default'\n    });\n    if (!confirmed) return;\n\n    try {\n      // Reset alle impostazioni predefinite\n      this.currentSettings = { ...this.defaultSettings };\n      \n      // Salva nel database\n      for (const [key, value] of Object.entries(this.currentSettings)) {\n        await StorageService.setSetting(key, value);\n      }\n      \n      // Ripopola form\n      this.populateForm();\n      \n      // Applica impostazioni\n      this.applySettings();\n      \n      showToast('Impostazioni ripristinate ai valori predefiniti', 'success');\n      \n    } catch (error) {\n      console.error('Errore reset impostazioni:', error);\n      showToast('Errore durante il ripristino delle impostazioni', 'error');\n    }\n  }\n\n  /**\n   * Esporta impostazioni\n   */\n  async exportSettings() {\n    try {\n      const exportData = {\n        version: '1.0.0',\n        timestamp: new Date().toISOString(),\n        settings: this.currentSettings,\n        deviceInfo: getDeviceInfo()\n      };\n      \n      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `sakai-settings-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast('Impostazioni esportate con successo', 'success');\n      \n    } catch (error) {\n      console.error('Errore export impostazioni:', error);\n      showToast('Errore durante l\\'esportazione delle impostazioni', 'error');\n    }\n  }\n\n  /**\n   * Importa impostazioni\n   */\n  importSettings() {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.json';\n    \n    input.onchange = async (e) => {\n      try {\n        const file = e.target.files[0];\n        if (!file) return;\n        \n        const text = await file.text();\n        const importData = JSON.parse(text);\n        \n        // Validazione formato\n        if (!importData.settings || !importData.version) {\n          throw new Error('Formato file non valido');\n        }\n        \n        // Merge con impostazioni attuali\n        this.currentSettings = { ...this.defaultSettings, ...importData.settings };\n        \n        // Salva nel database\n        for (const [key, value] of Object.entries(this.currentSettings)) {\n          await StorageService.setSetting(key, value);\n        }\n        \n        // Ripopola form\n        this.populateForm();\n        \n        // Applica impostazioni\n        this.applySettings();\n        \n        showToast('Impostazioni importate con successo', 'success');\n        \n      } catch (error) {\n        console.error('Errore import impostazioni:', error);\n        showToast('Errore durante l\\'importazione delle impostazioni', 'error');\n      }\n    };\n    \n    input.click();\n  }\n\n  /**\n   * Svuota cache\n   */\n  async clearCache() {\n    try {\n      if ('caches' in window) {\n        const cacheNames = await caches.keys();\n        await Promise.all(cacheNames.map(name => caches.delete(name)));\n      }\n      \n      showToast('Cache svuotata con successo', 'success');\n      this.loadStorageStats(); // Ricarica statistiche\n      \n    } catch (error) {\n      console.error('Errore svuotamento cache:', error);\n      showToast('Errore durante lo svuotamento della cache', 'error');\n    }\n  }\n\n  /**\n   * Elimina tutti i dati\n   */\n  async clearAllData() {\n    const confirmed = await showConfirmPopup({\n      title: 'Elimina Tutti i Dati',\n      message: 'ATTENZIONE: Questa operazione eliminerà TUTTI i dati di SAKAI incluse app, impostazioni e cache. Continuare?',\n      icon: 'warning',\n      confirmText: 'Elimina',\n      cancelText: 'Annulla',\n      type: 'default'\n    });\n    if (!confirmed) return;\n\n    const doubleConfirm = await showConfirmPopup({\n      title: 'Conferma Eliminazione',\n      message: 'Sei veramente sicuro? Questa operazione NON può essere annullata!',\n      icon: 'warning',\n      confirmText: 'Elimina',\n      cancelText: 'Annulla',\n      type: 'default'\n    });\n    if (!doubleConfirm) return;\n\n    try {\n      // Elimina database IndexedDB\n      await StorageService.close();\n      indexedDB.deleteDatabase('SAKAI_DB');\n      \n      // Elimina localStorage\n      Object.keys(localStorage).forEach(key => {\n        if (key.startsWith('sakai_')) {\n          localStorage.removeItem(key);\n        }\n      });\n      \n      // Elimina cache\n      if ('caches' in window) {\n        const cacheNames = await caches.keys();\n        await Promise.all(cacheNames.map(name => caches.delete(name)));\n      }\n      \n      showToast('Tutti i dati sono stati eliminati', 'success');\n      \n      // Ricarica la pagina dopo un breve delay\n      setTimeout(() => {\n        window.location.reload();\n      }, 2000);\n      \n    } catch (error) {\n      console.error('Errore eliminazione dati:', error);\n      showToast('Errore durante l\\'eliminazione dei dati', 'error');\n    }\n  }\n\n  /**\n   * Carica le statistiche dello storage\n   */\n  async loadStorageStats() {\n    try {\n      const modal = document.getElementById('settings-modal');\n      if (!modal) return;\n\n      // Ottieni statistiche dal database\n      const stats = await StorageService.getStats();\n      const apps = await StorageService.getAllApps();\n      \n      // Calcola dimensioni\n      const dbSize = await StorageService.estimateDbSize();\n      \n      // Aggiorna UI\n      const storageUsedEl = modal.querySelector('#storage-used');\n      const appsCountEl = modal.querySelector('#apps-count');\n      const cacheSizeEl = modal.querySelector('#cache-size');\n      \n      if (storageUsedEl) {\n        storageUsedEl.textContent = formatFileSize(dbSize);\n      }\n      \n      if (appsCountEl) {\n        appsCountEl.textContent = apps.length.toString();\n      }\n      \n      if (cacheSizeEl) {\n        // Stima della cache (se disponibile)\n        const cacheSize = stats.cacheSize || 0;\n        cacheSizeEl.textContent = formatFileSize(cacheSize);\n      }\n      \n    } catch (error) {\n      console.error('Errore caricamento statistiche storage:', error);\n      \n      const modal = document.getElementById('settings-modal');\n      if (modal) {\n        const elements = ['storage-used', 'apps-count', 'cache-size'];\n        elements.forEach(id => {\n          const el = modal.querySelector(`#${id}`);\n          if (el) el.textContent = 'Errore caricamento';\n        });\n      }\n    }\n  }\n\n  /**\n   * Carica le informazioni di sistema\n   */\n  loadSystemInfo() {\n    try {\n      const modal = document.getElementById('settings-modal');\n      if (!modal) return;\n\n      // Informazioni di sistema\n      const userAgentEl = modal.querySelector('#user-agent');\n      const platformEl = modal.querySelector('#platform');\n      const pwaSupportEl = modal.querySelector('#pwa-support');\n      \n      if (userAgentEl) {\n        userAgentEl.textContent = navigator.userAgent.substring(0, 50) + '...';\n      }\n      \n      if (platformEl) {\n        platformEl.textContent = navigator.platform || 'Sconosciuto';\n      }\n      \n      if (pwaSupportEl) {\n        const hasServiceWorker = 'serviceWorker' in navigator;\n        const hasManifest = 'manifest' in document.createElement('link');\n        const hasPushManager = 'PushManager' in window;\n        \n        const pwaFeatures = [];\n        if (hasServiceWorker) pwaFeatures.push('Service Worker');\n        if (hasManifest) pwaFeatures.push('Web App Manifest');\n        if (hasPushManager) pwaFeatures.push('Push Notifications');\n        \n        pwaSupportEl.textContent = pwaFeatures.length > 0 ? pwaFeatures.join(', ') : 'Non supportato';\n      }\n      \n    } catch (error) {\n      console.error('Errore caricamento informazioni sistema:', error);\n      \n      const modal = document.getElementById('settings-modal');\n      if (modal) {\n        const elements = ['user-agent', 'platform', 'pwa-support'];\n        elements.forEach(id => {\n          const el = modal.querySelector(`#${id}`);\n          if (el) el.textContent = 'Errore caricamento';\n        });\n      }\n    }\n  }\n\n  /**\n   * Utility methods\n   */\n  camelToKebab(str) {\n    return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  kebabToCamel(str) {\n    return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n  }\n\n  /**\n   * Determina se le modifiche richiedono ricaricamento della pagina\n   */\n  requiresReload(formData) {\n    const reloadSettings = [\n      'language',\n      'theme',\n      'uiMode',\n      'enableServiceWorker',\n      'cacheStrategy'\n    ];\n    \n    return reloadSettings.some(setting => {\n      const oldValue = this.currentSettings[setting];\n      const newValue = formData[setting];\n      return oldValue !== undefined && oldValue !== newValue;\n    });\n  }\n\n  /**\n   * Getter per impostazioni correnti\n   */\n  getSetting(key, defaultValue = null) {\n    return this.currentSettings[key] !== undefined ? this.currentSettings[key] : defaultValue;\n  }\n\n  /**\n   * Setter per singola impostazione\n   */\n  async setSetting(key, value) {\n    this.currentSettings[key] = value;\n    await StorageService.setSetting(key, value);\n    this.applySettings();\n  }\n\n  /**\n   * Testa il cambio di interfaccia\n   */\n  async testUIChange() {\n    try {\n      const currentMode = this.currentSettings.uiMode || 'auto';\n      let newMode;\n      \n      // Cicla tra le modalità\n      switch (currentMode) {\n        case 'auto':\n          newMode = 'material';\n          break;\n        case 'material':\n          newMode = 'vanilla';\n          break;\n        case 'vanilla':\n          newMode = 'auto';\n          break;\n        default:\n          newMode = 'auto';\n      }\n      \n      // Salva nuova modalità\n      await this.setSetting('uiMode', newMode);\n      \n      // Mostra conferma\n      const confirmed = await showConfirmPopup({\n        title: 'Cambio Interfaccia',\n        message: `Passaggio da ${currentMode} a ${newMode}. La pagina verrà ricaricata. Continuare?`,\n        icon: 'info',\n        confirmText: 'Cambia',\n        cancelText: 'Annulla',\n        type: 'default'\n      });\n      \n      if (confirmed) {\n        showToast(`Cambio interfaccia a ${newMode}...`, 'info');\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      } else {\n        // Ripristina modalità precedente\n        await this.setSetting('uiMode', currentMode);\n      }\n      \n    } catch (error) {\n      console.error('Errore test cambio UI:', error);\n      showToast('Errore durante il test del cambio interfaccia', 'error');\n    }\n  }\n}","/**\n * AIdeas - Main Entry Point\n * Punto di ingresso principale dell'applicazione\n */\n\nimport StorageService from './services/StorageService.js';\nimport AppLauncher from './components/AppLauncher.js';\nimport AppImporter from './components/AppImporter.js';\nimport AppCard from './components/AppCard.js';\nimport SyncManager from './components/SyncManager.js';\nimport SettingPanel from './components/SettingPanel.js';\nimport { \n  showToast, \n  hideToast, \n  showModal,\n  hideModal,\n  showConfirmPopup,\n  showDeleteAppConfirm,\n  showImportAppConfirm,\n  showResetSettingsConfirm\n} from './utils/helpers.js';\nimport { DEBUG, ErrorTracker, PerformanceMonitor } from './utils/debug.js';\n\n/**\n * Classe principale dell'applicazione AIdeas\n * Gestisce l'inizializzazione e il ciclo di vita dell'app\n */\nclass AIdeasApp {\n  constructor() {\n    this.currentView = 'all';\n    this.currentSort = 'lastUsed';\n    this.currentViewMode = 'grid';\n    this.searchQuery = '';\n    this.apps = [];\n    this.filteredApps = [];\n    \n    // Componenti\n    this.storage = StorageService;\n    this.appLauncher = new AppLauncher();\n    this.appImporter = new AppImporter();\n    this.settingsPanel = new SettingPanel();\n    // this.syncManager = new SyncManager(); // DISABILITATO TEMPORANEAMENTE\n    \n    // Inizializza debug\n    ErrorTracker.init(); // Inizializza il tracker di errori\n    \n    // Bind methods\n    this.init = this.init.bind(this);\n    this.setupEventListeners = this.setupEventListeners.bind(this);\n    this.loadApps = this.loadApps.bind(this);\n    this.renderApps = this.renderApps.bind(this);\n    this.filterApps = this.filterApps.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.handleSortChange = this.handleSortChange.bind(this);\n    this.handleViewChange = this.handleViewChange.bind(this);\n    this.showAppMenu = this.showAppMenu.bind(this);\n  }\n\n  /**\n   * Inizializza l'applicazione\n   */\n  async init() {\n    try {\n      console.log('🚀 Inizializzazione AIdeas...');\n      \n      // Inizializza storage\n      await this.storage.ensureDbOpen();\n      \n      // Verifica e correggi impostazioni critiche\n      await this.verifyCriticalSettings();\n      \n      // Test impostazioni (solo in debug)\n      if (localStorage.getItem('aideas_debug') === 'true') {\n        await this.testSettings();\n      }\n      \n      // Inizializza componenti\n      await this.appLauncher.init();\n      await this.appImporter.init();\n      await this.settingsPanel.init();\n      // await this.syncManager.init(); // DISABILITATO TEMPORANEAMENTE\n      \n      // Carica app\n      await this.loadApps();\n      \n      // Setup event listeners\n      this.setupEventListeners();\n      \n      // Nascondi loading screen\n      this.hideLoadingScreen();\n      \n      console.log('✅ AIdeas inizializzata con successo');\n      \n    } catch (error) {\n      console.error('❌ Errore inizializzazione AIdeas:', error);\n      this.showErrorScreen(error);\n    }\n  }\n\n  /**\n   * Verifica e correggi le impostazioni critiche all'avvio\n   */\n  async verifyCriticalSettings() {\n    console.log('🔍 Verifica impostazioni critiche...');\n    \n    // Verifica defaultLaunchMode\n    const currentLaunchMode = await this.storage.getSetting('defaultLaunchMode');\n    if (!currentLaunchMode || !['iframe', 'newpage'].includes(currentLaunchMode)) {\n      console.log('⚠️ defaultLaunchMode non valido, correzione a \"newpage\"');\n      await this.storage.setSetting('defaultLaunchMode', 'newpage');\n    }\n    \n    // Verifica altre impostazioni critiche\n    const criticalSettings = {\n      maxConcurrentApps: { min: 1, max: 10, default: 5 },\n      language: { valid: ['it', 'en'], default: 'it' },\n      theme: { valid: ['light', 'dark', 'auto'], default: 'auto' }\n    };\n    \n    for (const [key, validation] of Object.entries(criticalSettings)) {\n      const value = await this.storage.getSetting(key);\n      \n      if (validation.min !== undefined && validation.max !== undefined) {\n        // Validazione numerica\n        if (typeof value !== 'number' || value < validation.min || value > validation.max) {\n          console.log(`⚠️ ${key} non valido (${value}), correzione a ${validation.default}`);\n          await this.storage.setSetting(key, validation.default);\n        }\n      } else if (validation.valid) {\n        // Validazione enum\n        if (!validation.valid.includes(value)) {\n          console.log(`⚠️ ${key} non valido (${value}), correzione a ${validation.default}`);\n          await this.storage.setSetting(key, validation.default);\n        }\n      }\n    }\n    \n    console.log('✅ Impostazioni critiche verificate');\n  }\n\n  /**\n   * Mostra loading screen\n   */\n  showLoadingScreen() {\n    const loadingScreen = document.getElementById('loading-screen');\n    const appContainer = document.getElementById('app');\n    \n    if (loadingScreen && appContainer) {\n      loadingScreen.style.display = 'flex';\n      appContainer.style.display = 'none';\n    }\n  }\n\n  /**\n   * Nascondi loading screen\n   */\n  hideLoadingScreen() {\n    const loadingScreen = document.getElementById('loading-screen');\n    const appContainer = document.getElementById('app');\n    \n    if (loadingScreen) {\n      loadingScreen.style.opacity = '0';\n      setTimeout(() => {\n        loadingScreen.style.display = 'none';\n      }, 300);\n    }\n    \n    if (appContainer) {\n      appContainer.style.display = 'block';\n    }\n  }\n\n  /**\n   * Mostra schermata di errore\n   */\n  showErrorScreen(error) {\n    console.error('Errore critico:', error);\n    \n    const loadingScreen = document.getElementById('loading-screen');\n    if (loadingScreen) {\n      loadingScreen.innerHTML = `\n        <div class=\"error-screen\">\n          <div class=\"error-icon\">⚠️</div>\n          <h1>Errore di Inizializzazione</h1>\n          <p>Si è verificato un errore durante l'avvio dell'applicazione.</p>\n          <p class=\"error-details\">${error.message}</p>\n          <button onclick=\"location.reload()\" class=\"btn btn-primary\">Riprova</button>\n        </div>\n      `;\n    }\n  }\n\n  /**\n   * Mostra messaggio di benvenuto se abilitato\n   */\n  async showWelcomeMessage() {\n    const showWelcome = await this.storage.getSetting('showWelcomeMessage', true);\n    if (showWelcome) {\n      // Mostra messaggio di benvenuto\n      showToast('Benvenuto in AIdeas! 🎉', 'success', 3000);\n    }\n  }\n\n  /**\n   * Inizializza il database storage\n   */\n  async initializeStorage() {\n    try {\n      // Il StorageService è già inizializzato come singleton\n      const stats = await StorageService.getStats();\n      console.log('📊 Database stats:', stats);\n    } catch (error) {\n      console.error('Errore inizializzazione storage:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Carica impostazioni utente\n   */\n  async loadUserSettings() {\n    try {\n      const settings = await StorageService.getAllSettings();\n      \n      // Applica impostazioni\n      this.currentViewMode = settings.viewMode || 'grid';\n      this.currentSort = settings.sortBy || 'lastUsed';\n      \n      // Applica tema\n      if (settings.theme) {\n        document.documentElement.setAttribute('data-theme', settings.theme);\n      } else {\n        document.documentElement.setAttribute('data-theme', 'dark');\n      }\n      \n      // Applica lingua\n      if (settings.language) {\n        document.documentElement.setAttribute('lang', settings.language);\n      }\n      \n    } catch (error) {\n      console.error('Errore caricamento impostazioni:', error);\n      // Forza comunque il tema scuro in caso di errore\n      document.documentElement.setAttribute('data-theme', 'dark');\n    }\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    // Sidebar toggle\n    const sidebarToggle = document.getElementById('sidebar-toggle');\n    const sidebar = document.getElementById('sidebar');\n    const layout = document.querySelector('.app-layout');\n    \n    sidebarToggle?.addEventListener('click', () => {\n      sidebar?.classList.toggle('sidebar-open');\n      // Aggiungi/rimuovi classe al layout per gestire l'espansione del contenuto\n      if (sidebar?.classList.contains('sidebar-open')) {\n        layout?.classList.remove('sidebar-collapsed');\n      } else {\n        layout?.classList.add('sidebar-collapsed');\n      }\n    });\n\n    // Mobile search toggle\n    const mobileSearchToggle = document.getElementById('mobile-search-toggle');\n    const mobileSearchClose = document.getElementById('mobile-search-close');\n    const searchContainer = document.querySelector('.search-container');\n    const headerSearch = document.querySelector('.header-search');\n    const searchInput = document.getElementById('search-input');\n    \n    mobileSearchToggle?.addEventListener('click', () => {\n      headerSearch?.classList.toggle('search-active');\n      if (headerSearch?.classList.contains('search-active')) {\n        // Focus sull'input quando si apre\n        setTimeout(() => {\n          searchInput?.focus();\n        }, 100);\n      }\n    });\n\n    mobileSearchClose?.addEventListener('click', () => {\n      headerSearch?.classList.remove('search-active');\n      searchInput?.blur();\n    });\n\n    // Chiudi ricerca mobile quando si clicca fuori\n    document.addEventListener('click', (e) => {\n      if (!searchContainer?.contains(e.target) && !mobileSearchToggle?.contains(e.target)) {\n        headerSearch?.classList.remove('search-active');\n      }\n    });\n\n    // Search input\n    const searchInputEl = document.getElementById('search-input');\n    searchInputEl?.addEventListener('input', this.handleSearch);\n    searchInputEl?.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        // Chiudi ricerca mobile su ESC\n        headerSearch?.classList.remove('search-active');\n        searchInputEl.blur();\n      }\n    });\n\n    // Category navigation\n    const categoryNavs = document.querySelectorAll('[data-category]');\n    categoryNavs.forEach(nav => {\n      nav.addEventListener('click', this.handleCategoryChange);\n    });\n\n    // Sort select\n    const sortSelect = document.getElementById('sort-select');\n    sortSelect?.addEventListener('change', this.handleSortChange);\n\n    // View toggle\n    const viewButtons = document.querySelectorAll('.view-btn');\n    viewButtons.forEach(btn => {\n      btn.addEventListener('click', this.handleViewChange);\n    });\n\n    // Add app buttons\n    const addAppBtns = document.querySelectorAll('#add-app-btn, #fab-add, #empty-add-btn');\n    addAppBtns.forEach(btn => {\n      btn.addEventListener('click', () => this.showAddAppModal());\n    });\n\n    // Settings button\n    const settingsBtn = document.getElementById('settings-btn');\n    settingsBtn?.addEventListener('click', () => {\n      this.showSettingsModal();\n    });\n\n    // User menu\n    const userBtn = document.getElementById('user-btn');\n    const userDropdown = document.getElementById('user-dropdown');\n    \n    userBtn?.addEventListener('click', (e) => {\n      e.stopPropagation();\n      userDropdown?.classList.toggle('show');\n    });\n\n    document.addEventListener('click', () => {\n      userDropdown?.classList.remove('show');\n    });\n\n    // User menu actions\n    document.getElementById('settings-link')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showSettingsModal();\n    });\n\n    document.getElementById('export-link')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.exportData();\n    });\n\n    document.getElementById('import-link')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.importData();\n    });\n\n    document.getElementById('about-link')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showAboutModal();\n    });\n\n    // Sync button\n    document.getElementById('sync-btn')?.addEventListener('click', () => {\n      this.syncManager.showSyncModal();\n    });\n\n    // App store button\n    document.getElementById('app-store-btn')?.addEventListener('click', () => {\n      this.showAppStoreModal();\n    });\n\n    // Keyboard shortcuts\n    document.addEventListener('keydown', this.handleKeyboardShortcuts.bind(this));\n\n    // Resize handler\n    window.addEventListener('resize', this.handleResize.bind(this));\n\n    // Chiudi sidebar su click esterno\n    document.addEventListener('click', (e) => {\n      if (!sidebar?.contains(e.target) && !sidebarToggle?.contains(e.target)) {\n        sidebar?.classList.remove('sidebar-open');\n        layout?.classList.add('sidebar-collapsed');\n      }\n    });\n  }\n\n  /**\n   * Carica tutte le app dal database\n   */\n  async loadApps() {\n    try {\n      this.apps = await StorageService.getAllApps();\n      this.filterApps();\n      this.updateCategoryCounts();\n    } catch (error) {\n      console.error('Errore caricamento apps:', error);\n      showToast('Errore durante il caricamento delle app', 'error');\n    }\n  }\n\n  /**\n   * Filtra e ordina le app\n   */\n  filterApps() {\n    let filtered = [...this.apps];\n\n    // Filtra per categoria\n    if (this.currentView === 'favorites') {\n      filtered = filtered.filter(app => app.favorite);\n    } else if (this.currentView === 'recent') {\n      // Ultimi 30 giorni\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n      filtered = filtered.filter(app => new Date(app.lastUsed) > thirtyDaysAgo);\n    } else if (this.currentView !== 'all') {\n      filtered = filtered.filter(app => app.category === this.currentView);\n    }\n\n    // Filtra per ricerca\n    if (this.searchQuery) {\n      const query = this.searchQuery.toLowerCase();\n      filtered = filtered.filter(app => \n        app.name.toLowerCase().includes(query) ||\n        app.description.toLowerCase().includes(query) ||\n        app.tags.some(tag => tag.toLowerCase().includes(query))\n      );\n    }\n\n    // Ordina\n    filtered.sort((a, b) => {\n      switch (this.currentSort) {\n      case 'name':\n        return a.name.localeCompare(b.name);\n      case 'installDate':\n        return new Date(b.installDate) - new Date(a.installDate);\n      case 'category':\n        return a.category.localeCompare(b.category);\n      case 'lastUsed':\n      default:\n        return new Date(b.lastUsed) - new Date(a.lastUsed);\n      }\n    });\n\n    this.filteredApps = filtered;\n    this.renderApps();\n  }\n\n  /**\n   * Renderizza le app nella UI\n   */\n  renderApps() {\n    const appsGrid = document.getElementById('apps-grid');\n    const emptyState = document.getElementById('empty-state');\n\n    if (!appsGrid) return;\n\n    // Aggiorna classe per view mode\n    appsGrid.className = `apps-${this.currentViewMode}`;\n\n    if (this.filteredApps.length === 0) {\n      appsGrid.style.display = 'none';\n      emptyState.style.display = 'flex';\n      return;\n    }\n\n    emptyState.style.display = 'none';\n    \n    // Imposta display corretto per ogni modalità\n    if (this.currentViewMode === 'launcher') {\n      appsGrid.style.display = 'grid';\n      appsGrid.innerHTML = this.filteredApps.map(app => \n        this.renderLauncherItem(app)\n      ).join('');\n    } else {\n      appsGrid.style.display = this.currentViewMode === 'list' ? 'flex' : 'grid';\n      appsGrid.innerHTML = this.filteredApps.map(app => \n        AppCard.render(app)\n      ).join('');\n    }\n\n    // Aggiungi event listeners alle app cards\n    this.setupAppCardListeners();\n  }\n\n  /**\n   * Renderizza un elemento della vista launcher\n   */\n  renderLauncherItem(app) {\n    const iconHtml = app.icon ? \n      `<img src=\"${app.icon}\" alt=\"${app.name}\" onerror=\"this.style.display='none'; this.nextElementSibling.style.display='flex';\">` : \n      '';\n    \n    const defaultIcon = `\n      <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" style=\"display: ${app.icon ? 'none' : 'flex'};\">\n        <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z\"/>\n      </svg>\n    `;\n\n    const badgeHtml = app.type ? `\n      <div class=\"app-launcher-badge\">\n        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          ${app.type === 'pwa' ? '<path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4Z\"/>' : \n            app.type === 'zip' ? '<path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>' :\n            '<path d=\"M3.27,1L2,2.27L5.18,5.44L5.64,6H21L19.73,7L21,8.27L19,10.27V20A1,1 0 0,1 18,21H6A1,1 0 0,1 5,20V10L3.27,8.27L1,6L2.28,4.73L3.27,1M7,18H17V10H7V18Z\"/>'}\n        </svg>\n      </div>\n    ` : '';\n\n    return `\n      <div class=\"app-launcher-item\" data-app-id=\"${app.id}\" data-app-name=\"${app.name}\">\n        <div class=\"app-launcher-icon\">\n          ${iconHtml}\n          ${defaultIcon}\n          ${badgeHtml}\n        </div>\n        <div class=\"app-launcher-name\">${app.name}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Setup event listeners per le app cards\n   */\n  setupAppCardListeners() {\n    // Launch app\n    document.querySelectorAll('.app-card-launch').forEach(btn => {\n      btn.addEventListener('click', async (e) => {\n        e.stopPropagation();\n        const appId = parseInt(btn.dataset.appId);\n        await this.launchApp(appId);\n      });\n    });\n\n    // Toggle favorite\n    document.querySelectorAll('.app-card-favorite').forEach(btn => {\n      btn.addEventListener('click', async (e) => {\n        e.stopPropagation();\n        const appId = parseInt(btn.dataset.appId);\n        await this.toggleFavorite(appId);\n      });\n    });\n\n    // App menu\n    document.querySelectorAll('.app-card-menu').forEach(btn => {\n      btn.addEventListener('click', (e) => {\n        e.stopPropagation();\n        const appId = parseInt(btn.dataset.appId);\n        this.showAppMenu(appId, e.target);\n      });\n    });\n\n    // Card click to launch\n    document.querySelectorAll('.app-card').forEach(card => {\n      card.addEventListener('click', async () => {\n        const appId = parseInt(card.dataset.appId);\n        await this.launchApp(appId);\n      });\n    });\n\n    // Launcher view items\n    document.querySelectorAll('.app-launcher-item').forEach(item => {\n      let pressTimer;\n      let isLongPress = false;\n\n      // Click per avviare\n      item.addEventListener('click', async (e) => {\n        if (!isLongPress) {\n          const appId = parseInt(item.dataset.appId);\n          await this.launchApp(appId);\n        }\n        isLongPress = false;\n      });\n\n      // Long press per informazioni\n      item.addEventListener('mousedown', (e) => {\n        pressTimer = setTimeout(() => {\n          isLongPress = true;\n          const appId = parseInt(item.dataset.appId);\n          this.showLauncherAppInfo(appId, item);\n        }, 500); // 500ms per long press\n      });\n\n      item.addEventListener('mouseup', () => {\n        clearTimeout(pressTimer);\n      });\n\n      item.addEventListener('mouseleave', () => {\n        clearTimeout(pressTimer);\n      });\n\n      // Touch events per mobile\n      item.addEventListener('touchstart', (e) => {\n        pressTimer = setTimeout(() => {\n          isLongPress = true;\n          const appId = parseInt(item.dataset.appId);\n          this.showLauncherAppInfo(appId, item);\n        }, 500);\n      });\n\n      item.addEventListener('touchend', () => {\n        clearTimeout(pressTimer);\n      });\n\n      item.addEventListener('touchcancel', () => {\n        clearTimeout(pressTimer);\n      });\n    });\n  }\n\n  /**\n   * Lancia un'app\n   */\n  async launchApp(appId) {\n    try {\n      const app = await StorageService.getApp(appId);\n      if (!app) {\n        showToast('App non trovata', 'error');\n        return;\n      }\n\n      // Aggiorna ultimo utilizzo\n      await StorageService.updateLastUsed(appId);\n      \n      // Lancia l'app\n      await this.appLauncher.launch(app);\n      \n      // Aggiorna la lista\n      await this.loadApps();\n      \n    } catch (error) {\n      console.error('Errore lancio app:', error);\n      showToast('Errore durante il lancio dell\\'app', 'error');\n    }\n  }\n\n  /**\n   * Toggle favorite status\n   */\n  async toggleFavorite(appId) {\n    try {\n      const newStatus = await StorageService.toggleFavorite(appId);\n      showToast(newStatus ? 'Aggiunta ai preferiti' : 'Rimossa dai preferiti', 'success');\n      await this.loadApps();\n    } catch (error) {\n      console.error('Errore toggle favorite:', error);\n      showToast('Errore durante l\\'operazione', 'error');\n    }\n  }\n\n  /**\n   * Handlers per eventi UI\n   */\n  handleSearch(e) {\n    this.searchQuery = e.target.value.trim();\n    this.filterApps();\n  }\n\n  handleCategoryChange(e) {\n    e.preventDefault();\n    const category = e.target.dataset.category || e.target.closest('[data-category]').dataset.category;\n    \n    // Aggiorna UI navigazione\n    document.querySelectorAll('.nav-link').forEach(link => {\n      link.classList.remove('active');\n    });\n    \n    // Controllo null per evitare errore\n    const clickedLink = e.target.closest('.nav-link');\n    if (clickedLink) {\n      clickedLink.classList.add('active');\n    }\n    \n    // Aggiorna view\n    this.currentView = category;\n    this.updateSectionTitle();\n    this.filterApps();\n  }\n\n  handleSortChange(e) {\n    this.currentSort = e.target.value;\n    StorageService.setSetting('sortBy', this.currentSort);\n    this.filterApps();\n  }\n\n  handleViewChange(e) {\n    const viewMode = e.target.dataset.view || e.target.closest('[data-view]').dataset.view;\n    \n    // Aggiorna UI buttons - rimuovi active da tutti i pulsanti di vista\n    document.querySelectorAll('.view-btn[data-view]').forEach(btn => {\n      btn.classList.remove('active');\n    });\n    \n    // Aggiungi active solo al pulsante cliccato\n    const clickedBtn = e.target.closest('.view-btn[data-view]');\n    if (clickedBtn) {\n      clickedBtn.classList.add('active');\n    }\n    \n    // Aggiorna view\n    this.currentViewMode = viewMode;\n    StorageService.setSetting('viewMode', this.currentViewMode);\n    this.renderApps();\n  }\n\n  /**\n   * Gestione keyboard shortcuts\n   */\n  handleKeyboardShortcuts(e) {\n    // Ctrl/Cmd + K per focus search\n    if ((e.ctrlKey || e.metaKey) && e.key === 'k') {\n      e.preventDefault();\n      document.getElementById('search-input')?.focus();\n    }\n    \n    // Ctrl/Cmd + N per nuova app\n    if ((e.ctrlKey || e.metaKey) && e.key === 'n') {\n      e.preventDefault();\n      this.showAddAppModal();\n    }\n    \n    // Escape per chiudere modals\n    if (e.key === 'Escape') {\n      this.closeAllModals();\n    }\n  }\n\n  /**\n   * Gestione resize\n   */\n  handleResize() {\n    const sidebar = document.getElementById('sidebar');\n    const layout = document.querySelector('.app-layout');\n    \n    // Chiudi sidebar su resize se mobile e sidebar è aperta\n    if (window.innerWidth > 768) {\n      // Su desktop, mantieni lo stato della sidebar\n      // Non chiudere automaticamente\n    } else {\n      // Su mobile, chiudi la sidebar se è aperta\n      if (sidebar?.classList.contains('sidebar-open')) {\n        sidebar.classList.remove('sidebar-open');\n        layout?.classList.add('sidebar-collapsed');\n      }\n    }\n  }\n\n  /**\n   * Aggiorna titolo sezione\n   */\n  updateSectionTitle() {\n    const sectionTitle = document.getElementById('section-title');\n    const sectionSubtitle = document.getElementById('section-subtitle');\n    \n    const titles = {\n      'all': { title: 'Tutte le App', subtitle: 'Gestisci le tue applicazioni web' },\n      'favorites': { title: 'App Preferite', subtitle: 'Le tue app più amate' },\n      'recent': { title: 'App Recenti', subtitle: 'Utilizzate negli ultimi 30 giorni' }\n    };\n    \n    const titleData = titles[this.currentView] || { \n      title: this.currentView.charAt(0).toUpperCase() + this.currentView.slice(1), \n      subtitle: `App della categoria ${this.currentView}` \n    };\n    \n    if (sectionTitle) sectionTitle.textContent = titleData.title;\n    if (sectionSubtitle) sectionSubtitle.textContent = titleData.subtitle;\n  }\n\n  /**\n   * Aggiorna contatori categorie\n   */\n  updateCategoryCounts() {\n    // Contatore app totali\n    const allCount = document.getElementById('all-count');\n    if (allCount) allCount.textContent = this.apps.length;\n    \n    // Contatore preferiti\n    const favoritesCount = document.getElementById('favorites-count');\n    const favorites = this.apps.filter(app => app.favorite).length;\n    if (favoritesCount) favoritesCount.textContent = favorites;\n    \n    // Aggiorna categorie dinamiche\n    this.updateDynamicCategories();\n  }\n\n  /**\n   * Aggiorna categorie dinamiche nella sidebar\n   */\n  updateDynamicCategories() {\n    const dynamicCategories = document.getElementById('dynamic-categories');\n    if (!dynamicCategories) return;\n    \n    // Raggruppa per categoria\n    const categoryMap = new Map();\n    this.apps.forEach(app => {\n      const category = app.category || 'uncategorized';\n      categoryMap.set(category, (categoryMap.get(category) || 0) + 1);\n    });\n    \n    // Renderizza categorie\n    const categoryItems = Array.from(categoryMap.entries())\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(([category, count]) => `\n        <li class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\" data-category=\"${category}\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\"/>\n            </svg>\n            ${category}\n            <span class=\"nav-badge\">${count}</span>\n          </a>\n        </li>\n      `).join('');\n    \n    dynamicCategories.innerHTML = categoryItems;\n    \n    // Riattacca event listeners\n    dynamicCategories.querySelectorAll('[data-category]').forEach(nav => {\n      nav.addEventListener('click', this.handleCategoryChange);\n    });\n  }\n\n  /**\n   * Mostra modal aggiungi app\n   */\n  showAddAppModal() {\n    console.log('🔧 Tentativo apertura modal aggiungi app...');\n    if (this.appImporter && typeof this.appImporter.showModal === 'function') {\n      this.appImporter.showModal();\n    } else {\n      console.error('❌ AppImporter non disponibile o showModal non è una funzione');\n      showToast('Errore: componente importazione non disponibile', 'error');\n    }\n  }\n\n  /**\n   * Mostra modal impostazioni\n   */\n  showSettingsModal() {\n    this.settingsPanel.showModal();\n  }\n\n  /**\n   * Mostra modal about\n   */\n  showAboutModal() {\n    showModal('about-modal', `\n      <div class=\"modal-header\">\n        <h2>Su AIdeas</h2>\n        <button class=\"modal-close\" onclick=\"hideModal('about-modal')\">&times;</button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"about-content\">\n          <div class=\"about-logo\">\n            <svg viewBox=\"0 0 100 100\" class=\"about-icon\">\n              <defs>\n                <linearGradient id=\"aboutGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                  <stop offset=\"0%\" style=\"stop-color:#2563eb\"/>\n                  <stop offset=\"100%\" style=\"stop-color:#1d4ed8\"/>\n                </linearGradient>\n              </defs>\n              <rect x=\"10\" y=\"10\" width=\"80\" height=\"80\" rx=\"16\" fill=\"url(#aboutGradient)\"/>\n              <text x=\"50\" y=\"65\" text-anchor=\"middle\" fill=\"white\" font-size=\"32\" font-weight=\"bold\">S</text>\n            </svg>\n          </div>\n          <h3>AIdeas v1.0.0</h3>\n          <p><strong>Swiss Army Knife by AI</strong></p>\n          <p>Launcher per applicazioni web generate da AI</p>\n          <div class=\"about-features\">\n            <h4>Caratteristiche:</h4>\n            <ul>\n              <li>✅ 100% Client-side</li>\n              <li>✅ Funziona offline</li>\n              <li>✅ Sincronizzazione cloud opzionale</li>\n              <li>✅ Sandbox sicuro per le app</li>\n              <li>✅ Import/Export profili</li>\n            </ul>\n          </div>\n          <div class=\"about-links\">\n            <a href=\"https://github.com/aideas-run/aideas-run\" target=\"_blank\" rel=\"noopener\">GitHub</a>\n            <a href=\"https://aideas.run/docs\" target=\"_blank\" rel=\"noopener\">Documentazione</a>\n          </div>\n        </div>\n      </div>\n    `);\n  }\n\n  /**\n   * Mostra modal app store\n   */\n  showAppStoreModal() {\n    showModal('app-store-modal', `\n      <div class=\"modal-header\">\n        <h2>AIdeas App Store</h2>\n        <button class=\"modal-close\" onclick=\"hideModal('app-store-modal')\">&times;</button>\n      </div>\n      <div class=\"modal-body\">\n        <p>App Store in arrivo nella prossima versione...</p>\n        <p>Nel frattempo puoi aggiungere app tramite:</p>\n        <ul>\n          <li>File ZIP</li>\n          <li>URL diretto</li>\n          <li>Repository GitHub</li>\n        </ul>\n      </div>\n    `);\n  }\n\n  /**\n   * Esporta dati\n   */\n  async exportData() {\n    try {\n      const data = await StorageService.exportAllData();\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `aideas-backup-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      showToast('Dati esportati con successo', 'success');\n    } catch (error) {\n      console.error('Errore export:', error);\n      showToast('Errore durante l\\'esportazione', 'error');\n    }\n  }\n\n  /**\n   * Importa dati\n   */\n  importData() {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.json';\n    \n    input.onchange = async (e) => {\n      try {\n        const file = e.target.files[0];\n        if (!file) return;\n        \n        const text = await file.text();\n        const data = JSON.parse(text);\n        \n        await StorageService.importData(data);\n        await this.loadApps();\n        \n        showToast('Dati importati con successo', 'success');\n      } catch (error) {\n        console.error('Errore import:', error);\n        showToast('Errore durante l\\'importazione', 'error');\n      }\n    };\n    \n    input.click();\n  }\n\n  /**\n   * Inizializza componenti\n   */\n  async initializeComponents() {\n    await this.appImporter.init();\n    await this.settingsPanel.init();\n  }\n\n  /**\n   * Inizializza sync\n   */\n  async initializeSync() {\n    // DISABILITATO TEMPORANEAMENTE - SyncManager non disponibile\n    /*\n    // Inizializza sync solo se configurato\n    const syncEnabled = await StorageService.getSetting('syncEnabled', false);\n    if (syncEnabled) {\n      await this.syncManager.autoSync();\n    }\n    */\n  }\n\n  /**\n   * Controlla se è la prima esecuzione\n   */\n  async checkFirstRun() {\n    const isFirstRun = await StorageService.getSetting('firstRun', true);\n    if (isFirstRun) {\n      await StorageService.setSetting('firstRun', false);\n      showToast('Benvenuto in AIdeas! Inizia aggiungendo la tua prima app.', 'info', 5000);\n    }\n  }\n\n  /**\n   * Aggiorna UI generale\n   */\n  updateUI() {\n    this.updateSectionTitle();\n    this.updateCategoryCounts();\n    \n    // Applica view mode - rimuovi active da tutti i pulsanti di vista\n    document.querySelectorAll('.view-btn[data-view]').forEach(btn => {\n      btn.classList.remove('active');\n    });\n    \n    // Aggiungi active solo al pulsante della vista corrente\n    const currentViewBtn = document.querySelector(`[data-view=\"${this.currentViewMode}\"]`);\n    if (currentViewBtn) {\n      currentViewBtn.classList.add('active');\n    }\n    \n    // Applica sort\n    const sortSelect = document.getElementById('sort-select');\n    if (sortSelect) sortSelect.value = this.currentSort;\n    \n    // Inizializza stato sidebar\n    const sidebar = document.getElementById('sidebar');\n    const layout = document.querySelector('.app-layout');\n    if (sidebar && layout) {\n      if (!sidebar.classList.contains('sidebar-open')) {\n        layout.classList.add('sidebar-collapsed');\n      } else {\n        layout.classList.remove('sidebar-collapsed');\n      }\n    }\n  }\n\n  /**\n   * Chiudi tutti i modals\n   */\n  closeAllModals() {\n    document.querySelectorAll('.modal').forEach(modal => {\n      hideModal(modal.id);\n    });\n  }\n\n  /**\n   * Mostra errore\n   */\n  showError(message) {\n    showToast(message, 'error');\n  }\n\n  /**\n   * Mostra il menu contestuale per una app (con opzione Modifica)\n   */\n  async showAppMenu(appId, targetEl) {\n    const app = await StorageService.getApp(appId);\n    if (!app) return;\n    \n    // Genera menu contestuale usando le classi CSS\n    const menuHtml = `\n      <div class=\"app-context-menu\">\n        <div class=\"context-menu-item\" data-action=\"edit\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"/>\n          </svg>\n          Modifica\n        </div>\n        <div class=\"context-menu-separator\"></div>\n        <div class=\"context-menu-item context-menu-danger\" data-action=\"delete\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\"/>\n          </svg>\n          Elimina\n        </div>\n      </div>\n    `;\n    \n    // Rimuovi eventuali menu già aperti\n    document.querySelectorAll('.app-context-menu').forEach(el => el.remove());\n    \n    // Inserisci menu nel DOM\n    const menuDiv = document.createElement('div');\n    menuDiv.innerHTML = menuHtml;\n    document.body.appendChild(menuDiv.firstElementChild);\n    const menu = document.querySelector('.app-context-menu');\n    \n    // Posiziona il menu vicino al target\n    const rect = targetEl.getBoundingClientRect();\n    const menuRect = menu.getBoundingClientRect();\n    \n    // Calcola posizione ottimale\n    let top = rect.bottom + window.scrollY + 4;\n    let left = rect.left + window.scrollX;\n    \n    // Evita che il menu esca dallo schermo\n    if (top + menuRect.height > window.innerHeight + window.scrollY) {\n      top = rect.top + window.scrollY - menuRect.height - 4;\n    }\n    \n    if (left + menuRect.width > window.innerWidth + window.scrollX) {\n      left = rect.right + window.scrollX - menuRect.width;\n    }\n    \n    menu.style.top = `${top}px`;\n    menu.style.left = `${left}px`;\n    \n    // Listener click fuori dal menu per chiuderlo\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('mousedown', closeMenu);\n      }\n    };\n    \n    setTimeout(() => document.addEventListener('mousedown', closeMenu), 10);\n    \n    // Listener click su Modifica\n    menu.querySelector('[data-action=\"edit\"]').addEventListener('click', async () => {\n      menu.remove();\n      await this.showEditAppModal(app);\n    });\n    \n    // Listener per Elimina\n    menu.querySelector('[data-action=\"delete\"]').addEventListener('click', async () => {\n      menu.remove();\n      if (await showDeleteAppConfirm(app.name)) {\n        await StorageService.deleteApp(appId);\n        showToast('App eliminata', 'success');\n        this.loadApps();\n      }\n    });\n  }\n\n  /**\n   * Mostra il modale di modifica app (riutilizza la form di AppImporter)\n   */\n  async showEditAppModal(app) {\n    // Crea una copia dei dati per non modificarli direttamente\n    const appData = { ...app };\n    // Genera la form di metadati (come in AppImporter)\n    const modalContent = `\n      <div class=\"modal-header\">\n        <h2>\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"header-icon\"><path d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"/></svg>\n          Modifica App\n        </h2>\n        <button class=\"modal-close\" id=\"close-edit-modal\">&times;</button>\n      </div>\n      <div class=\"modal-body\">\n        <form id=\"edit-app-form\">\n          <div class=\"form-group\">\n            <label for=\"edit-app-name\">Nome App</label>\n            <input type=\"text\" id=\"edit-app-name\" class=\"form-input\" value=\"${appData.name || ''}\" maxlength=\"50\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"edit-app-description\">Descrizione</label>\n            <textarea id=\"edit-app-description\" class=\"form-input\" rows=\"3\" maxlength=\"200\">${appData.description || ''}</textarea>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"edit-app-version\">Versione</label>\n            <input type=\"text\" id=\"edit-app-version\" class=\"form-input\" value=\"${appData.version || '1.0.0'}\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"edit-app-category\">Categoria</label>\n            <input type=\"text\" id=\"edit-app-category\" class=\"form-input\" value=\"${appData.category || ''}\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"edit-app-tags\">Tag (separati da virgola)</label>\n            <input type=\"text\" id=\"edit-app-tags\" class=\"form-input\" value=\"${(appData.tags || []).join(', ')}\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"edit-app-icon\">Icona (URL)</label>\n            <input type=\"url\" id=\"edit-app-icon\" class=\"form-input\" value=\"${appData.icon || ''}\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"edit-app-launch-mode\">Modalità di apertura predefinita</label>\n            <select id=\"edit-app-launch-mode\" class=\"form-input\">\n              <option value=\"\">Usa impostazione globale</option>\n              <option value=\"iframe\" ${appData.metadata?.launchMode === 'iframe' ? 'selected' : ''}>Sempre in finestra modale</option>\n              <option value=\"newpage\" ${appData.metadata?.launchMode === 'newpage' ? 'selected' : ''}>Sempre in nuova pagina</option>\n            </select>\n            <p class=\"setting-description\">Scegli come questa app dovrebbe aprirsi di default</p>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-secondary\" id=\"cancel-edit-app\">Annulla</button>\n        <button class=\"btn btn-primary\" id=\"save-edit-app\">Salva Modifiche</button>\n      </div>\n    `;\n    showModal('edit-app-modal', modalContent, { size: 'modal-md' });\n    \n    // Listener per chiudere il modal\n    setTimeout(() => {\n      // Listener per il pulsante Annulla\n      document.getElementById('cancel-edit-app')?.addEventListener('click', () => {\n        hideModal('edit-app-modal');\n      });\n      \n      // Listener per il pulsante X\n      document.getElementById('close-edit-modal')?.addEventListener('click', () => {\n        hideModal('edit-app-modal');\n      });\n      \n      // Listener salvataggio\n      document.getElementById('save-edit-app').addEventListener('click', async (e) => {\n        e.preventDefault();\n        // Raccogli dati\n        const updates = {\n          name: document.getElementById('edit-app-name').value.trim(),\n          description: document.getElementById('edit-app-description').value.trim(),\n          version: document.getElementById('edit-app-version').value.trim(),\n          category: document.getElementById('edit-app-category').value.trim(),\n          tags: document.getElementById('edit-app-tags').value.split(',').map(t => t.trim()).filter(Boolean),\n          icon: document.getElementById('edit-app-icon').value.trim()\n        };\n        \n        // Gestione modalità di lancio\n        const launchModeEl = document.getElementById('edit-app-launch-mode');\n        if (launchModeEl && launchModeEl.value) {\n          if (!updates.metadata) updates.metadata = {};\n          updates.metadata.launchMode = launchModeEl.value;\n        } else if (appData.metadata?.launchMode) {\n          // Rimuovi la modalità specifica se è vuota\n          if (!updates.metadata) updates.metadata = {};\n          updates.metadata.launchMode = null;\n        }\n        \n        // Validazione base\n        if (!updates.name) {\n          showToast('Il nome è obbligatorio', 'error');\n          return;\n        }\n        // Aggiorna nel database\n        await StorageService.updateApp(app.id, updates);\n        hideModal('edit-app-modal');\n        showToast('App modificata con successo', 'success');\n        await this.loadApps();\n      });\n    }, 200);\n  }\n\n  /**\n   * Mostra informazioni dell'app nella vista launcher\n   */\n  async showLauncherAppInfo(appId, targetElement) {\n    const app = await StorageService.getApp(appId);\n    if (!app) return;\n\n    // Crea modal con informazioni dell'app\n    const modalContent = `\n      <div class=\"modal-header\">\n        <div class=\"app-modal-title\">\n          <div class=\"app-modal-icon\">\n            ${app.icon ? `<img src=\"${app.icon}\" alt=\"${app.name}\">` : '📱'}\n          </div>\n          <div>\n            <h2>${app.name}</h2>\n            <p class=\"app-modal-subtitle\">${app.description || ''}</p>\n          </div>\n        </div>\n        <button class=\"modal-close\">&times;</button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"app-info-grid\">\n          <div class=\"app-info-section\">\n            <h4>Informazioni</h4>\n            <div class=\"app-info-item\">\n              <span class=\"info-label\">Versione:</span>\n              <span class=\"info-value\">${app.version || 'N/A'}</span>\n            </div>\n            <div class=\"app-info-item\">\n              <span class=\"info-label\">Categoria:</span>\n              <span class=\"info-value\">${app.category || 'Non categorizzata'}</span>\n            </div>\n            <div class=\"app-info-item\">\n              <span class=\"info-label\">Tipo:</span>\n              <span class=\"info-value\">${app.type || 'URL'}</span>\n            </div>\n            <div class=\"app-info-item\">\n              <span class=\"info-label\">Ultimo utilizzo:</span>\n              <span class=\"info-value\">${app.lastUsed ? new Date(app.lastUsed).toLocaleDateString('it-IT') : 'Mai'}</span>\n            </div>\n          </div>\n          \n          ${app.tags && app.tags.length > 0 ? `\n            <div class=\"app-info-section\">\n              <h4>Tag</h4>\n              <div class=\"app-tags\">\n                ${app.tags.map(tag => `<span class=\"app-tag\">${tag}</span>`).join('')}\n              </div>\n            </div>\n          ` : ''}\n        </div>\n        \n        <div class=\"app-actions\">\n          <button class=\"btn btn-primary\" id=\"launch-app-btn\" data-app-id=\"${app.id}\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M8,5V19L19,12M19,5V19H21V5M2,5V19H4V5H2Z\"/>\n            </svg>\n            Avvia App\n          </button>\n          <button class=\"btn btn-secondary\" id=\"edit-app-btn\" data-app-id=\"${app.id}\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\"/>\n            </svg>\n            Modifica\n          </button>\n        </div>\n      </div>\n    `;\n\n    const modal = showModal('launcher-app-info', modalContent, {\n      size: 'modal-md',\n      disableBackdropClose: false,\n      disableEscapeClose: false\n    });\n\n    // Event listeners per i pulsanti\n    modal.querySelector('#launch-app-btn')?.addEventListener('click', async () => {\n      hideModal('launcher-app-info');\n      await this.launchApp(appId);\n    });\n\n    modal.querySelector('#edit-app-btn')?.addEventListener('click', async () => {\n      hideModal('launcher-app-info');\n      await this.showEditAppModal(app);\n    });\n  }\n\n  /**\n   * Testa il funzionamento delle impostazioni\n   */\n  async testSettings() {\n    console.log('🧪 Test impostazioni...');\n    \n    try {\n      // Test salvataggio e caricamento\n      const testKey = 'test_setting';\n      const testValue = 'test_value_' + Date.now();\n      \n      await this.storage.setSetting(testKey, testValue);\n      const loadedValue = await this.storage.getSetting(testKey);\n      \n      if (loadedValue === testValue) {\n        console.log('✅ Test salvataggio/caricamento impostazioni: PASS');\n      } else {\n        console.log('❌ Test salvataggio/caricamento impostazioni: FAIL');\n      }\n      \n      // Pulisci test\n      await this.storage.setSetting(testKey, null);\n      \n      // Mostra impostazioni attuali\n      const currentSettings = await this.storage.getAllSettings();\n      console.log('📋 Impostazioni attuali:', currentSettings);\n      \n      // Verifica impostazioni critiche\n      const criticalSettings = ['defaultLaunchMode', 'language', 'theme'];\n      for (const setting of criticalSettings) {\n        const value = await this.storage.getSetting(setting);\n        console.log(`🔍 ${setting}: ${value}`);\n      }\n      \n    } catch (error) {\n      console.error('❌ Errore test impostazioni:', error);\n    }\n  }\n}\n\n// Gestione errori globali\nwindow.addEventListener('error', (e) => {\n  console.error('Errore globale:', e.error);\n  showToast('Si è verificato un errore imprevisto', 'error');\n});\n\nwindow.addEventListener('unhandledrejection', (e) => {\n  console.error('Promise rejections non gestita:', e.reason);\n  showToast('Errore durante un\\'operazione asincrona', 'error');\n});\n\n// Esporta per debug\nexport default AIdeasApp;"],"names":["AppLauncher","app","options","launchMode","StorageService","appSpecificMode","finalLaunchMode","validation","launchId","generateId","startTime","showToast","iframe","hideToast","error","appFiles","entryPoint","fileMap","blobUrls","file","blob","blobUrl","htmlContent","htmlBlob","htmlBlobUrl","newWindow","cleanup","url","modifiedContent","domains","patterns","extractDomain","match","domain","linkTag","allDomains","domainList","csp","appId","customCSP","cachedCSP","cachedDomains","lastAnalyzed","hoursSinceAnalysis","fallbackCSP","targetUrl","modal","hideModal","repoInfo","urlApp","iframeOptions","modalId","modalContent","escapeHtml","showModal","loadingEl","container","launchModeSelect","newMode","showConfirmPopup","observer","mutations","mutation","node","iframeWindow","key","value","prefix","message","type","callback","files","specifiedEntry","specified","f","indexHtml","firstHtml","pathMap","filename","pathSegments","justFilename","path","cleanPath","metaTags","controller","timeoutId","response","xFrameOptions","xfo","cspLower","fetchError","pattern","resolve","activeApp","a","history","duration","window","ElementType","isTag","elem","Root","Text","Directive","Comment","Script","Style","Tag","CDATA","Doctype","Node","parent","prev","next","recursive","cloneNode","DataNode","data","ProcessingInstruction","name","NodeWithChildren","children","_a","Document","Element","attribs","_b","isTagRaw","isCDATA","isText","isComment","isDirective","isDocument","hasChildren","result","cloneChildren","clone","child","instruction","childs","i","xmlReplacer","xmlCodeMap","getCodePoint","str","index","c","encodeXML","ret","lastIdx","char","getEscaper","regex","map","escapeAttribute","escapeText","elementNames","val","attributeNames","unencodedElements","replaceQuotes","formatAttributes","attributes","opts","encode","singleTag","render","nodes","output","renderNode","ElementType.Root","ElementType.Doctype","ElementType.Directive","renderDirective","ElementType.Comment","renderComment","ElementType.CDATA","renderCdata","ElementType.Script","ElementType.Style","ElementType.Tag","renderTag","ElementType.Text","renderText","foreignModeIntegrationPoints","foreignElements","tag","getOuterHTML","renderHTML","getInnerHTML","getText","textContent","innerText","getChildren","getParent","getSiblings","siblings","getAttributeValue","hasAttrib","getName","nextElementSibling","prevElementSibling","removeElement","childsIndex","replaceElement","replacement","appendChild","sibling","append","currNext","prependChild","prepend","filter","test","recurse","limit","find","nodeStack","indexStack","findOneChild","findOne","searchedNodes","found","existsOne","findAll","Checks","getAttribCheck","attrib","combineFuncs","b","compileTest","funcs","testElement","getElements","getElementById","id","getElementsByTagName","tagName","getElementsByClassName","className","getElementsByTagType","removeSubsets","idx","ancestor","DocumentPosition","compareDocumentPosition","nodeA","nodeB","aParents","bParents","current","maxIdx","sharedParent","aSibling","bSibling","uniqueSort","arr","relative","getFeed","doc","feedRoot","getOneElement","isValidFeed","getAtomFeed","getRssFeed","feed","item","entry","getMediaElements","addConditionally","href","description","fetch","pubDate","updated","MEDIA_KEYS_STRING","MEDIA_KEYS_INT","where","media","obj","prop","text","elements","elems","contains","contained","isCheerio","maybeCheerio","camelCase","_","x","cssCase","domEach","array","fn","len","CharacterCode","isHtml","tagStart","tagChar","hasOwn","object","rspace","dataAttrPrefix","rboolean","rbrace","getAttr","xmlMode","setAttr","el","removeAttribute","attr","objName","objValue","getProp","setProp","property","keys","setData","readAllData","domName","jsName","parseDataValue","readData","num","dataEl","querying","element","option","values","splitNames","names","removeAttr","attrNames","attrName","hasClass","clazz","end","addClass","classNames","numElements","setClass","cn","appendClass","removeClass","classes","numClasses","removeAll","elClasses","changed","j","toggleClass","stateVal","state","elementClasses","SelectorType","AttributeAction","reName","reEscape","actionTypes","unpackPseudos","isTraversal","selector","stripQuotesFromPseudos","funescape","escaped","escapedWhitespace","high","unescapeCSS","isQuote","isWhitespace","parse","subselects","endIndex","parseSelector","selectorIndex","tokens","offset","stripWhitespace","readValueWithParenthesis","start","counter","isEscaped","pos","slashCount","ensureNotTraversal","addTraversal","addSpecialAttribute","action","finalizeSubselector","loop","firstChar","namespace","possibleAction","ignoreCase","quote","sectionEnd","valueStart","forceIgnore","attributeSelector","quot","boolbase","procedure","token","sortByProcedure","procs","getProcedure","procNew","proc","d","reChars","escapeRegex","caseInsensitiveAttributes","shouldIgnoreCase","attributeRules","adapter","whitespace","ZERO","NINE","formula","sign","readSign","number","readNumber","skipWhitespace","compile","parsed","absA","bMod","nthCheck","getChildFunc","filters","itext","rule","equals","func","getNCheck","currentSibling","_rule","context","dynamicStatePseudo","pseudos","firstChild","elemName","verifyPseudoArgs","subselect","argIndex","aliases","PLACEHOLDER_ELEMENT","ensureIsTag","getNextSiblings","elemIndex","copyOptions","is","compileToken","_context","s","compiled","hasElement","shouldTestNextSiblings","nextElements","compilePseudoSelector","userPseudo","stringPseudo","alias","pseudo","getElementParent","compileGeneralSelector","isFalseCache","previous","lastElement","includesScopePseudo","DESCENDANT_TOKEN","FLEXIBLE_DESCENDANT_TOKEN","SCOPE_TOKEN","absolutize","hasContext","e","t","sortRules","isArrayContext","finalContext","query","rules","first","second","compileRules","reduceRules","defaultEquals","defaultOptions","DomUtils","convertOptionFormats","_c","_d","wrapCompile","_compileToken","prepareContext","appendNextSiblings","elemsLength","nextSiblings","filterNames","isFilter","getLimit","partLimit","getDocumentRoot","groupSelectors","selectors","filteredSelectors","plainSelectors","UNIVERSAL_SELECTOR","SCOPE_PSEUDO","some","plain","filtered","sel","filterBySelector","filterByPosition","filterParsed","filterElements","filteredSelector","DomUtils.isTag","root","findFilterElements","select","results","findElements","DomUtils.uniqueSort","queryForSelector","totalLimit","filterIndex","sub","DomUtils.getChildren","remainingSelector","remainingHasTraversal","boolbase.trueFunc","DomUtils.find","els","reSiblingSelector","selectorOrHaystack","haystack","_findBySelector","select.select","_getMatcher","matchMap","postFns","matched","filterArray","_matcher","_singleMatcher","_matchUntil","nextElem","matches","innerMatcher","filterSelector","select.is","getFilterFn","_removeDuplicates","parents","parentsUntil","closest","set","selectOpts","selectFn","nextAll","nextUntil","prevAll","prevUntil","contents","newElems","each","select.filter","select.some","not","filterFn","has","last","eq","get","toArray","selectorOrNeedle","$haystack","needle","slice","add","other","selection","addBack","update","newChilds","_makeDomArray","_insert","concatenator","domSrc","dom","uniqueSplice","spliceIdx","spliceCount","spliceArgs","oldParent","prevIdx","appendTo","target","prependTo","_wrap","insert","wrapper","lastParent","wrap","wrapperDom","elInsertLocation","updateDOM","wrapInner","unwrap","wrapAll","after","insertAfter","clones","clonedSelf","before","insertBefore","targetArr","remove","replaceWith","content","cont","empty","html","toString","staticText","textNode","css","setCss","getCss","styles","stringify","k","newStyles","n","trimmed","submittableSelector","r20","rCRLF","serialize","serializeArray","$elem","getExtractDescr","descr","extract","isArray","$","Cheerio","Attributes","Traversing","Manipulation","Css","Forms","Extract","CODE_POINTS","ERR","TokenType","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","State","IMPLICIT_END_TAG_REQUIRED","SCOPING_ELEMENTS_HTML","EntryType","tn","InsertionMode","ProxyService","lastError","proxyIndex","proxy","userLang","baseUrl","iconSelectors","icon","title","desc","iconUrl","proxyUrl","status","AppImporter","htmlForm","htmlBtn","cat","navButtons","sections","btn","sectionName","section","dropZone","fileInput","urlInput","testBtn","previewContainer","isValidUrl","githubInput","iconInput","uploadBtn","preview","currentMode","indicator","modeLabel","nameInput","startImportBtn","isValid","formatFileSize","JSZip","manifest","fileObj","fileData","metadata","metadataSection","importBtn","previewElement","statusBadge","titleEl","urlEl","apiUrl","repoData","formData","appData","globalLaunchMode","iconFile","manifestData","htmlMetadata","manifestUrl","titleMatch","descriptionMatch","iconMatch","appleIconMatch","fallbackError","icons","preferredSizes","size","ext","category","fields","fieldId","field","themeColorField","bgColorField","nameEl","descEl","versionEl","categoryEl","launchModeEl","tagsEl","iconEl","tags","show","progress","actions","percent","fill","textEl","eventName","iconPreview","reader","dataUrl","img","favicon","bodyText","AppCard","viewMode","version","lastUsed","installDate","favorite","githubUrl","displayName","displayDescription","displayCategory","appIcon","typeInfo","lastUsedFormatted","formatRelativeDate","installDateFormatted","types","categories","maxLength","SettingsPanel","needsUpdate","currentSettings","criticalSettings","savedSettings","feature","isDisabled","input","targetSection","fieldMapping","theme","prefersDark","language","enabled","exportData","getDeviceInfo","importData","cacheNames","stats","apps","dbSize","storageUsedEl","appsCountEl","cacheSizeEl","cacheSize","userAgentEl","platformEl","pwaSupportEl","hasServiceWorker","hasManifest","hasPushManager","pwaFeatures","g","setting","oldValue","newValue","defaultValue","AIdeasApp","SettingPanel","ErrorTracker","currentLaunchMode","loadingScreen","appContainer","settings","sidebarToggle","sidebar","layout","mobileSearchToggle","mobileSearchClose","searchContainer","headerSearch","searchInput","searchInputEl","nav","userBtn","userDropdown","thirtyDaysAgo","appsGrid","emptyState","iconHtml","defaultIcon","badgeHtml","card","pressTimer","isLongPress","newStatus","link","clickedLink","clickedBtn","sectionTitle","sectionSubtitle","titleData","allCount","favoritesCount","favorites","dynamicCategories","categoryMap","categoryItems","count","currentViewBtn","sortSelect","targetEl","menuHtml","menuDiv","menu","rect","menuRect","top","left","closeMenu","showDeleteAppConfirm","updates","targetElement","testKey","testValue","loadedValue"],"mappings":"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,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,MAC/CA,EAAE,KAAMA,EAAE,eAAgBA,EAAE,MAC/BA,EAAE,GAAIA,EAAE,SAAUA,EAAE,KACnBA,EAAE,MAAOA,EAAE,MAAOA,EAAE,MAAOA,EAAE,SAAUA,EAAE,KAC9CA,EAAE,MAAOA,EAAE,SAAUA,EAAE,KACzBA,EAAE,GAAIA,EAAE,GC9B9B,IAAImB,IACV,SAAUA,EAAW,CAClBA,EAAUA,EAAU,OAAY,CAAC,EAAI,SACrCA,EAAUA,EAAU,QAAa,CAAC,EAAI,SAC1C,GAAGA,KAAcA,GAAY,CAAA,EAAG,EACTA,GAAU,OCEA,IAAI,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,YACJ,EAAE,IAAKrW,GAAS,CAACA,EAAK,YAAW,EAAIA,CAAI,CAAC,CAAC,EAE0B6V,EAAG,MACHA,EAAG,MACTA,EAAG,MACHA,EAAG,MACHA,EAAG,MACDA,EAAG,MACLA,EAAG,MACPA,EAAG,IACDA,EAAG,IACVA,EAAG,MACQA,EAAG,MAGxB,IAAI,IAAI,CAChD,WACA,cACA,eACA,eACA,gBACA,mBACA,WACA,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,eACA,gBACA,WACA,iBACA,iBACA,UACJ,EAAE,IAAKS,GAAO,CAACA,EAAG,YAAW,EAAIA,CAAE,CAAC,CAAC,EAGjCpB,EAAE,EACFA,EAAE,IACFA,EAAE,WACFA,EAAE,KACFA,EAAE,GACFA,EAA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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51]}